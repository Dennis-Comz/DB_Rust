
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocIGUAL_IGUALNO_IGUALMENORMAYORMENOR_IGUALMAYOR_IGUALleftMASMENOSleftMULTIDIVMODULOrightNOTUNARIOABSOLUTO AND ARRFUNC ARROW AS BOOL BREAK CADENA CARACTER CHAR COMA CONTINUE DECIMAL DIV DOS_PT ELSE ENTERO F64 FALSE FN GUION_B I64 ID IF IGUAL IGUAL_IGUAL LET LLAVA LLAVC LOOP MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MODULO MULTI MUT NOT NO_IGUAL OR PARA PARC POW PRINTLN PT_COMA PUNTO RAIZ RETURN SEP_MATCH STR STRING TO_OWNED TO_STRING TRUE WHILE\n    inicio : clases_funciones\n    \n    clases_funciones : clases_funciones clase_funcion\n    \n    clases_funciones : clase_funcion\n    \n    clase_funcion : funcion\n    \n    instrucciones : instrucciones instruccion\n    \n    instrucciones : instruccion\n    \n    instruccion : prints PT_COMA\n                | declaracion PT_COMA\n                | sent_if\n                | match\n                | expresion\n                | return PT_COMA\n                | break PT_COMA\n                | continue PT_COMA\n                | loop\n                | while\n    \n    prints : PRINTLN NOT PARA CADENA COMA list_exp PARC\n    \n    prints : PRINTLN NOT PARA CADENA PARC\n    \n    list_exp : list_exp COMA expresion\n    \n    list_exp : expresion\n    \n    declaracion : LET MUT ID DOS_PT tipo IGUAL valores\n    \n    declaracion : LET MUT ID DOS_PT tipo\n    \n    declaracion : LET MUT ID IGUAL valores\n    \n    declaracion : LET MUT ID\n    \n    declaracion : LET ID DOS_PT tipo IGUAL valores\n    \n    declaracion : LET ID DOS_PT tipo\n    \n    declaracion : LET ID IGUAL valores\n    \n    declaracion : LET ID\n    \n    declaracion : ID IGUAL valores\n    \n    valores : expresion\n            | sent_if\n            | match\n            | loop\n    \n    sent_if : IF expresion statement sent_else\n    \n    sent_else : ELSE statement\n            | ELSE sent_if\n    \n    sent_else : \n    \n    match : MATCH expresion casos_match\n    \n    casos_match : LLAVA lista_casos default LLAVC\n    \n    lista_casos : lista_casos lista_expresiones ARROW statement COMA\n                | lista_casos lista_expresiones ARROW instruccion COMA\n    \n    lista_casos : lista_expresiones ARROW statement COMA\n                | lista_expresiones ARROW instruccion COMA\n    \n    lista_expresiones : lista_expresiones SEP_MATCH expresion\n    \n    lista_expresiones : expresion\n    \n    default : GUION_B ARROW statement COMA\n            | GUION_B ARROW instruccion COMA\n    \n    return : RETURN\n            | RETURN expresion\n    \n    break : BREAK\n        | BREAK expresion\n    \n    continue : CONTINUE\n    \n    loop : LOOP statement\n    \n    while : WHILE expresion statement\n    \n    funcion : FN ID PARA lista_parametros PARC statement\n            | FN ID PARA lista_parametros PARC ARRFUNC tipo statement\n            | FN ID PARA PARC statement\n    \n    funcion : FN ID PARA PARC ARRFUNC tipo statement\n    \n    lista_parametros : lista_parametros COMA ID DOS_PT tipo\n    \n    lista_parametros : ID DOS_PT tipo\n    \n    llamado : ID PARA list_exp PARC\n    \n    llamado : ID PARA PARC\n    \n    statement : LLAVA instrucciones LLAVC\n    \n    statement : LLAVA LLAVC\n    \n    tipo : I64\n        | F64\n        | BOOL\n        | STRING\n        | STR\n        | CHAR\n    \n    expresion : MENOS expresion %prec UNARIO\n            | expresion MAS expresion\n            | expresion MENOS expresion\n            | expresion MULTI expresion\n            | expresion DIV expresion\n            | expresion MODULO expresion\n    \n    expresion : I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC\n    \n    expresion : PARA expresion PARC\n    \n    expresion : llamado\n    \n    expresion : expresion IGUAL_IGUAL expresion\n            | expresion NO_IGUAL expresion\n            | expresion MAYOR expresion\n            | expresion MENOR expresion\n            | expresion MAYOR_IGUAL expresion\n            | expresion MENOR_IGUAL expresion\n    \n    expresion : expresion AND expresion\n            | expresion OR expresion\n    \n    expresion : NOT expresion %prec NOT\n    \n    expresion : ENTERO\n            | DECIMAL\n            | ID\n            | CADENA \n            | CARACTER\n            | TRUE\n            | FALSE\n    \n    expresion : expresion PUNTO TO_OWNED PARA PARC\n    \n    expresion : expresion PUNTO TO_STRING PARA PARC\n    \n    expresion : expresion PUNTO ABSOLUTO PARA PARC\n    \n    expresion : expresion PUNTO RAIZ PARA PARC\n    \n    expresion : expresion AS F64\n            | expresion AS I64\n    '
    
_lr_action_items = {'FN':([0,2,3,4,6,15,25,30,65,66,104,],[5,5,-3,-4,-2,-57,-55,-64,-58,-63,-56,]),'$endone,None,None,None,None,None,75,75,-100,-101,-78,75,-62,75,-61,75,-96,-97,-98,-99,75,75,75,75,-77,]),'NO_IGUAL':([36,45,47,52,53,54,55,56,57,89,90,91,96,97,98,100,101,103,106,107,108,109,110,111,112,113,114,115,116,117,118,123,124,126,131,136,137,152,158,160,161,162,163,169,186,187,201,202,],[76,-92,-91,-79,-89,-90,-93,-94,-95,-88,-91,76,76,76,-71,76,76,76,-72,-73,-74,-75,-76,None,None,None,None,None,None,76,76,-100,-101,-78,76,-62,76,-61,76,-96,-97,-98,-99,76,76,76,76,-77,]),'MAYOR':([36,45,47,52,53,54,55,56,57,89,90,91,96,97,98,100,101,103,106,107,108,109,110,111,112,113,114,115,116,117,118,123,124,126,131,136,137,152,158,160,161,162,163,169,186,187,201,202,],[77,-92,-91,-79,-89,-90,-93,-94,-95,-88,-91,77,77,77,-71,77,77,77,-72,-73,-74,-75,-76,None,None,None,None,None,None,77,77,-100,-101,-78,77,-62,77,-61,77,-96,-97,-98,-99,77,77,77,77,-77,]),'MENOR':([36,45,47,52,53,54,55,56,57,89,90,91,96,97,98,100,101,103,106,107,108,109,110,111,112,113,114,115,116,117,118,123,124,126,131,136,137,152,158,160,161,162,163,169,186,187,201,202,],[78,-92,-91,-79,-89,-90,-93,-94,-95,-88,-91,78,78,78,-71,78,78,78,-72,-73,-74,-75,-76,None,None,None,None,None,None,78,78,-100,-101,-78,78,-62,78,-61,78,-96,-97,-98,-99,78,78,78,78,-77,]),'MAYOR_IGUAL':([36,45,47,52,53,54,55,56,57,89,90,91,96,97,98,100,101,103,106,107,108,109,110,111,112,113,114,115,116,117,118,123,124,126,131,136,137,152,158,160,161,162,163,169,186,187,201,202,],[79,-92,-91,-79,-89,-90,-93,-94,-95,-88,-91,79,79,79,-71,79,79,79,-72,-73,-74,-75,-76,None,None,None,None,None,None,79,79,-100,-101,-78,79,-62,79,-61,79,-96,-97,-98,-99,79,79,79,79,-77,]),'MENOR_IGUAL':([36,45,47,52,53,54,55,56,57,89,90,91,96,97,98,100,101,103,106,107,108,109,110,111,112,113,114,115,116,117,118,123,124,126,131,136,137,152,158,160,161,162,163,169,186,187,201,202,],[80,-92,-91,-79,-89,-90,-93,-94,-95,-88,-91,80,80,80,-71,80,80,80,-72,-73,-74,-75,-76,None,None,None,None,None,None,80,80,-100,-101,-78,80,-62,80,-61,80,-96,-97,-98,-99,80,80,80,80,-77,]),'AND':([36,45,47,52,53,54,55,56,57,89,90,91,96,97,98,100,101,103,106,107,108,109,110,111,112,113,114,115,116,117,118,123,124,126,131,136,137,152,158,160,161,162,163,169,186,187,201,202,],[81,-92,-91,-79,-89,-90,-93,-94,-95,-88,-91,81,81,81,-71,81,81,81,-72,-73,-74,-75,-76,-80,-81,-82,-83,-84,-85,-86,81,-100,-101,-78,81,-62,81,-61,81,-96,-97,-98,-99,81,81,81,81,-77,]),'OR':([36,45,47,52,53,54,55,56,57,89,90,91,96,97,98,100,101,103,106,107,108,109,110,111,112,113,114,115,116,117,118,123,124,126,131,136,137,152,158,160,161,162,163,169,186,187,201,202,],[82,-92,-91,-79,-89,-90,-93,-94,-95,-88,-91,82,82,82,-71,82,82,82,-72,-73,-74,-75,-76,-80,-81,-82,-83,-84,-85,-86,-87,-100,-101,-78,82,-62,82,-61,82,-96,-97,-98,-99,82,82,82,82,-77,]),'PUNTO':([36,45,47,52,53,54,55,56,57,89,90,91,96,97,98,100,101,103,106,107,108,109,110,111,112,113,114,115,116,117,118,123,124,126,131,136,137,152,158,160,161,162,163,169,186,187,201,202,],[83,-92,-91,-79,-89,-90,-93,-94,-95,-88,-91,83,83,83,-71,83,83,83,-72,-73,-74,-75,-76,-80,-81,-82,-83,-84,-85,-86,-87,-100,-101,-78,83,-62,83,-61,83,-96,-97,-98,-99,83,83,83,83,-77,]),'AS':([36,45,47,52,53,54,55,56,57,89,90,91,96,97,98,100,101,103,106,107,108,109,110,111,112,113,114,115,116,117,118,123,124,126,131,136,137,152,158,160,161,162,163,169,186,187,201,202,],[84,-92,-91,-79,-89,-90,-93,-94,-95,-88,-91,84,84,84,-71,84,84,84,-72,-73,-74,-75,-76,-80,-81,-82,-83,-84,-85,-86,-87,-100,-101,-78,84,-62,84,-61,84,-96,-97,-98,-99,84,84,84,84,-77,]),'ARROW':([45,52,53,54,55,56,57,89,90,98,106,107,108,109,110,111,112,113,114,115,116,117,118,123,124,126,136,152,157,158,160,161,162,163,173,174,186,202,],[-92,-79,-89,-90,-93,-94,-95,-88,-91,-71,-72,-73,-74,-75,-76,-80,-81,-82,-83,-84,-85,-86,-87,-100,-101,-78,-62,-61,175,-45,-96,-97,-98,-99,182,183,-44,-77,]),'SEP_MATCH':([45,52,53,54,55,56,57,89,90,98,106,107,108,109,110,111,112,113,114,115,116,117,118,123,124,126,136,152,157,158,160,161,162,163,173,186,202,],[-92,-79,-89,-90,-93,-94,-95,-88,-91,-71,-72,-73,-74,-75,-76,-80,-81,-82,-83,-84,-85,-86,-87,-100,-101,-78,-62,-61,176,-45,-96,-97,-98,-99,176,-44,-77,]),'MUT':([46,],[92,]),'TO_OWNED':([83,],[119,]),'TO_STRING':([83,],[120,]),'ABSOLUTO':([83,],[121,]),'RAIZ':([83,],[122,]),'POW':([141,],[159,]),'GUION_B':([156,194,195,197,198,],[174,-42,-43,-40,-41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'clases_funciones':([0,],[2,]),'clase_funcion':([0,2,],[3,6,]),'funcion':([0,2,],[4,4,]),'lista_parametros':([8,],[10,]),'statement':([11,13,28,61,63,96,103,155,175,182,183,],[15,25,65,102,104,138,142,170,184,190,192,]),'tipo':([12,16,26,64,128,148,],[18,28,63,105,150,166,]),'instrucciones':([17,],[29,]),'instruccion':([17,29,175,182,183,],[31,67,185,191,193,]),'prints':([17,29,175,182,183,],[32,32,32,32,32,]),'declaracion':([17,29,175,182,183,],[33,33,33,33,33,]),'sent_if':([17,29,94,129,149,155,168,175,179,182,183,],[34,34,132,132,132,171,132,34,132,34,34,]),'match':([17,29,94,129,149,168,175,179,182,183,],[35,35,133,133,133,133,35,133,35,35,]),'expresion':([17,29,43,44,48,49,50,58,59,62,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,129,140,149,153,156,164,168,175,176,177,179,182,183,196,],[36,36,89,91,96,97,98,100,101,103,106,107,108,109,110,111,112,113,114,115,116,117,118,131,137,131,158,131,169,158,137,131,36,186,187,131,36,36,201,]),'return':([17,29,175,182,183,],[37,37,37,37,37,]),'break':([17,29,175,182,183,],[38,38,38,38,38,]),'continue':([17,29,175,182,183,],[39,39,39,39,39,]),'loop':([17,29,94,129,149,168,175,179,182,183,],[40,40,134,134,134,134,40,134,40,40,]),'while':([17,29,175,182,183,],[41,41,41,41,41,]),'llamado':([17,29,43,44,48,49,50,58,59,62,70,71,72,73,74,75,76,77,78,79,80,81,82,94,95,129,140,149,153,156,164,168,175,176,177,179,182,183,196,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'valores':([94,129,149,168,179,],[130,151,167,180,189,]),'list_exp':([95,164,],[135,178,]),'casos_match':([97,],[139,]),'sent_else':([138,],[154,]),'lista_casos':([140,],[156,]),'lista_expresiones':([140,156,],[157,173,]),'default':([156,],[172,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> clases_funciones','inicio',1,'p_inicio','parser.py',47),
  ('clases_funciones -> clases_funciones clase_funcion','clases_funciones',2,'p_clases_funciones','parser.py',53),
  ('clases_funciones -> clase_funcion','clases_funciones',1,'p_clases_funciones_corte','parser.py',60),
  ('clase_funcion -> funcion','clase_funcion',1,'p_clase_funcion','parser.py',66),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_lista_instrucciones','parser.py',72),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',79),
  ('instruccion -> prints PT_COMA','instruccion',2,'p_instruccion','parser.py',85),
  ('instruccion -> declaracion PT_COMA','instruccion',2,'p_instruccion','parser.py',86),
  ('instruccion -> sent_if','instruccion',1,'p_instruccion','parser.py',87),
  ('instruccion -> match','instruccion',1,'p_instruccion','parser.py',88),
  ('instruccion -> expresion','instruccion',1,'p_instruccion','parser.py',89),
  ('instruccion -> return PT_COMA','instruccion',2,'p_instruccion','parser.py',90),
  ('instruccion -> break PT_COMA','instruccion',2,'p_instruccion','parser.py',91),
  ('instruccion -> continue PT_COMA','instruccion',2,'p_instruccion','parser.py',92),
  ('instruccion -> loop','instruccion',1,'p_instruccion','parser.py',93),
  ('instruccion -> while','instruccion',1,'p_instruccion','parser.py',94),
  ('prints -> PRINTLN NOT PARA CADENA COMA list_exp PARC','prints',7,'p_instruccion_println','parser.py',101),
  ('prints -> PRINTLN NOT PARA CADENA PARC','prints',5,'p_instruccion_println_cads','parser.py',107),
  ('list_exp -> list_exp COMA expresion','list_exp',3,'p_println_listexp','parser.py',113),
  ('list_exp -> expresion','list_exp',1,'p_println_listexp_exit','parser.py',120),
  ('declaracion -> LET MUT ID DOS_PT tipo IGUAL valores','declaracion',7,'p_instruccion_declaracion','parser.py',129),
  ('declaracion -> LET MUT ID DOS_PT tipo','declaracion',5,'p_declaracion_2','parser.py',142),
  ('declaracion -> LET MUT ID IGUAL valores','declaracion',5,'p_declaracion_3','parser.py',155),
  ('declaracion -> LET MUT ID','declaracion',3,'p_declaracion_4','parser.py',168),
  ('declaracion -> LET ID DOS_PT tipo IGUAL valores','declaracion',6,'p_declaracion_5','parser.py',181),
  ('declaracion -> LET ID DOS_PT tipo','declaracion',4,'p_declaracion_6','parser.py',194),
  ('declaracion -> LET ID IGUAL valores','declaracion',4,'p_declaracion_7','parser.py',207),
  ('declaracion -> LET ID','declaracion',2,'p_declaracion_8','parser.py',220),
  ('declaracion -> ID IGUAL valores','declaracion',3,'p__declaracion_asignacion','parser.py',233),
  ('valores -> expresion','valores',1,'p_declaracion_valores','parser.py',246),
  ('valores -> sent_if','valores',1,'p_declaracion_valores','parser.py',247),
  ('valores -> match','valores',1,'p_declaracion_valores','parser.py',248),
  ('valores -> loop','valores',1,'p_declaracion_valores','parser.py',249),
  ('sent_if -> IF expresion statement sent_else','sent_if',4,'p_instruccion_sent_if','parser.py',257),
  ('sent_else -> ELSE statement','sent_else',2,'p_sent_else','parser.py',263),
  ('sent_else -> ELSE sent_if','sent_else',2,'p_sent_else','parser.py',264),
  ('sent_else -> <empty>','sent_else',0,'p_sent_else_vacio','parser.py',270),
  ('match -> MATCH expresion casos_match','match',3,'p_instruccion_match','parser.py',279),
  ('casos_match -> LLAVA lista_casos default LLAVC','casos_match',4,'p_match_casos','parser.py',285),
  ('lista_casos -> lista_casos lista_expresiones ARROW statement COMA','lista_casos',5,'p_match_lista_casos','parser.py',292),
  ('lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA','lista_casos',5,'p_match_lista_casos','parser.py',293),
  ('lista_casos -> lista_expresiones ARROW statement COMA','lista_casos',4,'p_match_lista_casos_salida','parser.py',300),
  ('lista_casos -> lista_expresiones ARROW instruccion COMA','lista_casos',4,'p_match_lista_casos_salida','parser.py',301),
  ('lista_expresiones -> lista_expresiones SEP_MATCH expresion','lista_expresiones',3,'p_match_lista_expresiones','parser.py',307),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_match_lista_expresiones2','parser.py',314),
  ('default -> GUION_B ARROW statement COMA','default',4,'p_match_default','parser.py',320),
  ('default -> GUION_B ARROW instruccion COMA','default',4,'p_match_default','parser.py',321),
  ('return -> RETURN','return',1,'p_instruccion_return','parser.py',330),
  ('return -> RETURN expresion','return',2,'p_instruccion_return','parser.py',331),
  ('break -> BREAK','break',1,'p_instruccion_break','parser.py',343),
  ('break -> BREAK expresion','break',2,'p_instruccion_break','parser.py',344),
  ('continue -> CONTINUE','continue',1,'p_instruccion_continue','parser.py',356),
  ('loop -> LOOP statement','loop',2,'p_instruccion_loop','parser.py',365),
  ('while -> WHILE expresion statement','while',3,'p_instruccion_while','parser.py',374),
  ('funcion -> FN ID PARA lista_parametros PARC statement','funcion',6,'p_instruccion_funcion','parser.py',383),
  ('funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement','funcion',8,'p_instruccion_funcion','parser.py',384),
  ('funcion -> FN ID PARA PARC statement','funcion',5,'p_instruccion_funcion','parser.py',385),
  ('funcion -> FN ID PARA PARC ARRFUNC tipo statement','funcion',7,'p_funcion_diferente','parser.py',399),
  ('lista_parametros -> lista_parametros COMA ID DOS_PT tipo','lista_parametros',5,'p_funcion_params','parser.py',406),
  ('lista_parametros -> ID DOS_PT tipo','lista_parametros',3,'p_funcion_params2','parser.py',413),
  ('llamado -> ID PARA list_exp PARC','llamado',4,'p_instruccion_llamado','parser.py',422),
  ('llamado -> ID PARA PARC','llamado',3,'p_llamado2','parser.py',428),
  ('statement -> LLAVA instrucciones LLAVC','statement',3,'p_statement','parser.py',438),
  ('statement -> LLAVA LLAVC','statement',2,'p_statement_vacio','parser.py',444),
  ('tipo -> I64','tipo',1,'p_tipo','parser.py',452),
  ('tipo -> F64','tipo',1,'p_tipo','parser.py',453),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',454),
  ('tipo -> STRING','tipo',1,'p_tipo','parser.py',455),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',456),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',457),
  ('expresion -> MENOS expresion','expresion',2,'p_exp_aritmeticas','parser.py',475),
  ('expresion -> expresion MAS expresion','expresion',3,'p_exp_aritmeticas','parser.py',476),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_exp_aritmeticas','parser.py',477),
  ('expresion -> expresion MULTI expresion','expresion',3,'p_exp_aritmeticas','parser.py',478),
  ('expresion -> expresion DIV expresion','expresion',3,'p_exp_aritmeticas','parser.py',479),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_exp_aritmeticas','parser.py',480),
  ('expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC','expresion',9,'p_exp_potencia','parser.py',489),
  ('expresion -> PARA expresion PARC','expresion',3,'p_exp_parentesis','parser.py',495),
  ('expresion -> llamado','expresion',1,'p_exp_func','parser.py',503),
  ('expresion -> expresion IGUAL_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',510),
  ('expresion -> expresion NO_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',511),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_exp_relacionales','parser.py',512),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_exp_relacionales','parser.py',513),
  ('expresion -> expresion MAYOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',514),
  ('expresion -> expresion MENOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',515),
  ('expresion -> expresion AND expresion','expresion',3,'p_exp_logicas','parser.py',523),
  ('expresion -> expresion OR expresion','expresion',3,'p_exp_logicas','parser.py',524),
  ('expresion -> NOT expresion','expresion',2,'p_exp_not','parser.py',530),
  ('expresion -> ENTERO','expresion',1,'p_exp_primtivos','parser.py',539),
  ('expresion -> DECIMAL','expresion',1,'p_exp_primtivos','parser.py',540),
  ('expresion -> ID','expresion',1,'p_exp_primtivos','parser.py',541),
  ('expresion -> CADENA','expresion',1,'p_exp_primtivos','parser.py',542),
  ('expresion -> CARACTER','expresion',1,'p_exp_primtivos','parser.py',543),
  ('expresion -> TRUE','expresion',1,'p_exp_primtivos','parser.py',544),
  ('expresion -> FALSE','expresion',1,'p_exp_primtivos','parser.py',545),
  ('expresion -> expresion PUNTO TO_OWNED PARA PARC','expresion',5,'p_exp_cadena_toowned','parser.py',564),
  ('expresion -> expresion PUNTO TO_STRING PARA PARC','expresion',5,'p_exp_cadena_tostring','parser.py',570),
  ('expresion -> expresion PUNTO ABSOLUTO PARA PARC','expresion',5,'p_exp_absoluto','parser.py',576),
  ('expresion -> expresion PUNTO RAIZ PARA PARC','expresion',5,'p_exp_raiz','parser.py',582),
  ('expresion -> expresion AS F64','expresion',3,'p_exp_casteo','parser.py',588),
  ('expresion -> expresion AS I64','expresion',3,'p_exp_casteo','parser.py',589),
]
