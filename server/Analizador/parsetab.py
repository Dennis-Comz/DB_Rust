
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocIGUAL_IGUALNO_IGUALMENORMAYORMENOR_IGUALMAYOR_IGUALleftMASMENOSleftMULTIDIVMODULOrightNOTUNARIOABSOLUTO AND ARRFUNC ARROW AS BOOL BREAK CADENA CARACTER CHAR COMA CONTINUE DECIMAL DIV DOS_PT ELSE ENTERO F64 FALSE FN GUION_B I64 ID IF IGUAL IGUAL_IGUAL LET LLAVA LLAVC LOOP MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MODULO MULTI MUT NOT NO_IGUAL OR PARA PARC POW PRINTLN PT_COMA PUNTO RAIZ RETURN SEP_MATCH STR STRING TO_OWNED TO_STRING TRUE WHILE\n    inicio : clases_funciones\n    \n    clases_funciones : clases_funciones clase_funcion\n    \n    clases_funciones : clase_funcion\n    \n    clase_funcion : funcion\n    \n    clase_funcion : error LLAVC\n    \n    instrucciones : instrucciones instruccion\n    \n    instrucciones : instruccion\n    \n    instruccion : prints PT_COMA\n                | declaracion PT_COMA\n                | sent_if\n                | match\n                | expresion\n                | return PT_COMA\n                | break PT_COMA\n                | continue PT_COMA\n                | loop\n                | while\n    \n    prints : PRINTLN NOT PARA CADENA COMA list_exp PARC\n    \n    prints : PRINTLN NOT PARA CADENA PARC\n    \n    list_exp : list_exp COMA expresion\n    \n    list_exp : expresion\n    \n    declaracion : LET MUT ID DOS_PT tipo IGUAL valores\n    \n    declaracion : LET MUT ID DOS_PT tipo\n    \n    declaracion : LET MUT ID IGUAL valores\n    \n    declaracion : LET MUT ID\n    \n    declaracion : LET ID DOS_PT tipo IGUAL valores\n    \n    declaracion : LET ID DOS_PT tipo\n    \n    declaracion : LET ID IGUAL valores\n    \n    declaracion : LET ID\n    \n    declaracion : ID IGUAL valores\n    \n    valores : expresion\n            | sent_if\n            | match\n            | loop\n    \n    sent_if : IF expresion statement sent_else\n    \n    sent_else : ELSE statement\n            | ELSE sent_if\n    \n    sent_else : \n    \n    match : MATCH expresion casos_match\n    \n    casos_match : LLAVA lista_casos default LLAVC\n    \n    lista_casos : lista_casos lista_expresiones ARROW statement COMA\n                | lista_casos lista_expresiones ARROW instruccion COMA\n    \n    lista_casos : lista_expresiones ARROW statement COMA\n                | lista_expresiones ARROW instruccion COMA\n    \n    lista_expresiones : lista_expresiones SEP_MATCH expresion\n    \n    lista_expresiones : expresion\n    \n    default : GUION_B ARROW statement COMA\n            | GUION_B ARROW instruccion COMA\n    \n    return : RETURN\n            | RETURN expresion\n    \n    break : BREAK\n        | BREAK expresion\n    \n    continue : CONTINUE\n    \n    loop : LOOP statement\n    \n    while : WHILE expresion statement\n    \n    funcion : FN ID PARA lista_parametros PARC statement\n            | FN ID PARA lista_parametros PARC ARRFUNC tipo statement\n            | FN ID PARA PARC statement\n    \n    funcion : FN ID PARA PARC ARRFUNC tipo statement\n    \n    lista_parametros : lista_parametros COMA ID DOS_PT tipo\n    \n    lista_parametros : ID DOS_PT tipo\n    \n    llamado : ID PARA list_exp PARC\n    \n    llamado : ID PARA PARC\n    \n    statement : LLAVA instrucciones LLAVC\n    \n    statement : LLAVA LLAVC\n    \n    tipo : I64\n        | F64\n        | BOOL\n        | STRING\n        | STR\n        | CHAR\n    \n    expresion : MENOS expresion %prec UNARIO\n            | expresion MAS expresion\n            | expresion MENOS expresion\n            | expresion MULTI expresion\n            | expresion DIV expresion\n            | expresion MODULO expresion\n    \n    expresion : I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC\n    \n    expresion : PARA expresion PARC\n    \n    expresion : llamado\n    \n    expresion : expresion IGUAL_IGUAL expresion\n            | expresion NO_IGUAL expresion\n            | expresion MAYOR expresion\n            | expresion MENOR expresion\n            | expresion MAYOR_IGUAL expresion\n            | expresion MENOR_IGUAL expresion\n    \n    expresion : expresion AND expresion\n            | expresion OR expresion\n    \n    expresion : NOT expresion %prec NOT\n    \n    expresion : ENTERO\n            | DECIMAL\n            | ID\n            | CADENA \n            | CARACTER\n            | TRUE\n            | FALSE\n    \n    expresion : expresion PUNTO TO_OWNED PARA PARC\n    \n    expresion : expresion PUNTO TO_STRING PARA PARC\n    \n    expresion : expresion PUNTO ABSOLUTO PARA PARC\n    \n    expresion : expresion PUNTO RAIZ PARA PARC\n    \n    expresion : expresion AS F64\n            | expresion AS I64\n    '
    
_lr_action_items = {'error':([0,2,3,4,7,8,17,27,32,67,68,106,],[5,5,-3,-4,-2,-5,-58,-56,-65,-59,-64,-57,]),'FN':([0,2,3,4,7,8,17,27,32,67,68,106,],[6,6,-3,-4,-2,-5,-58,-56,-65,-59,-64,-57,]),'$endone,None,None,None,None,None,77,77,-101,-102,-79,77,-63,77,-62,77,-97,-98,-99,-100,77,77,77,77,-78,]),'NO_IGUAL':([38,47,49,54,55,56,57,58,59,91,92,93,98,99,100,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,125,126,128,133,138,139,154,160,162,163,164,165,171,188,189,203,204,],[78,-93,-92,-80,-90,-91,-94,-95,-96,-89,-92,78,78,78,-72,78,78,78,-73,-74,-75,-76,-77,None,None,None,None,None,None,78,78,-101,-102,-79,78,-63,78,-62,78,-97,-98,-99,-100,78,78,78,78,-78,]),'MAYOR':([38,47,49,54,55,56,57,58,59,91,92,93,98,99,100,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,125,126,128,133,138,139,154,160,162,163,164,165,171,188,189,203,204,],[79,-93,-92,-80,-90,-91,-94,-95,-96,-89,-92,79,79,79,-72,79,79,79,-73,-74,-75,-76,-77,None,None,None,None,None,None,79,79,-101,-102,-79,79,-63,79,-62,79,-97,-98,-99,-100,79,79,79,79,-78,]),'MENOR':([38,47,49,54,55,56,57,58,59,91,92,93,98,99,100,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,125,126,128,133,138,139,154,160,162,163,164,165,171,188,189,203,204,],[80,-93,-92,-80,-90,-91,-94,-95,-96,-89,-92,80,80,80,-72,80,80,80,-73,-74,-75,-76,-77,None,None,None,None,None,None,80,80,-101,-102,-79,80,-63,80,-62,80,-97,-98,-99,-100,80,80,80,80,-78,]),'MAYOR_IGUAL':([38,47,49,54,55,56,57,58,59,91,92,93,98,99,100,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,125,126,128,133,138,139,154,160,162,163,164,165,171,188,189,203,204,],[81,-93,-92,-80,-90,-91,-94,-95,-96,-89,-92,81,81,81,-72,81,81,81,-73,-74,-75,-76,-77,None,None,None,None,None,None,81,81,-101,-102,-79,81,-63,81,-62,81,-97,-98,-99,-100,81,81,81,81,-78,]),'MENOR_IGUAL':([38,47,49,54,55,56,57,58,59,91,92,93,98,99,100,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,125,126,128,133,138,139,154,160,162,163,164,165,171,188,189,203,204,],[82,-93,-92,-80,-90,-91,-94,-95,-96,-89,-92,82,82,82,-72,82,82,82,-73,-74,-75,-76,-77,None,None,None,None,None,None,82,82,-101,-102,-79,82,-63,82,-62,82,-97,-98,-99,-100,82,82,82,82,-78,]),'AND':([38,47,49,54,55,56,57,58,59,91,92,93,98,99,100,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,125,126,128,133,138,139,154,160,162,163,164,165,171,188,189,203,204,],[83,-93,-92,-80,-90,-91,-94,-95,-96,-89,-92,83,83,83,-72,83,83,83,-73,-74,-75,-76,-77,-81,-82,-83,-84,-85,-86,-87,83,-101,-102,-79,83,-63,83,-62,83,-97,-98,-99,-100,83,83,83,83,-78,]),'OR':([38,47,49,54,55,56,57,58,59,91,92,93,98,99,100,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,125,126,128,133,138,139,154,160,162,163,164,165,171,188,189,203,204,],[84,-93,-92,-80,-90,-91,-94,-95,-96,-89,-92,84,84,84,-72,84,84,84,-73,-74,-75,-76,-77,-81,-82,-83,-84,-85,-86,-87,-88,-101,-102,-79,84,-63,84,-62,84,-97,-98,-99,-100,84,84,84,84,-78,]),'PUNTO':([38,47,49,54,55,56,57,58,59,91,92,93,98,99,100,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,125,126,128,133,138,139,154,160,162,163,164,165,171,188,189,203,204,],[85,-93,-92,-80,-90,-91,-94,-95,-96,-89,-92,85,85,85,-72,85,85,85,-73,-74,-75,-76,-77,-81,-82,-83,-84,-85,-86,-87,-88,-101,-102,-79,85,-63,85,-62,85,-97,-98,-99,-100,85,85,85,85,-78,]),'AS':([38,47,49,54,55,56,57,58,59,91,92,93,98,99,100,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,125,126,128,133,138,139,154,160,162,163,164,165,171,188,189,203,204,],[86,-93,-92,-80,-90,-91,-94,-95,-96,-89,-92,86,86,86,-72,86,86,86,-73,-74,-75,-76,-77,-81,-82,-83,-84,-85,-86,-87,-88,-101,-102,-79,86,-63,86,-62,86,-97,-98,-99,-100,86,86,86,86,-78,]),'ARROW':([47,54,55,56,57,58,59,91,92,100,108,109,110,111,112,113,114,115,116,117,118,119,120,125,126,128,138,154,159,160,162,163,164,165,175,176,188,204,],[-93,-80,-90,-91,-94,-95,-96,-89,-92,-72,-73,-74,-75,-76,-77,-81,-82,-83,-84,-85,-86,-87,-88,-101,-102,-79,-63,-62,177,-46,-97,-98,-99,-100,184,185,-45,-78,]),'SEP_MATCH':([47,54,55,56,57,58,59,91,92,100,108,109,110,111,112,113,114,115,116,117,118,119,120,125,126,128,138,154,159,160,162,163,164,165,175,188,204,],[-93,-80,-90,-91,-94,-95,-96,-89,-92,-72,-73,-74,-75,-76,-77,-81,-82,-83,-84,-85,-86,-87,-88,-101,-102,-79,-63,-62,178,-46,-97,-98,-99,-100,178,-45,-78,]),'MUT':([48,],[94,]),'TO_OWNED':([85,],[121,]),'TO_STRING':([85,],[122,]),'ABSOLUTO':([85,],[123,]),'RAIZ':([85,],[124,]),'POW':([143,],[161,]),'GUION_B':([158,196,197,199,200,],[176,-43,-44,-41,-42,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'clases_funciones':([0,],[2,]),'clase_funcion':([0,2,],[3,7,]),'funcion':([0,2,],[4,4,]),'lista_parametros':([10,],[12,]),'statement':([13,15,30,63,65,98,105,157,177,184,185,],[17,27,67,104,106,140,144,172,186,192,194,]),'tipo':([14,18,28,66,130,150,],[20,30,65,107,152,168,]),'instrucciones':([19,],[31,]),'instruccion':([19,31,177,184,185,],[33,69,187,193,195,]),'prints':([19,31,177,184,185,],[34,34,34,34,34,]),'declaracion':([19,31,177,184,185,],[35,35,35,35,35,]),'sent_if':([19,31,96,131,151,157,170,177,181,184,185,],[36,36,134,134,134,173,134,36,134,36,36,]),'match':([19,31,96,131,151,170,177,181,184,185,],[37,37,135,135,135,135,37,135,37,37,]),'expresion':([19,31,45,46,50,51,52,60,61,64,72,73,74,75,76,77,78,79,80,81,82,83,84,96,97,131,142,151,155,158,166,170,177,178,179,181,184,185,198,],[38,38,91,93,98,99,100,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,133,139,133,160,133,171,160,139,133,38,188,189,133,38,38,203,]),'return':([19,31,177,184,185,],[39,39,39,39,39,]),'break':([19,31,177,184,185,],[40,40,40,40,40,]),'continue':([19,31,177,184,185,],[41,41,41,41,41,]),'loop':([19,31,96,131,151,170,177,181,184,185,],[42,42,136,136,136,136,42,136,42,42,]),'while':([19,31,177,184,185,],[43,43,43,43,43,]),'llamado':([19,31,45,46,50,51,52,60,61,64,72,73,74,75,76,77,78,79,80,81,82,83,84,96,97,131,142,151,155,158,166,170,177,178,179,181,184,185,198,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'valores':([96,131,151,170,181,],[132,153,169,182,191,]),'list_exp':([97,166,],[137,180,]),'casos_match':([99,],[141,]),'sent_else':([140,],[156,]),'lista_casos':([142,],[158,]),'lista_expresiones':([142,158,],[159,175,]),'default':([158,],[174,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> clases_funciones','inicio',1,'p_inicio','parser.py',47),
  ('clases_funciones -> clases_funciones clase_funcion','clases_funciones',2,'p_clases_funciones','parser.py',53),
  ('clases_funciones -> clase_funcion','clases_funciones',1,'p_clases_funciones_corte','parser.py',60),
  ('clase_funcion -> funcion','clase_funcion',1,'p_clase_funcion','parser.py',66),
  ('clase_funcion -> error LLAVC','clase_funcion',2,'p_clase_funcion_error','parser.py',72),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_lista_instrucciones','parser.py',79),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',86),
  ('instruccion -> prints PT_COMA','instruccion',2,'p_instruccion','parser.py',92),
  ('instruccion -> declaracion PT_COMA','instruccion',2,'p_instruccion','parser.py',93),
  ('instruccion -> sent_if','instruccion',1,'p_instruccion','parser.py',94),
  ('instruccion -> match','instruccion',1,'p_instruccion','parser.py',95),
  ('instruccion -> expresion','instruccion',1,'p_instruccion','parser.py',96),
  ('instruccion -> return PT_COMA','instruccion',2,'p_instruccion','parser.py',97),
  ('instruccion -> break PT_COMA','instruccion',2,'p_instruccion','parser.py',98),
  ('instruccion -> continue PT_COMA','instruccion',2,'p_instruccion','parser.py',99),
  ('instruccion -> loop','instruccion',1,'p_instruccion','parser.py',100),
  ('instruccion -> while','instruccion',1,'p_instruccion','parser.py',101),
  ('prints -> PRINTLN NOT PARA CADENA COMA list_exp PARC','prints',7,'p_instruccion_println','parser.py',108),
  ('prints -> PRINTLN NOT PARA CADENA PARC','prints',5,'p_instruccion_println_cads','parser.py',114),
  ('list_exp -> list_exp COMA expresion','list_exp',3,'p_println_listexp','parser.py',120),
  ('list_exp -> expresion','list_exp',1,'p_println_listexp_exit','parser.py',127),
  ('declaracion -> LET MUT ID DOS_PT tipo IGUAL valores','declaracion',7,'p_instruccion_declaracion','parser.py',136),
  ('declaracion -> LET MUT ID DOS_PT tipo','declaracion',5,'p_declaracion_2','parser.py',149),
  ('declaracion -> LET MUT ID IGUAL valores','declaracion',5,'p_declaracion_3','parser.py',162),
  ('declaracion -> LET MUT ID','declaracion',3,'p_declaracion_4','parser.py',175),
  ('declaracion -> LET ID DOS_PT tipo IGUAL valores','declaracion',6,'p_declaracion_5','parser.py',188),
  ('declaracion -> LET ID DOS_PT tipo','declaracion',4,'p_declaracion_6','parser.py',201),
  ('declaracion -> LET ID IGUAL valores','declaracion',4,'p_declaracion_7','parser.py',214),
  ('declaracion -> LET ID','declaracion',2,'p_declaracion_8','parser.py',227),
  ('declaracion -> ID IGUAL valores','declaracion',3,'p__declaracion_asignacion','parser.py',240),
  ('valores -> expresion','valores',1,'p_declaracion_valores','parser.py',253),
  ('valores -> sent_if','valores',1,'p_declaracion_valores','parser.py',254),
  ('valores -> match','valores',1,'p_declaracion_valores','parser.py',255),
  ('valores -> loop','valores',1,'p_declaracion_valores','parser.py',256),
  ('sent_if -> IF expresion statement sent_else','sent_if',4,'p_instruccion_sent_if','parser.py',264),
  ('sent_else -> ELSE statement','sent_else',2,'p_sent_else','parser.py',270),
  ('sent_else -> ELSE sent_if','sent_else',2,'p_sent_else','parser.py',271),
  ('sent_else -> <empty>','sent_else',0,'p_sent_else_vacio','parser.py',277),
  ('match -> MATCH expresion casos_match','match',3,'p_instruccion_match','parser.py',286),
  ('casos_match -> LLAVA lista_casos default LLAVC','casos_match',4,'p_match_casos','parser.py',292),
  ('lista_casos -> lista_casos lista_expresiones ARROW statement COMA','lista_casos',5,'p_match_lista_casos','parser.py',299),
  ('lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA','lista_casos',5,'p_match_lista_casos','parser.py',300),
  ('lista_casos -> lista_expresiones ARROW statement COMA','lista_casos',4,'p_match_lista_casos_salida','parser.py',307),
  ('lista_casos -> lista_expresiones ARROW instruccion COMA','lista_casos',4,'p_match_lista_casos_salida','parser.py',308),
  ('lista_expresiones -> lista_expresiones SEP_MATCH expresion','lista_expresiones',3,'p_match_lista_expresiones','parser.py',314),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_match_lista_expresiones2','parser.py',321),
  ('default -> GUION_B ARROW statement COMA','default',4,'p_match_default','parser.py',327),
  ('default -> GUION_B ARROW instruccion COMA','default',4,'p_match_default','parser.py',328),
  ('return -> RETURN','return',1,'p_instruccion_return','parser.py',337),
  ('return -> RETURN expresion','return',2,'p_instruccion_return','parser.py',338),
  ('break -> BREAK','break',1,'p_instruccion_break','parser.py',350),
  ('break -> BREAK expresion','break',2,'p_instruccion_break','parser.py',351),
  ('continue -> CONTINUE','continue',1,'p_instruccion_continue','parser.py',363),
  ('loop -> LOOP statement','loop',2,'p_instruccion_loop','parser.py',372),
  ('while -> WHILE expresion statement','while',3,'p_instruccion_while','parser.py',381),
  ('funcion -> FN ID PARA lista_parametros PARC statement','funcion',6,'p_instruccion_funcion','parser.py',390),
  ('funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement','funcion',8,'p_instruccion_funcion','parser.py',391),
  ('funcion -> FN ID PARA PARC statement','funcion',5,'p_instruccion_funcion','parser.py',392),
  ('funcion -> FN ID PARA PARC ARRFUNC tipo statement','funcion',7,'p_funcion_diferente','parser.py',406),
  ('lista_parametros -> lista_parametros COMA ID DOS_PT tipo','lista_parametros',5,'p_funcion_params','parser.py',413),
  ('lista_parametros -> ID DOS_PT tipo','lista_parametros',3,'p_funcion_params2','parser.py',420),
  ('llamado -> ID PARA list_exp PARC','llamado',4,'p_instruccion_llamado','parser.py',429),
  ('llamado -> ID PARA PARC','llamado',3,'p_llamado2','parser.py',435),
  ('statement -> LLAVA instrucciones LLAVC','statement',3,'p_statement','parser.py',445),
  ('statement -> LLAVA LLAVC','statement',2,'p_statement_vacio','parser.py',451),
  ('tipo -> I64','tipo',1,'p_tipo','parser.py',459),
  ('tipo -> F64','tipo',1,'p_tipo','parser.py',460),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',461),
  ('tipo -> STRING','tipo',1,'p_tipo','parser.py',462),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',463),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',464),
  ('expresion -> MENOS expresion','expresion',2,'p_exp_aritmeticas','parser.py',482),
  ('expresion -> expresion MAS expresion','expresion',3,'p_exp_aritmeticas','parser.py',483),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_exp_aritmeticas','parser.py',484),
  ('expresion -> expresion MULTI expresion','expresion',3,'p_exp_aritmeticas','parser.py',485),
  ('expresion -> expresion DIV expresion','expresion',3,'p_exp_aritmeticas','parser.py',486),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_exp_aritmeticas','parser.py',487),
  ('expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC','expresion',9,'p_exp_potencia','parser.py',496),
  ('expresion -> PARA expresion PARC','expresion',3,'p_exp_parentesis','parser.py',502),
  ('expresion -> llamado','expresion',1,'p_exp_func','parser.py',510),
  ('expresion -> expresion IGUAL_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',517),
  ('expresion -> expresion NO_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',518),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_exp_relacionales','parser.py',519),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_exp_relacionales','parser.py',520),
  ('expresion -> expresion MAYOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',521),
  ('expresion -> expresion MENOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',522),
  ('expresion -> expresion AND expresion','expresion',3,'p_exp_logicas','parser.py',530),
  ('expresion -> expresion OR expresion','expresion',3,'p_exp_logicas','parser.py',531),
  ('expresion -> NOT expresion','expresion',2,'p_exp_not','parser.py',537),
  ('expresion -> ENTERO','expresion',1,'p_exp_primtivos','parser.py',546),
  ('expresion -> DECIMAL','expresion',1,'p_exp_primtivos','parser.py',547),
  ('expresion -> ID','expresion',1,'p_exp_primtivos','parser.py',548),
  ('expresion -> CADENA','expresion',1,'p_exp_primtivos','parser.py',549),
  ('expresion -> CARACTER','expresion',1,'p_exp_primtivos','parser.py',550),
  ('expresion -> TRUE','expresion',1,'p_exp_primtivos','parser.py',551),
  ('expresion -> FALSE','expresion',1,'p_exp_primtivos','parser.py',552),
  ('expresion -> expresion PUNTO TO_OWNED PARA PARC','expresion',5,'p_exp_cadena_toowned','parser.py',571),
  ('expresion -> expresion PUNTO TO_STRING PARA PARC','expresion',5,'p_exp_cadena_tostring','parser.py',577),
  ('expresion -> expresion PUNTO ABSOLUTO PARA PARC','expresion',5,'p_exp_absoluto','parser.py',583),
  ('expresion -> expresion PUNTO RAIZ PARA PARC','expresion',5,'p_exp_raiz','parser.py',589),
  ('expresion -> expresion AS F64','expresion',3,'p_exp_casteo','parser.py',595),
  ('expresion -> expresion AS I64','expresion',3,'p_exp_casteo','parser.py',596),
]
