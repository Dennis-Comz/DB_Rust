
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTleftIGUAL_IGUALNO_IGUALMENORMAYORMENOR_IGUALMAYOR_IGUALleftMASMENOSleftMULTIDIVMODULOrightUNARIOAND BOOL CADENA CARACTER CHAR COMA DECIMAL DIV DOS_PT ELSE ENTERO F64 FALSE I64 ID IF IGUAL IGUAL_IGUAL LET LLAVA LLAVC MAS MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MODULO MULTI MUT NOT NO_IGUAL OR PARA PARC POW PRINT PT_COMA PUNTO STR STRING TO_OWNED TO_STRING TRUE\n    inicio : instrucciones\n    \n    instrucciones : instrucciones instruccion PT_COMA\n    \n    instrucciones : instruccion PT_COMA\n    \n    instruccion : print\n                | declaracion\n                | sent_if\n    \n    print : PRINT PARA expresion PARC\n    \n    declaracion : LET MUT ID DOS_PT tipo IGUAL expresion\n    \n    declaracion : LET MUT ID DOS_PT tipo\n    \n    declaracion : LET MUT ID IGUAL expresion\n    \n    declaracion : LET MUT ID\n    \n    declaracion : LET ID DOS_PT tipo IGUAL expresion\n    \n    declaracion : LET ID DOS_PT tipo\n    \n    declaracion : LET ID IGUAL expresion\n    \n    declaracion : LET ID\n    \n    declaracion : ID IGUAL expresion\n    \n    sent_if : IF expresion statement sent_else\n    \n    sent_else : ELSE statement\n            | ELSE sent_if\n    \n    sent_else : \n    \n    statement : LLAVA instrucciones LLAVC\n    \n    statement : LLAVA LLAVC\n    \n    tipo : I64\n        | F64\n        | BOOL\n        | STRING\n        | STR\n    \n    expresion : expresion MAS expresion\n           | expresion MENOS expresion\n           | expresion MULTI expresion\n           | expresion DIV expresion\n           | expresion MODULO expresion\n    \n    expresion : I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC\n    \n    expresion : PARA expresion PARC\n    \n    expresion : MENOS expresion %prec UNARIO\n    \n    expresion : expresion IGUAL_IGUAL expresion\n            | expresion NO_IGUAL expresion\n            | expresion MAYOR expresion\n            | expresion MENOR expresion\n            | expresion MAYOR_IGUAL expresion\n            | expresion MENOR_IGUAL expresion\n    \n    expresion : expresion AND expresion\n            | expresion OR expresion\n    \n    expresion : NOT expresion\n    \n    expresion : expresion PUNTO TO_OWNED PARA PARC\n    \n    expresion : expresion PUNTO TO_STRING PARA PARC\n    \n    expresion :  ENTERO\n    \n    expresion : DECIMAL\n    \n    expresion : CARACTER\n    \n    expresion : CADENA\n    \n    expresion : TRUE\n            | FALSE\n    \n    expresion : ID\n    '
    
_lr_action_items = {'PRINT':([0,2,12,29,50,82,],[7,7,-3,-2,7,7,]),'LET':([0,2,12,29,50,82,],[8,8,-3,-2,8,8,]),'ID':([0,2,8,10,12,13,14,16,18,20,21,29,33,36,37,38,39,40,41,42,43,44,45,46,47,48,50,57,82,88,95,99,102,],[9,9,15,28,-3,28,31,28,28,28,28,-2,28,28,28,28,28,28,28,28,28,28,28,28,28,28,9,28,9,28,28,28,28,]),'IF':([0,2,12,29,50,66,82,],[10,10,-3,-2,10,10,10,]),'$end':([1,2,12,29,],[0,-1,-3,-2,]),'PT_COMA':([3,4,5,6,11,15,22,23,24,25,26,27,28,31,34,35,51,54,55,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,83,85,86,87,89,90,93,96,97,98,100,104,],[12,-4,-5,-6,29,-15,-47,-48,-49,-50,-51,-52,-53,-11,-16,-20,-35,-44,-7,-13,-23,-24,-25,-26,-27,-14,-17,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-22,-34,-9,-10,-18,-19,-21,-12,-45,-46,-8,-33,]),'PARA':([7,10,13,16,18,20,21,33,36,37,38,39,40,41,42,43,44,45,46,47,48,57,80,81,88,94,95,99,102,],[13,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,91,92,20,99,20,20,20,]),'MUT':([8,],[14,]),'IGUAL':([9,15,31,58,59,60,61,62,63,86,],[16,33,57,88,-23,-24,-25,-26,-27,95,]),'I64':([10,13,16,18,20,21,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,56,57,88,95,99,102,],[19,19,19,19,19,19,59,19,19,19,19,19,19,19,19,19,19,19,19,19,19,59,19,19,19,19,19,]),'MENOS':([10,13,16,17,18,20,21,22,23,24,25,26,27,28,30,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,51,53,54,57,64,67,68,69,70,71,72,73,74,75,76,77,78,79,85,87,88,95,96,97,98,99,100,101,102,103,104,],[18,18,18,37,18,18,18,-47,-48,-49,-50,-51,-52,-53,37,18,37,18,18,18,18,18,18,18,18,18,18,18,18,18,-35,37,37,18,37,-28,-29,-30,-31,-32,37,37,37,37,37,37,37,37,-34,37,18,18,37,-45,-46,18,37,37,18,37,-33,]),'NOT':([10,13,16,18,20,21,33,36,37,38,39,40,41,42,43,44,45,46,47,48,57,88,95,99,102,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'ENTERO':([10,13,16,18,20,21,33,36,37,38,39,40,41,42,43,44,45,46,47,48,57,88,95,99,102,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'DECIMAL':([10,13,16,18,20,21,33,36,37,38,39,40,41,42,43,44,45,46,47,48,57,88,95,99,102,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'CARACTER':([10,13,16,18,20,21,33,36,37,38,39,40,41,42,43,44,45,46,47,48,57,88,95,99,102,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'CADENA':([10,13,16,18,20,21,33,36,37,38,39,40,41,42,43,44,45,46,47,48,57,88,95,99,102,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'TRUE':([10,13,16,18,20,21,33,36,37,38,39,40,41,42,43,44,45,46,47,48,57,88,95,99,102,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'FALSE':([10,13,16,18,20,21,33,36,37,38,39,40,41,42,43,44,45,46,47,48,57,88,95,99,102,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'LLAVC':([12,29,50,82,],[-3,-2,83,93,]),'DOS_PT':([15,19,31,52,],[32,52,56,84,]),'MAS':([17,22,23,24,25,26,27,28,30,34,51,53,54,64,67,68,69,70,71,72,73,74,75,76,77,78,79,85,87,96,97,98,100,101,103,104,],[36,-47,-48,-49,-50,-51,-52,-53,36,36,-35,36,36,36,-28,-29,-30,-31,-32,36,36,36,36,36,36,36,36,-34,36,36,-45,-46,36,36,36,-33,]),'MULTI':([17,22,23,24,25,26,27,28,30,34,51,53,54,64,67,68,69,70,71,72,73,74,75,76,77,78,79,85,87,96,97,98,100,101,103,104,],[38,-47,-48,-49,-50,-51,-52,-53,38,38,-35,38,38,38,38,38,-30,-31,-32,38,38,38,38,38,38,38,38,-34,38,38,-45,-46,38,38,38,-33,]),'DIV':([17,22,23,24,25,26,27,28,30,34,51,53,54,64,67,68,69,70,71,72,73,74,75,76,77,78,79,85,87,96,97,98,100,101,103,104,],[39,-47,-48,-49,-50,-51,-52,-53,39,39,-35,39,39,39,39,39,-30,-31,-32,39,39,39,39,39,39,39,39,-34,39,39,-45,-46,39,39,39,-33,]),'MODULO':([17,22,23,24,25,26,27,28,30,34,51,53,54,64,67,68,69,70,71,72,73,74,75,76,77,78,79,85,87,96,97,98,100,101,103,104,],[40,-47,-48,-49,-50,-51,-52,-53,40,40,-35,40,40,40,40,40,-30,-31,-32,40,40,40,40,40,40,40,40,-34,40,40,-45,-46,40,40,40,-33,]),'IGUAL_IGUAL':([17,22,23,24,25,26,27,28,30,34,51,53,54,64,67,68,69,70,71,72,73,74,75,76,77,78,79,85,87,96,97,98,100,101,103,104,],[41,-47,-48,-49,-50,-51,-52,-53,41,41,-35,41,41,41,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,41,41,-34,41,41,-45,-46,41,41,41,-33,]),'NO_IGUAL':([17,22,23,24,25,26,27,28,30,34,51,53,54,64,67,68,69,70,71,72,73,74,75,76,77,78,79,85,87,96,97,98,100,101,103,104,],[42,-47,-48,-49,-50,-51,-52,-53,42,42,-35,42,42,42,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,42,42,-34,42,42,-45,-46,42,42,42,-33,]),'MAYOR':([17,22,23,24,25,26,27,28,30,34,51,53,54,64,67,68,69,70,71,72,73,74,75,76,77,78,79,85,87,96,97,98,100,101,103,104,],[43,-47,-48,-49,-50,-51,-52,-53,43,43,-35,43,43,43,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,43,43,-34,43,43,-45,-46,43,43,43,-33,]),'MENOR':([17,22,23,24,25,26,27,28,30,34,51,53,54,64,67,68,69,70,71,72,73,74,75,76,77,78,79,85,87,96,97,98,100,101,103,104,],[44,-47,-48,-49,-50,-51,-52,-53,44,44,-35,44,44,44,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,44,44,-34,44,44,-45,-46,44,44,44,-33,]),'MAYOR_IGUAL':([17,22,23,24,25,26,27,28,30,34,51,53,54,64,67,68,69,70,71,72,73,74,75,76,77,78,79,85,87,96,97,98,100,101,103,104,],[45,-47,-48,-49,-50,-51,-52,-53,45,45,-35,45,45,45,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,45,45,-34,45,45,-45,-46,45,45,45,-33,]),'MENOR_IGUAL':([17,22,23,24,25,26,27,28,30,34,51,53,54,64,67,68,69,70,71,72,73,74,75,76,77,78,79,85,87,96,97,98,100,101,103,104,],[46,-47,-48,-49,-50,-51,-52,-53,46,46,-35,46,46,46,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,46,46,-34,46,46,-45,-46,46,46,46,-33,]),'AND':([17,22,23,24,25,26,27,28,30,34,51,53,54,64,67,68,69,70,71,72,73,74,75,76,77,78,79,85,87,96,97,98,100,101,103,104,],[47,-47,-48,-49,-50,-51,-52,-53,47,47,-35,47,-44,47,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,47,-34,47,47,-45,-46,47,47,47,-33,]),'OR':([17,22,23,24,25,26,27,28,30,34,51,53,54,64,67,68,69,70,71,72,73,74,75,76,77,78,79,85,87,96,97,98,100,101,103,104,],[48,-47,-48,-49,-50,-51,-52,-53,48,48,-35,48,-44,48,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-34,48,48,-45,-46,48,48,48,-33,]),'PUNTO':([17,22,23,24,25,26,27,28,30,34,51,53,54,64,67,68,69,70,71,72,73,74,75,76,77,78,79,85,87,96,97,98,100,101,103,104,],[49,-47,-48,-49,-50,-51,-52,-53,49,49,-35,49,-44,49,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-34,49,49,-45,-46,49,49,49,-33,]),'LLAVA':([17,22,23,24,25,26,27,28,51,54,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,97,98,104,],[50,-47,-48,-49,-50,-51,-52,-53,-35,-44,50,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-34,-45,-46,-33,]),'PARC':([22,23,24,25,26,27,28,30,51,53,54,67,68,69,70,71,72,73,74,75,76,77,78,79,85,91,92,97,98,103,104,],[-47,-48,-49,-50,-51,-52,-53,55,-35,85,-44,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-34,97,98,-45,-46,104,-33,]),'COMA':([22,23,24,25,26,27,28,51,54,67,68,69,70,71,72,73,74,75,76,77,78,79,85,97,98,101,104,],[-47,-48,-49,-50,-51,-52,-53,-35,-44,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-34,-45,-46,102,-33,]),'F64':([32,56,],[60,60,]),'BOOL':([32,56,],[61,61,]),'STRING':([32,56,],[62,62,]),'STR':([32,56,],[63,63,]),'ELSE':([35,83,93,],[66,-22,-21,]),'TO_OWNED':([49,],[80,]),'TO_STRING':([49,],[81,]),'POW':([84,],[94,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'instrucciones':([0,50,],[2,82,]),'instruccion':([0,2,50,82,],[3,11,3,11,]),'print':([0,2,50,82,],[4,4,4,4,]),'declaracion':([0,2,50,82,],[5,5,5,5,]),'sent_if':([0,2,50,66,82,],[6,6,6,90,6,]),'expresion':([10,13,16,18,20,21,33,36,37,38,39,40,41,42,43,44,45,46,47,48,57,88,95,99,102,],[17,30,34,51,53,54,64,67,68,69,70,71,72,73,74,75,76,77,78,79,87,96,100,101,103,]),'statement':([17,66,],[35,89,]),'tipo':([32,56,],[58,86,]),'sent_else':([35,],[65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> instrucciones','inicio',1,'p_inicio','parser.py',83),
  ('instrucciones -> instrucciones instruccion PT_COMA','instrucciones',3,'p_lista_instrucciones','parser.py',89),
  ('instrucciones -> instruccion PT_COMA','instrucciones',2,'p_instrucciones_instruccion','parser.py',96),
  ('instruccion -> print','instruccion',1,'p_instruccion','parser.py',102),
  ('instruccion -> declaracion','instruccion',1,'p_instruccion','parser.py',103),
  ('instruccion -> sent_if','instruccion',1,'p_instruccion','parser.py',104),
  ('print -> PRINT PARA expresion PARC','print',4,'p_instruccion_print','parser.py',110),
  ('declaracion -> LET MUT ID DOS_PT tipo IGUAL expresion','declaracion',7,'p_instruccion_declaracion','parser.py',117),
  ('declaracion -> LET MUT ID DOS_PT tipo','declaracion',5,'p_declaracion_2','parser.py',130),
  ('declaracion -> LET MUT ID IGUAL expresion','declaracion',5,'p_declaracion_3','parser.py',143),
  ('declaracion -> LET MUT ID','declaracion',3,'p_declaracion_4','parser.py',156),
  ('declaracion -> LET ID DOS_PT tipo IGUAL expresion','declaracion',6,'p_declaracion_5','parser.py',169),
  ('declaracion -> LET ID DOS_PT tipo','declaracion',4,'p_declaracion_6','parser.py',182),
  ('declaracion -> LET ID IGUAL expresion','declaracion',4,'p_declaracion_7','parser.py',195),
  ('declaracion -> LET ID','declaracion',2,'p_declaracion_8','parser.py',208),
  ('declaracion -> ID IGUAL expresion','declaracion',3,'p__declaracion_asignacion','parser.py',221),
  ('sent_if -> IF expresion statement sent_else','sent_if',4,'p_instruccion_sent_if','parser.py',235),
  ('sent_else -> ELSE statement','sent_else',2,'p_sent_else','parser.py',241),
  ('sent_else -> ELSE sent_if','sent_else',2,'p_sent_else','parser.py',242),
  ('sent_else -> <empty>','sent_else',0,'p_sent_else_vacio','parser.py',248),
  ('statement -> LLAVA instrucciones LLAVC','statement',3,'p_statement','parser.py',254),
  ('statement -> LLAVA LLAVC','statement',2,'p_statement_vacio','parser.py',260),
  ('tipo -> I64','tipo',1,'p_tipo','parser.py',266),
  ('tipo -> F64','tipo',1,'p_tipo','parser.py',267),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',268),
  ('tipo -> STRING','tipo',1,'p_tipo','parser.py',269),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',270),
  ('expresion -> expresion MAS expresion','expresion',3,'p_exp_aritmeticas','parser.py',286),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_exp_aritmeticas','parser.py',287),
  ('expresion -> expresion MULTI expresion','expresion',3,'p_exp_aritmeticas','parser.py',288),
  ('expresion -> expresion DIV expresion','expresion',3,'p_exp_aritmeticas','parser.py',289),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_exp_aritmeticas','parser.py',290),
  ('expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC','expresion',9,'p_exp_potencia','parser.py',296),
  ('expresion -> PARA expresion PARC','expresion',3,'p_exp_parentesis','parser.py',302),
  ('expresion -> MENOS expresion','expresion',2,'p_exp_unario','parser.py',309),
  ('expresion -> expresion IGUAL_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',318),
  ('expresion -> expresion NO_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',319),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_exp_relacionales','parser.py',320),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_exp_relacionales','parser.py',321),
  ('expresion -> expresion MAYOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',322),
  ('expresion -> expresion MENOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',323),
  ('expresion -> expresion AND expresion','expresion',3,'p_exp_logicas','parser.py',331),
  ('expresion -> expresion OR expresion','expresion',3,'p_exp_logicas','parser.py',332),
  ('expresion -> NOT expresion','expresion',2,'p_exp_not','parser.py',338),
  ('expresion -> expresion PUNTO TO_OWNED PARA PARC','expresion',5,'p_exp_cadena_toowned','parser.py',346),
  ('expresion -> expresion PUNTO TO_STRING PARA PARC','expresion',5,'p_exp_cadena_tostring','parser.py',352),
  ('expresion -> ENTERO','expresion',1,'p_exp_entero','parser.py',359),
  ('expresion -> DECIMAL','expresion',1,'p_exp_decimal','parser.py',365),
  ('expresion -> CARACTER','expresion',1,'p_exp_caracter','parser.py',371),
  ('expresion -> CADENA','expresion',1,'p_exp_cadena_pointer','parser.py',377),
  ('expresion -> TRUE','expresion',1,'p_exp_booleano','parser.py',383),
  ('expresion -> FALSE','expresion',1,'p_exp_booleano','parser.py',384),
  ('expresion -> ID','expresion',1,'p_exp_identificador','parser.py',393),
]
