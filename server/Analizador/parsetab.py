
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTleftIGUAL_IGUALNO_IGUALMENORMAYORMENOR_IGUALMAYOR_IGUALleftMASMENOSleftMULTIDIVMODULOrightUNARIOAND BOOL CADENA CARACTER CHAR COMA DECIMAL DIV DOS_PT ENTERO F64 FALSE I64 ID IGUAL IGUAL_IGUAL LET MAS MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MODULO MULTI MUT NOT NO_IGUAL OR PARA PARC POW PRINT PT_COMA PUNTO STR STRING TO_OWNED TO_STRING TRUE\n    inicio : instrucciones\n    \n    instrucciones : instrucciones instruccion PT_COMA\n    \n    instrucciones : instruccion PT_COMA\n    \n    instruccion : print\n                | declaracion\n    \n    print : PRINT PARA expresion PARC\n    \n    declaracion : LET MUT ID DOS_PT tipo IGUAL expresion\n    \n    tipo : I64\n        | F64\n        | BOOL\n        | STRING\n        | STR\n    \n    expresion : expresion MAS expresion\n           | expresion MENOS expresion\n           | expresion MULTI expresion\n           | expresion DIV expresion\n           | expresion MODULO expresion\n    \n    expresion : I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC\n    \n    expresion : PARA expresion PARC\n    \n    expresion : MENOS expresion %prec UNARIO\n    \n    expresion : expresion IGUAL_IGUAL expresion\n            | expresion NO_IGUAL expresion\n            | expresion MAYOR expresion\n            | expresion MENOR expresion\n            | expresion MAYOR_IGUAL expresion\n            | expresion MENOR_IGUAL expresion\n    \n    expresion : expresion AND expresion\n            | expresion OR expresion\n    \n    expresion : NOT expresion\n    \n    expresion : expresion PUNTO TO_OWNED PARA PARC\n    \n    expresion : expresion PUNTO TO_STRING PARA PARC\n    \n    expresion :  ENTERO\n    \n    expresion : DECIMAL\n    \n    expresion : CARACTER\n    \n    expresion : CADENA\n    \n    expresion : TRUE\n            | FALSE\n    \n    expresion : ID\n    '
    
_lr_action_items = {'PRINT':([0,2,9,12,],[6,6,-3,-2,]),'LET':([0,2,9,12,],[7,7,-3,-2,]),'$end':([1,2,9,12,],[0,-1,-3,-2,]),'PT_COMA':([3,4,5,8,18,19,20,21,22,23,24,27,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,73,74,76,80,],[9,-4,-5,12,-32,-33,-34,-35,-36,-37,-38,-6,-20,-29,-19,-13,-14,-15,-16,-17,-21,-22,-23,-24,-25,-26,-27,-28,-30,-31,-7,-18,]),'PARA':([6,10,13,15,17,28,29,30,31,32,33,34,35,36,37,38,39,40,60,61,71,72,75,78,],[10,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,69,70,75,13,13,13,]),'MUT':([7,],[11,]),'I64':([10,13,15,17,28,29,30,31,32,33,34,35,36,37,38,39,40,45,72,75,78,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,64,16,16,16,]),'MENOS':([10,13,14,15,17,18,19,20,21,22,23,24,26,28,29,30,31,32,33,34,35,36,37,38,39,40,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,72,73,74,75,76,77,78,79,80,],[15,15,29,15,15,-32,-33,-34,-35,-36,-37,-38,29,15,15,15,15,15,15,15,15,15,15,15,15,15,-20,29,-19,-13,-14,-15,-16,-17,29,29,29,29,29,29,29,29,15,-30,-31,15,29,29,15,29,-18,]),'NOT':([10,13,15,17,28,29,30,31,32,33,34,35,36,37,38,39,40,72,75,78,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'ENTERO':([10,13,15,17,28,29,30,31,32,33,34,35,36,37,38,39,40,72,75,78,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'DECIMAL':([10,13,15,17,28,29,30,31,32,33,34,35,36,37,38,39,40,72,75,78,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'CARACTER':([10,13,15,17,28,29,30,31,32,33,34,35,36,37,38,39,40,72,75,78,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'CADENA':([10,13,15,17,28,29,30,31,32,33,34,35,36,37,38,39,40,72,75,78,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'TRUE':([10,13,15,17,28,29,30,31,32,33,34,35,36,37,38,39,40,72,75,78,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'FALSE':([10,13,15,17,28,29,30,31,32,33,34,35,36,37,38,39,40,72,75,78,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'ID':([10,11,13,15,17,28,29,30,31,32,33,34,35,36,37,38,39,40,72,75,78,],[24,25,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'PARC':([14,18,19,20,21,22,23,24,26,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,69,70,73,74,79,80,],[27,-32,-33,-34,-35,-36,-37,-38,46,-20,-29,-19,-13,-14,-15,-16,-17,-21,-22,-23,-24,-25,-26,-27,-28,73,74,-30,-31,80,-18,]),'MAS':([14,18,19,20,21,22,23,24,26,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,73,74,76,77,79,80,],[28,-32,-33,-34,-35,-36,-37,-38,28,-20,28,-19,-13,-14,-15,-16,-17,28,28,28,28,28,28,28,28,-30,-31,28,28,28,-18,]),'MULTI':([14,18,19,20,21,22,23,24,26,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,73,74,76,77,79,80,],[30,-32,-33,-34,-35,-36,-37,-38,30,-20,30,-19,30,30,-15,-16,-17,30,30,30,30,30,30,30,30,-30,-31,30,30,30,-18,]),'DIV':([14,18,19,20,21,22,23,24,26,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,73,74,76,77,79,80,],[31,-32,-33,-34,-35,-36,-37,-38,31,-20,31,-19,31,31,-15,-16,-17,31,31,31,31,31,31,31,31,-30,-31,31,31,31,-18,]),'MODULO':([14,18,19,20,21,22,23,24,26,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,73,74,76,77,79,80,],[32,-32,-33,-34,-35,-36,-37,-38,32,-20,32,-19,32,32,-15,-16,-17,32,32,32,32,32,32,32,32,-30,-31,32,32,32,-18,]),'IGUAL_IGUAL':([14,18,19,20,21,22,23,24,26,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,73,74,76,77,79,80,],[33,-32,-33,-34,-35,-36,-37,-38,33,-20,33,-19,-13,-14,-15,-16,-17,-21,-22,-23,-24,-25,-26,33,33,-30,-31,33,33,33,-18,]),'NO_IGUAL':([14,18,19,20,21,22,23,24,26,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,73,74,76,77,79,80,],[34,-32,-33,-34,-35,-36,-37,-38,34,-20,34,-19,-13,-14,-15,-16,-17,-21,-22,-23,-24,-25,-26,34,34,-30,-31,34,34,34,-18,]),'MAYOR':([14,18,19,20,21,22,23,24,26,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,73,74,76,77,79,80,],[35,-32,-33,-34,-35,-36,-37,-38,35,-20,35,-19,-13,-14,-15,-16,-17,-21,-22,-23,-24,-25,-26,35,35,-30,-31,35,35,35,-18,]),'MENOR':([14,18,19,20,21,22,23,24,26,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,73,74,76,77,79,80,],[36,-32,-33,-34,-35,-36,-37,-38,36,-20,36,-19,-13,-14,-15,-16,-17,-21,-22,-23,-24,-25,-26,36,36,-30,-31,36,36,36,-18,]),'MAYOR_IGUAL':([14,18,19,20,21,22,23,24,26,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,73,74,76,77,79,80,],[37,-32,-33,-34,-35,-36,-37,-38,37,-20,37,-19,-13,-14,-15,-16,-17,-21,-22,-23,-24,-25,-26,37,37,-30,-31,37,37,37,-18,]),'MENOR_IGUAL':([14,18,19,20,21,22,23,24,26,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,73,74,76,77,79,80,],[38,-32,-33,-34,-35,-36,-37,-38,38,-20,38,-19,-13,-14,-15,-16,-17,-21,-22,-23,-24,-25,-26,38,38,-30,-31,38,38,38,-18,]),'AND':([14,18,19,20,21,22,23,24,26,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,73,74,76,77,79,80,],[39,-32,-33,-34,-35,-36,-37,-38,39,-20,-29,-19,-13,-14,-15,-16,-17,-21,-22,-23,-24,-25,-26,-27,39,-30,-31,39,39,39,-18,]),'OR':([14,18,19,20,21,22,23,24,26,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,73,74,76,77,79,80,],[40,-32,-33,-34,-35,-36,-37,-38,40,-20,-29,-19,-13,-14,-15,-16,-17,-21,-22,-23,-24,-25,-26,-27,-28,-30,-31,40,40,40,-18,]),'PUNTO':([14,18,19,20,21,22,23,24,26,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,73,74,76,77,79,80,],[41,-32,-33,-34,-35,-36,-37,-38,41,-20,-29,-19,-13,-14,-15,-16,-17,-21,-22,-23,-24,-25,-26,-27,-28,-30,-31,41,41,41,-18,]),'DOS_PT':([16,25,43,],[43,45,62,]),'COMA':([18,19,20,21,22,23,24,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,73,74,77,80,],[-32,-33,-34,-35,-36,-37,-38,-20,-29,-19,-13,-14,-15,-16,-17,-21,-22,-23,-24,-25,-26,-27,-28,-30,-31,78,-18,]),'TO_OWNED':([41,],[60,]),'TO_STRING':([41,],[61,]),'F64':([45,],[65,]),'BOOL':([45,],[66,]),'STRING':([45,],[67,]),'STR':([45,],[68,]),'POW':([62,],[71,]),'IGUAL':([63,64,65,66,67,68,],[72,-8,-9,-10,-11,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,8,]),'print':([0,2,],[4,4,]),'declaracion':([0,2,],[5,5,]),'expresion':([10,13,15,17,28,29,30,31,32,33,34,35,36,37,38,39,40,72,75,78,],[14,26,42,44,47,48,49,50,51,52,53,54,55,56,57,58,59,76,77,79,]),'tipo':([45,],[63,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> instrucciones','inicio',1,'p_inicio','parser.py',72),
  ('instrucciones -> instrucciones instruccion PT_COMA','instrucciones',3,'p_lista_instrucciones','parser.py',78),
  ('instrucciones -> instruccion PT_COMA','instrucciones',2,'p_instrucciones_instruccion','parser.py',85),
  ('instruccion -> print','instruccion',1,'p_instruccion','parser.py',91),
  ('instruccion -> declaracion','instruccion',1,'p_instruccion','parser.py',92),
  ('print -> PRINT PARA expresion PARC','print',4,'p_instruccion_print','parser.py',98),
  ('declaracion -> LET MUT ID DOS_PT tipo IGUAL expresion','declaracion',7,'p_instruccion_declaracion','parser.py',104),
  ('tipo -> I64','tipo',1,'p_tipo','parser.py',153),
  ('tipo -> F64','tipo',1,'p_tipo','parser.py',154),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',155),
  ('tipo -> STRING','tipo',1,'p_tipo','parser.py',156),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',157),
  ('expresion -> expresion MAS expresion','expresion',3,'p_exp_aritmeticas','parser.py',173),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_exp_aritmeticas','parser.py',174),
  ('expresion -> expresion MULTI expresion','expresion',3,'p_exp_aritmeticas','parser.py',175),
  ('expresion -> expresion DIV expresion','expresion',3,'p_exp_aritmeticas','parser.py',176),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_exp_aritmeticas','parser.py',177),
  ('expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC','expresion',9,'p_exp_potencia','parser.py',183),
  ('expresion -> PARA expresion PARC','expresion',3,'p_exp_parentesis','parser.py',189),
  ('expresion -> MENOS expresion','expresion',2,'p_exp_unario','parser.py',196),
  ('expresion -> expresion IGUAL_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',205),
  ('expresion -> expresion NO_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',206),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_exp_relacionales','parser.py',207),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_exp_relacionales','parser.py',208),
  ('expresion -> expresion MAYOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',209),
  ('expresion -> expresion MENOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',210),
  ('expresion -> expresion AND expresion','expresion',3,'p_exp_logicas','parser.py',218),
  ('expresion -> expresion OR expresion','expresion',3,'p_exp_logicas','parser.py',219),
  ('expresion -> NOT expresion','expresion',2,'p_exp_not','parser.py',225),
  ('expresion -> expresion PUNTO TO_OWNED PARA PARC','expresion',5,'p_exp_cadena_toowned','parser.py',233),
  ('expresion -> expresion PUNTO TO_STRING PARA PARC','expresion',5,'p_exp_cadena_tostring','parser.py',239),
  ('expresion -> ENTERO','expresion',1,'p_exp_entero','parser.py',246),
  ('expresion -> DECIMAL','expresion',1,'p_exp_decimal','parser.py',252),
  ('expresion -> CARACTER','expresion',1,'p_exp_caracter','parser.py',258),
  ('expresion -> CADENA','expresion',1,'p_exp_cadena_pointer','parser.py',264),
  ('expresion -> TRUE','expresion',1,'p_exp_booleano','parser.py',270),
  ('expresion -> FALSE','expresion',1,'p_exp_booleano','parser.py',271),
  ('expresion -> ID','expresion',1,'p_exp_identificador','parser.py',280),
]
