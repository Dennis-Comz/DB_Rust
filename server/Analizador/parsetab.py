
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocIGUAL_IGUALNO_IGUALMENORMAYORMENOR_IGUALMAYOR_IGUALleftMASMENOSleftMULTIDIVMODULOrightNOTUNARIOABSOLUTO AND ARROW AS BOOL BREAK CADENA CARACTER CHAR COMA CONTINUE DECIMAL DIV DOS_PT ELSE ENTERO F64 FALSE GUION_B I64 ID IF IGUAL IGUAL_IGUAL LET LLAVA LLAVC LOOP MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MODULO MULTI MUT NOT NO_IGUAL OR PARA PARC POW PRINTLN PT_COMA PUNTO RAIZ RETURN SEP_MATCH STR STRING TO_OWNED TO_STRING TRUE WHILE\n    inicio : instrucciones\n    \n    instrucciones : instrucciones instruccion\n    \n    instrucciones : instruccion\n    \n    instruccion : prints PT_COMA\n                | declaracion PT_COMA\n                | sent_if\n                | match\n                | expresion\n                | return PT_COMA\n                | break PT_COMA\n                | continue PT_COMA\n                | loop\n                | while\n    \n    prints : PRINTLN NOT PARA CADENA COMA list_exp PARC\n    \n    prints : PRINTLN NOT PARA CADENA PARC\n    \n    list_exp : list_exp COMA expresion\n    \n    list_exp : expresion\n    \n    declaracion : LET MUT ID DOS_PT tipo IGUAL valores\n    \n    declaracion : LET MUT ID DOS_PT tipo\n    \n    declaracion : LET MUT ID IGUAL valores\n    \n    declaracion : LET MUT ID\n    \n    declaracion : LET ID DOS_PT tipo IGUAL valores\n    \n    declaracion : LET ID DOS_PT tipo\n    \n    declaracion : LET ID IGUAL valores\n    \n    declaracion : LET ID\n    \n    declaracion : ID IGUAL valores\n    \n    valores : expresion\n            | sent_if\n            | match\n            | loop\n    \n    sent_if : IF expresion statement sent_else\n    \n    sent_else : ELSE statement\n            | ELSE sent_if\n    \n    sent_else : \n    \n    match : MATCH expresion casos_match\n    \n    casos_match : LLAVA lista_casos default LLAVC\n    \n    lista_casos : lista_casos lista_expresiones ARROW statement COMA\n                | lista_casos lista_expresiones ARROW instruccion COMA\n    \n    lista_casos : lista_expresiones ARROW statement COMA\n                | lista_expresiones ARROW instruccion COMA\n    \n    lista_expresiones : lista_expresiones SEP_MATCH expresion\n    \n    lista_expresiones : expresion\n    \n    default : GUION_B ARROW statement COMA\n            | GUION_B ARROW instruccion COMA\n    \n    return : RETURN\n            | RETURN expresion\n    \n    break : BREAK\n        | BREAK expresion\n    \n    continue : CONTINUE\n    \n    loop : LOOP statement\n    \n    while : WHILE expresion statement\n    \n    statement : LLAVA instrucciones LLAVC\n    \n    statement : LLAVA LLAVC\n    \n    tipo : I64\n        | F64\n        | BOOL\n        | STRING\n        | STR\n        | CHAR\n    \n    expresion : MENOS expresion %prec UNARIO\n            | expresion MAS expresion\n            | expresion MENOS expresion\n            | expresion MULTI expresion\n            | expresion DIV expresion\n            | expresion MODULO expresion\n    \n    expresion : I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC\n    \n    expresion : PARA expresion PARC\n    \n    expresion : expresion IGUAL_IGUAL expresion\n            | expresion NO_IGUAL expresion\n            | expresion MAYOR expresion\n            | expresion MENOR expresion\n            | expresion MAYOR_IGUAL expresion\n            | expresion MENOR_IGUAL expresion\n    \n    expresion : expresion AND expresion\n            | expresion OR expresion\n    \n    expresion : NOT expresion %prec NOT\n    \n    expresion : ENTERO\n            | DECIMAL\n            | ID\n            | CADENA \n            | CARACTER\n            | TRUE\n            | FALSE\n    \n    expresion : expresion PUNTO TO_OWNED PARA PARC\n    \n    expresion : expresion PUNTO TO_STRING PARA PARC\n    \n    expresion : expresion PUNTO ABSOLUTO PARA PARC\n    \n    expresion : expresion PUNTO RAIZ PARA PARC\n    \n    expresion : expresion AS F64\n            | expresion AS I64\n    '
    
_lr_action_items = {'PRINTLN':([0,2,3,6,7,8,12,13,17,19,24,25,26,27,28,34,35,36,52,53,54,56,57,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,100,101,104,105,106,122,128,129,130,131,132,138,139,143,150,151,152,173,],[14,14,-3,-6,-7,-8,-12,-13,-80,-79,-77,-78,-81,-82,-83,-2,-4,-5,-9,-10,-11,-76,-79,-60,-50,14,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,-34,-35,14,-53,-51,-31,-52,-84,-85,-86,-87,-32,-33,14,-36,14,14,-66,]),'LET':([0,2,3,6,7,8,12,13,17,19,24,25,26,27,28,34,35,36,52,53,54,56,57,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,100,101,104,105,106,122,128,129,130,131,132,138,139,143,150,151,152,173,],[18,18,-3,-6,-7,-8,-12,-13,-80,-79,-77,-78,-81,-82,-83,-2,-4,-5,-9,-10,-11,-76,-79,-60,-50,18,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,-34,-35,18,-53,-51,-31,-52,-84,-85,-86,-87,-32,-33,18,-36,18,18,-66,]),'ID':([0,2,3,6,7,8,12,13,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,56,57,59,61,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,94,100,101,102,104,105,106,113,122,124,128,129,130,131,132,133,137,138,139,143,144,145,148,150,151,152,157,164,165,166,168,169,173,],[19,19,-3,-6,-7,-8,-12,-13,57,57,-80,60,-79,57,57,57,-77,-78,-81,-82,-83,57,57,57,-2,-4,-5,57,57,57,57,57,57,57,57,57,57,57,57,57,-9,-10,-11,-76,-79,92,57,-60,-50,19,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,57,-34,-35,57,19,-53,-51,57,-31,57,-52,-84,-85,-86,-87,57,57,-32,-33,19,57,57,57,-36,19,19,57,-39,-40,57,-37,-38,-66,]),'IF':([0,2,3,6,7,8,12,13,17,19,24,25,26,27,28,34,35,36,52,53,54,56,57,61,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,94,100,101,104,105,106,113,122,123,128,129,130,131,132,137,138,139,143,148,150,151,152,173,],[20,20,-3,-6,-7,-8,-12,-13,-80,-79,-77,-78,-81,-82,-83,-2,-4,-5,-9,-10,-11,-76,-79,20,-60,-50,20,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,20,-34,-35,20,-53,-51,20,-31,20,-52,-84,-85,-86,-87,20,-32,-33,20,20,-36,20,20,-66,]),'MATCH':([0,2,3,6,7,8,12,13,17,19,24,25,26,27,28,34,35,36,52,53,54,56,57,61,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,94,100,101,104,105,106,113,122,128,129,130,131,132,137,138,139,143,148,150,151,152,173,],[21,21,-3,-6,-7,-8,-12,-13,-80,-79,-77,-78,-81,-82,-83,-2,-4,-5,-9,-10,-11,-76,-79,21,-60,-50,21,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,21,-34,-35,21,-53,-51,21,-31,-52,-84,-85,-86,-87,21,-32,-33,21,21,-36,21,21,-66,]),'MENOS':([0,2,3,6,7,8,12,13,15,16,17,19,20,21,22,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,56,57,58,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,94,96,100,101,102,104,105,106,113,122,124,126,128,129,130,131,132,133,137,138,139,143,144,145,147,148,150,151,152,155,156,157,164,165,166,167,168,169,172,173,],[22,22,-3,-6,-7,38,-12,-13,22,22,-80,-79,22,22,22,-77,-78,-81,-82,-83,22,22,22,-2,-4,-5,22,22,22,22,22,22,22,22,22,22,22,22,22,-9,-10,-11,-76,-79,38,22,38,38,-60,38,38,-50,22,38,-61,-62,-63,-64,-65,38,38,38,38,38,38,38,38,-88,-89,-67,22,38,-34,-35,22,22,-53,-51,22,-31,22,38,-52,-84,-85,-86,-87,22,22,-32,-33,22,22,22,38,22,-36,22,22,38,38,22,-39,-40,22,38,-37,-38,38,-66,]),'I64':([0,2,3,6,7,8,12,13,15,16,17,19,20,21,22,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,56,57,61,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,93,94,100,101,102,104,105,106,112,113,122,124,128,129,130,131,132,133,137,138,139,143,144,145,148,150,151,152,157,164,165,166,168,169,173,],[23,23,-3,-6,-7,-8,-12,-13,23,23,-80,-79,23,23,23,-77,-78,-81,-82,-83,23,23,23,-2,-4,-5,23,23,23,23,23,23,23,23,23,23,23,23,23,89,-9,-10,-11,-76,-79,23,-60,-50,23,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,115,23,-34,-35,23,23,-53,-51,115,23,-31,23,-52,-84,-85,-86,-87,23,23,-32,-33,23,23,23,23,-36,23,23,23,-39,-40,23,-37,-38,-66,]),'PARA':([0,2,3,6,7,8,12,13,15,16,17,19,20,21,22,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,61,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,100,101,102,104,105,106,113,122,124,127,128,129,130,131,132,133,137,138,139,143,144,145,148,150,151,152,157,164,165,166,168,169,173,],[16,16,-3,-6,-7,-8,-12,-13,16,16,-80,-79,16,16,16,-77,-78,-81,-82,-83,16,16,16,-2,-4,-5,16,16,16,16,16,16,16,16,16,16,16,16,16,-9,-10,-11,90,-76,-79,16,-60,-50,16,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,107,108,109,110,-88,-89,-67,16,-34,-35,16,16,-53,-51,16,-31,16,145,-52,-84,-85,-86,-87,16,16,-32,-33,16,16,16,16,-36,16,16,16,-39,-40,16,-37,-38,-66,]),'NOT':([0,2,3,6,7,8,12,13,14,15,16,17,19,20,21,22,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,56,57,61,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,94,100,101,102,104,105,106,113,122,124,128,129,130,131,132,133,137,138,139,143,144,145,148,150,151,152,157,164,165,166,168,169,173,],[15,15,-3,-6,-7,-8,-12,-13,55,15,15,-80,-79,15,15,15,-77,-78,-81,-82,-83,15,15,15,-2,-4,-5,15,15,15,15,15,15,15,15,15,15,15,15,15,-9,-10,-11,-76,-79,15,-60,-50,15,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,15,-34,-35,15,15,-53,-51,15,-31,15,-52,-84,-85,-86,-87,15,15,-32,-33,15,15,15,15,-36,15,15,15,-39,-40,15,-37,-38,-66,]),'ENTERO':([0,2,3,6,7,8,12,13,15,16,17,19,20,21,22,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,56,57,61,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,94,100,101,102,104,105,106,113,122,124,128,129,130,131,132,133,137,138,139,143,144,145,148,150,151,152,157,164,165,166,168,169,173,],[24,24,-3,-6,-7,-8,-12,-13,24,24,-80,-79,24,24,24,-77,-78,-81,-82,-83,24,24,24,-2,-4,-5,24,24,24,24,24,24,24,24,24,24,24,24,24,-9,-10,-11,-76,-79,24,-60,-50,24,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,24,-34,-35,24,24,-53,-51,24,-31,24,-52,-84,-85,-86,-87,24,24,-32,-33,24,24,24,24,-36,24,24,24,-39,-40,24,-37,-38,-66,]),'DECIMAL':([0,2,3,6,7,8,12,13,15,16,17,19,20,21,22,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,56,57,61,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,94,100,101,102,104,105,106,113,122,124,128,129,130,131,132,133,137,138,139,143,144,145,148,150,151,152,157,164,165,166,168,169,173,],[25,25,-3,-6,-7,-8,-12,-13,25,25,-80,-79,25,25,25,-77,-78,-81,-82,-83,25,25,25,-2,-4,-5,25,25,25,25,25,25,25,25,25,25,25,25,25,-9,-10,-11,-76,-79,25,-60,-50,25,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,25,-34,-35,25,25,-53,-51,25,-31,25,-52,-84,-85,-86,-87,25,25,-32,-33,25,25,25,25,-36,25,25,25,-39,-40,25,-37,-38,-66,]),'CADENA':([0,2,3,6,7,8,12,13,15,16,17,19,20,21,22,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,56,57,61,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,90,91,94,100,101,102,104,105,106,113,122,124,128,129,130,131,132,133,137,138,139,143,144,145,148,150,151,152,157,164,165,166,168,169,173,],[17,17,-3,-6,-7,-8,-12,-13,17,17,-80,-79,17,17,17,-77,-78,-81,-82,-83,17,17,17,-2,-4,-5,17,17,17,17,17,17,17,17,17,17,17,17,17,-9,-10,-11,-76,-79,17,-60,-50,17,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,111,-67,17,-34,-35,17,17,-53,-51,17,-31,17,-52,-84,-85,-86,-87,17,17,-32,-33,17,17,17,17,-36,17,17,17,-39,-40,17,-37,-38,-66,]),'CARACTER':([0,2,3,6,7,8,12,13,15,16,17,19,20,21,22,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,56,57,61,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,94,100,101,102,104,105,106,113,122,124,128,129,130,131,132,133,137,138,139,143,144,145,148,150,151,152,157,164,165,166,168,169,173,],[26,26,-3,-6,-7,-8,-12,-13,26,26,-80,-79,26,26,26,-77,-78,-81,-82,-83,26,26,26,-2,-4,-5,26,26,26,26,26,26,26,26,26,26,26,26,26,-9,-10,-11,-76,-79,26,-60,-50,26,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,26,-34,-35,26,26,-53,-51,26,-31,26,-52,-84,-85,-86,-87,26,26,-32,-33,26,26,26,26,-36,26,26,26,-39,-40,26,-37,-38,-66,]),'TRUE':([0,2,3,6,7,8,12,13,15,16,17,19,20,21,22,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,56,57,61,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,94,100,101,102,104,105,106,113,122,124,128,129,130,131,132,133,137,138,139,143,144,145,148,150,151,152,157,164,165,166,168,169,173,],[27,27,-3,-6,-7,-8,-12,-13,27,27,-80,-79,27,27,27,-77,-78,-81,-82,-83,27,27,27,-2,-4,-5,27,27,27,27,27,27,27,27,27,27,27,27,27,-9,-10,-11,-76,-79,27,-60,-50,27,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,27,-34,-35,27,27,-53,-51,27,-31,27,-52,-84,-85,-86,-87,27,27,-32,-33,27,27,27,27,-36,27,27,27,-39,-40,27,-37,-38,-66,]),'FALSE':([0,2,3,6,7,8,12,13,15,16,17,19,20,21,22,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,56,57,61,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,94,100,101,102,104,105,106,113,122,124,128,129,130,131,132,133,137,138,139,143,144,145,148,150,151,152,157,164,165,166,168,169,173,],[28,28,-3,-6,-7,-8,-12,-13,28,28,-80,-79,28,28,28,-77,-78,-81,-82,-83,28,28,28,-2,-4,-5,28,28,28,28,28,28,28,28,28,28,28,28,28,-9,-10,-11,-76,-79,28,-60,-50,28,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,28,-34,-35,28,28,-53,-51,28,-31,28,-52,-84,-85,-86,-87,28,28,-32,-33,28,28,28,28,-36,28,28,28,-39,-40,28,-37,-38,-66,]),'RETURN':([0,2,3,6,7,8,12,13,17,19,24,25,26,27,28,34,35,36,52,53,54,56,57,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,100,101,104,105,106,122,128,129,130,131,132,138,139,143,150,151,152,173,],[29,29,-3,-6,-7,-8,-12,-13,-80,-79,-77,-78,-81,-82,-83,-2,-4,-5,-9,-10,-11,-76,-79,-60,-50,29,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,-34,-35,29,-53,-51,-31,-52,-84,-85,-86,-87,-32,-33,29,-36,29,29,-66,]),'BREAK':([0,2,3,6,7,8,12,13,17,19,24,25,26,27,28,34,35,36,52,53,54,56,57,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,100,101,104,105,106,122,128,129,130,131,132,138,139,143,150,151,152,173,],[30,30,-3,-6,-7,-8,-12,-13,-80,-79,-77,-78,-81,-82,-83,-2,-4,-5,-9,-10,-11,-76,-79,-60,-50,30,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,-34,-35,30,-53,-51,-31,-52,-84,-85,-86,-87,-32,-33,30,-36,30,30,-66,]),'CONTINUE':([0,2,3,6,7,8,12,13,17,19,24,25,26,27,28,34,35,36,52,53,54,56,57,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,100,101,104,105,106,122,128,129,130,131,132,138,139,143,150,151,152,173,],[31,31,-3,-6,-7,-8,-12,-13,-80,-79,-77,-78,-81,-82,-83,-2,-4,-5,-9,-10,-11,-76,-79,-60,-50,31,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,-34,-35,31,-53,-51,-31,-52,-84,-85,-86,-87,-32,-33,31,-36,31,31,-66,]),'LOOP':([0,2,3,6,7,8,12,13,17,19,24,25,26,27,28,34,35,36,52,53,54,56,57,61,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,94,100,101,104,105,106,113,122,128,129,130,131,132,137,138,139,143,148,150,151,152,173,],[32,32,-3,-6,-7,-8,-12,-13,-80,-79,-77,-78,-81,-82,-83,-2,-4,-5,-9,-10,-11,-76,-79,32,-60,-50,32,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,32,-34,-35,32,-53,-51,32,-31,-52,-84,-85,-86,-87,32,-32,-33,32,32,-36,32,32,-66,]),'WHILE':([0,2,3,6,7,8,12,13,17,19,24,25,26,27,28,34,35,36,52,53,54,56,57,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,100,101,104,105,106,122,128,129,130,131,132,138,139,143,150,151,152,173,],[33,33,-3,-6,-7,-8,-12,-13,-80,-79,-77,-78,-81,-82,-83,-2,-4,-5,-9,-10,-11,-76,-79,-60,-50,33,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,-34,-35,33,-53,-51,-31,-52,-84,-85,-86,-87,-32,-33,33,-36,33,33,-66,]),'$end':([1,2,3,6,7,8,12,13,17,19,24,25,26,27,28,34,35,36,52,53,54,56,57,64,68,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,100,101,105,106,122,128,129,130,131,132,138,139,150,173,],[0,-1,-3,-6,-7,-8,-12,-13,-80,-79,-77,-78,-81,-82,-83,-2,-4,-5,-9,-10,-11,-76,-79,-60,-50,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,-34,-35,-53,-51,-31,-52,-84,-85,-86,-87,-32,-33,-36,-66,]),'LLAVC':([3,6,7,8,12,13,17,19,24,25,26,27,28,34,35,36,52,53,54,56,57,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,100,101,104,105,106,122,128,129,130,131,132,138,139,140,150,170,171,173,],[-3,-6,-7,-8,-12,-13,-80,-79,-77,-78,-81,-82,-83,-2,-4,-5,-9,-10,-11,-76,-79,-60,-50,105,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,-34,-35,128,-53,-51,-31,-52,-84,-85,-86,-87,-32,-33,150,-36,-43,-44,-66,]),'PT_COMA':([4,5,9,10,11,17,24,25,26,27,28,29,30,31,56,57,60,64,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,92,95,96,97,98,99,100,101,105,114,115,116,117,118,119,120,121,122,128,129,130,131,132,134,135,136,138,139,149,150,158,159,173,],[35,36,52,53,54,-80,-77,-78,-81,-82,-83,-45,-47,-49,-76,-79,-25,-60,-46,-48,-50,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,-21,-26,-27,-28,-29,-30,-34,-35,-53,-23,-54,-55,-56,-57,-58,-59,-24,-31,-52,-84,-85,-86,-87,-15,-19,-20,-32,-33,-22,-36,-14,-18,-66,]),'COMA':([6,7,8,12,13,17,19,24,25,26,27,28,35,36,52,53,54,56,57,64,68,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,100,101,105,106,111,122,128,129,130,131,132,138,139,146,147,150,153,154,156,160,161,162,163,167,173,],[-6,-7,-8,-12,-13,-80,-79,-77,-78,-81,-82,-83,-4,-5,-9,-10,-11,-76,-79,-60,-50,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,-34,-35,-53,-51,133,-31,-52,-84,-85,-86,-87,-32,-33,157,-17,-36,164,165,166,168,169,170,171,-16,-66,]),'MAS':([8,17,19,24,25,26,27,28,56,57,58,62,63,64,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,96,126,129,130,131,132,147,155,156,167,172,173,],[37,-80,-79,-77,-78,-81,-82,-83,-76,-79,37,37,37,-60,37,37,37,-61,-62,-63,-64,-65,37,37,37,37,37,37,37,37,-88,-89,-67,37,37,-84,-85,-86,-87,37,37,37,37,37,-66,]),'MULTI':([8,17,19,24,25,26,27,28,56,57,58,62,63,64,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,96,126,129,130,131,132,147,155,156,167,172,173,],[39,-80,-79,-77,-78,-81,-82,-83,-76,-79,39,39,39,-60,39,39,39,39,39,-63,-64,-65,39,39,39,39,39,39,39,39,-88,-89,-67,39,39,-84,-85,-86,-87,39,39,39,39,39,-66,]),'DIV':([8,17,19,24,25,26,27,28,56,57,58,62,63,64,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,96,126,129,130,131,132,147,155,156,167,172,173,],[40,-80,-79,-77,-78,-81,-82,-83,-76,-79,40,40,40,-60,40,40,40,40,40,-63,-64,-65,40,40,40,40,40,40,40,40,-88,-89,-67,40,40,-84,-85,-86,-87,40,40,40,40,40,-66,]),'MODULO':([8,17,19,24,25,26,27,28,56,57,58,62,63,64,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,96,126,129,130,131,132,147,155,156,167,172,173,],[41,-80,-79,-77,-78,-81,-82,-83,-76,-79,41,41,41,-60,41,41,41,41,41,-63,-64,-65,41,41,41,41,41,41,41,41,-88,-89,-67,41,41,-84,-85,-86,-87,41,41,41,41,41,-66,]),'IGUAL_IGUAL':([8,17,19,24,25,26,27,28,56,57,58,62,63,64,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,96,126,129,130,131,132,147,155,156,167,172,173,],[42,-80,-79,-77,-78,-81,-82,-83,-76,-79,42,42,42,-60,42,42,42,-61,-62,-63,-64,-65,None,None,None,None,None,None,42,42,-88,-89,-67,42,42,-84,-85,-86,-87,42,42,42,42,42,-66,]),'NO_IGUAL':([8,17,19,24,25,26,27,28,56,57,58,62,63,64,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,96,126,129,130,131,132,147,155,156,167,172,173,],[43,-80,-79,-77,-78,-81,-82,-83,-76,-79,43,43,43,-60,43,43,43,-61,-62,-63,-64,-65,None,None,None,None,None,None,43,43,-88,-89,-67,43,43,-84,-85,-86,-87,43,43,43,43,43,-66,]),'MAYOR':([8,17,19,24,25,26,27,28,56,57,58,62,63,64,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,96,126,129,130,131,132,147,155,156,167,172,173,],[44,-80,-79,-77,-78,-81,-82,-83,-76,-79,44,44,44,-60,44,44,44,-61,-62,-63,-64,-65,None,None,None,None,None,None,44,44,-88,-89,-67,44,44,-84,-85,-86,-87,44,44,44,44,44,-66,]),'MENOR':([8,17,19,24,25,26,27,28,56,57,58,62,63,64,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,96,126,129,130,131,132,147,155,156,167,172,173,],[45,-80,-79,-77,-78,-81,-82,-83,-76,-79,45,45,45,-60,45,45,45,-61,-62,-63,-64,-65,None,None,None,None,None,None,45,45,-88,-89,-67,45,45,-84,-85,-86,-87,45,45,45,45,45,-66,]),'MAYOR_IGUAL':([8,17,19,24,25,26,27,28,56,57,58,62,63,64,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,96,126,129,130,131,132,147,155,156,167,172,173,],[46,-80,-79,-77,-78,-81,-82,-83,-76,-79,46,46,46,-60,46,46,46,-61,-62,-63,-64,-65,None,None,None,None,None,None,46,46,-88,-89,-67,46,46,-84,-85,-86,-87,46,46,46,46,46,-66,]),'MENOR_IGUAL':([8,17,19,24,25,26,27,28,56,57,58,62,63,64,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,96,126,129,130,131,132,147,155,156,167,172,173,],[47,-80,-79,-77,-78,-81,-82,-83,-76,-79,47,47,47,-60,47,47,47,-61,-62,-63,-64,-65,None,None,None,None,None,None,47,47,-88,-89,-67,47,47,-84,-85,-86,-87,47,47,47,47,47,-66,]),'AND':([8,17,19,24,25,26,27,28,56,57,58,62,63,64,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,96,126,129,130,131,132,147,155,156,167,172,173,],[48,-80,-79,-77,-78,-81,-82,-83,-76,-79,48,48,48,-60,48,48,48,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,48,-88,-89,-67,48,48,-84,-85,-86,-87,48,48,48,48,48,-66,]),'OR':([8,17,19,24,25,26,27,28,56,57,58,62,63,64,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,96,126,129,130,131,132,147,155,156,167,172,173,],[49,-80,-79,-77,-78,-81,-82,-83,-76,-79,49,49,49,-60,49,49,49,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,49,49,-84,-85,-86,-87,49,49,49,49,49,-66,]),'PUNTO':([8,17,19,24,25,26,27,28,56,57,58,62,63,64,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,96,126,129,130,131,132,147,155,156,167,172,173,],[50,-80,-79,-77,-78,-81,-82,-83,-76,-79,50,50,50,-60,50,50,50,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,50,50,-84,-85,-86,-87,50,50,50,50,50,-66,]),'AS':([8,17,19,24,25,26,27,28,56,57,58,62,63,64,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,96,126,129,130,131,132,147,155,156,167,172,173,],[51,-80,-79,-77,-78,-81,-82,-83,-76,-79,51,51,51,-60,51,51,51,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,51,51,-84,-85,-86,-87,51,51,51,51,51,-66,]),'PARC':([17,24,25,26,27,28,56,57,58,64,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,107,108,109,110,111,129,130,131,132,146,147,167,172,173,],[-80,-77,-78,-81,-82,-83,-76,-79,91,-60,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,129,130,131,132,134,-84,-85,-86,-87,158,-17,-16,173,-66,]),'LLAVA':([17,24,25,26,27,28,32,56,57,62,63,64,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,123,129,130,131,132,143,151,152,173,],[-80,-77,-78,-81,-82,-83,69,-76,-79,69,102,-60,69,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,69,-84,-85,-86,-87,69,69,69,-66,]),'ARROW':([17,24,25,26,27,28,56,57,64,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,125,126,129,130,131,132,141,142,155,173,],[-80,-77,-78,-81,-82,-83,-76,-79,-60,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,143,-42,-84,-85,-86,-87,151,152,-41,-66,]),'SEP_MATCH':([17,24,25,26,27,28,56,57,64,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,125,126,129,130,131,132,141,155,173,],[-80,-77,-78,-81,-82,-83,-76,-79,-60,-61,-62,-63,-64,-65,-68,-69,-70,-71,-72,-73,-74,-75,-88,-89,-67,144,-42,-84,-85,-86,-87,144,-41,-66,]),'MUT':([18,],[59,]),'IGUAL':([19,60,92,114,115,116,117,118,119,120,135,],[61,94,113,137,-54,-55,-56,-57,-58,-59,148,]),'DOS_PT':([23,60,65,92,],[65,93,103,112,]),'TO_OWNED':([50,],[84,]),'TO_STRING':([50,],[85,]),'ABSOLUTO':([50,],[86,]),'RAIZ':([50,],[87,]),'F64':([51,93,112,],[88,116,116,]),'BOOL':([93,112,],[117,117,]),'STRING':([93,112,],[118,118,]),'STR':([93,112,],[119,119,]),'CHAR':([93,112,],[120,120,]),'ELSE':([100,105,128,],[123,-53,-52,]),'POW':([103,],[127,]),'GUION_B':([124,164,165,168,169,],[142,-39,-40,-37,-38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'instrucciones':([0,69,],[2,104,]),'instruccion':([0,2,69,104,143,151,152,],[3,34,3,34,154,161,163,]),'prints':([0,2,69,104,143,151,152,],[4,4,4,4,4,4,4,]),'declaracion':([0,2,69,104,143,151,152,],[5,5,5,5,5,5,5,]),'sent_if':([0,2,61,69,94,104,113,123,137,143,148,151,152,],[6,6,97,6,97,6,97,139,97,6,97,6,6,]),'match':([0,2,61,69,94,104,113,137,143,148,151,152,],[7,7,98,7,98,7,98,98,7,98,7,7,]),'expresion':([0,2,15,16,20,21,22,29,30,33,37,38,39,40,41,42,43,44,45,46,47,48,49,61,69,94,102,104,113,124,133,137,143,144,145,148,151,152,157,166,],[8,8,56,58,62,63,64,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,96,8,96,126,8,96,126,147,96,8,155,156,96,8,8,167,172,]),'return':([0,2,69,104,143,151,152,],[9,9,9,9,9,9,9,]),'break':([0,2,69,104,143,151,152,],[10,10,10,10,10,10,10,]),'continue':([0,2,69,104,143,151,152,],[11,11,11,11,11,11,11,]),'loop':([0,2,61,69,94,104,113,137,143,148,151,152,],[12,12,99,12,99,12,99,99,12,99,12,12,]),'while':([0,2,69,104,143,151,152,],[13,13,13,13,13,13,13,]),'statement':([32,62,70,123,143,151,152,],[68,100,106,138,153,160,162,]),'valores':([61,94,113,137,148,],[95,121,136,149,159,]),'casos_match':([63,],[101,]),'tipo':([93,112,],[114,135,]),'sent_else':([100,],[122,]),'lista_casos':([102,],[124,]),'lista_expresiones':([102,124,],[125,141,]),'default':([124,],[140,]),'list_exp':([133,],[146,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> instrucciones','inicio',1,'p_inicio','parser.py',42),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_lista_instrucciones','parser.py',48),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',55),
  ('instruccion -> prints PT_COMA','instruccion',2,'p_instruccion','parser.py',61),
  ('instruccion -> declaracion PT_COMA','instruccion',2,'p_instruccion','parser.py',62),
  ('instruccion -> sent_if','instruccion',1,'p_instruccion','parser.py',63),
  ('instruccion -> match','instruccion',1,'p_instruccion','parser.py',64),
  ('instruccion -> expresion','instruccion',1,'p_instruccion','parser.py',65),
  ('instruccion -> return PT_COMA','instruccion',2,'p_instruccion','parser.py',66),
  ('instruccion -> break PT_COMA','instruccion',2,'p_instruccion','parser.py',67),
  ('instruccion -> continue PT_COMA','instruccion',2,'p_instruccion','parser.py',68),
  ('instruccion -> loop','instruccion',1,'p_instruccion','parser.py',69),
  ('instruccion -> while','instruccion',1,'p_instruccion','parser.py',70),
  ('prints -> PRINTLN NOT PARA CADENA COMA list_exp PARC','prints',7,'p_instruccion_println','parser.py',77),
  ('prints -> PRINTLN NOT PARA CADENA PARC','prints',5,'p_instruccion_println_cads','parser.py',83),
  ('list_exp -> list_exp COMA expresion','list_exp',3,'p_println_listexp','parser.py',89),
  ('list_exp -> expresion','list_exp',1,'p_println_listexp_exit','parser.py',96),
  ('declaracion -> LET MUT ID DOS_PT tipo IGUAL valores','declaracion',7,'p_instruccion_declaracion','parser.py',105),
  ('declaracion -> LET MUT ID DOS_PT tipo','declaracion',5,'p_declaracion_2','parser.py',118),
  ('declaracion -> LET MUT ID IGUAL valores','declaracion',5,'p_declaracion_3','parser.py',131),
  ('declaracion -> LET MUT ID','declaracion',3,'p_declaracion_4','parser.py',144),
  ('declaracion -> LET ID DOS_PT tipo IGUAL valores','declaracion',6,'p_declaracion_5','parser.py',157),
  ('declaracion -> LET ID DOS_PT tipo','declaracion',4,'p_declaracion_6','parser.py',170),
  ('declaracion -> LET ID IGUAL valores','declaracion',4,'p_declaracion_7','parser.py',183),
  ('declaracion -> LET ID','declaracion',2,'p_declaracion_8','parser.py',196),
  ('declaracion -> ID IGUAL valores','declaracion',3,'p__declaracion_asignacion','parser.py',209),
  ('valores -> expresion','valores',1,'p_declaracion_valores','parser.py',222),
  ('valores -> sent_if','valores',1,'p_declaracion_valores','parser.py',223),
  ('valores -> match','valores',1,'p_declaracion_valores','parser.py',224),
  ('valores -> loop','valores',1,'p_declaracion_valores','parser.py',225),
  ('sent_if -> IF expresion statement sent_else','sent_if',4,'p_instruccion_sent_if','parser.py',233),
  ('sent_else -> ELSE statement','sent_else',2,'p_sent_else','parser.py',239),
  ('sent_else -> ELSE sent_if','sent_else',2,'p_sent_else','parser.py',240),
  ('sent_else -> <empty>','sent_else',0,'p_sent_else_vacio','parser.py',246),
  ('match -> MATCH expresion casos_match','match',3,'p_instruccion_match','parser.py',255),
  ('casos_match -> LLAVA lista_casos default LLAVC','casos_match',4,'p_match_casos','parser.py',261),
  ('lista_casos -> lista_casos lista_expresiones ARROW statement COMA','lista_casos',5,'p_match_lista_casos','parser.py',268),
  ('lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA','lista_casos',5,'p_match_lista_casos','parser.py',269),
  ('lista_casos -> lista_expresiones ARROW statement COMA','lista_casos',4,'p_match_lista_casos_salida','parser.py',276),
  ('lista_casos -> lista_expresiones ARROW instruccion COMA','lista_casos',4,'p_match_lista_casos_salida','parser.py',277),
  ('lista_expresiones -> lista_expresiones SEP_MATCH expresion','lista_expresiones',3,'p_match_lista_expresiones','parser.py',283),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_match_lista_expresiones2','parser.py',290),
  ('default -> GUION_B ARROW statement COMA','default',4,'p_match_default','parser.py',296),
  ('default -> GUION_B ARROW instruccion COMA','default',4,'p_match_default','parser.py',297),
  ('return -> RETURN','return',1,'p_instruccion_return','parser.py',306),
  ('return -> RETURN expresion','return',2,'p_instruccion_return','parser.py',307),
  ('break -> BREAK','break',1,'p_instruccion_break','parser.py',319),
  ('break -> BREAK expresion','break',2,'p_instruccion_break','parser.py',320),
  ('continue -> CONTINUE','continue',1,'p_instruccion_continue','parser.py',332),
  ('loop -> LOOP statement','loop',2,'p_instruccion_loop','parser.py',341),
  ('while -> WHILE expresion statement','while',3,'p_instruccion_while','parser.py',350),
  ('statement -> LLAVA instrucciones LLAVC','statement',3,'p_statement','parser.py',359),
  ('statement -> LLAVA LLAVC','statement',2,'p_statement_vacio','parser.py',365),
  ('tipo -> I64','tipo',1,'p_tipo','parser.py',373),
  ('tipo -> F64','tipo',1,'p_tipo','parser.py',374),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',375),
  ('tipo -> STRING','tipo',1,'p_tipo','parser.py',376),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',377),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',378),
  ('expresion -> MENOS expresion','expresion',2,'p_exp_aritmeticas','parser.py',396),
  ('expresion -> expresion MAS expresion','expresion',3,'p_exp_aritmeticas','parser.py',397),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_exp_aritmeticas','parser.py',398),
  ('expresion -> expresion MULTI expresion','expresion',3,'p_exp_aritmeticas','parser.py',399),
  ('expresion -> expresion DIV expresion','expresion',3,'p_exp_aritmeticas','parser.py',400),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_exp_aritmeticas','parser.py',401),
  ('expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC','expresion',9,'p_exp_potencia','parser.py',410),
  ('expresion -> PARA expresion PARC','expresion',3,'p_exp_parentesis','parser.py',416),
  ('expresion -> expresion IGUAL_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',425),
  ('expresion -> expresion NO_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',426),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_exp_relacionales','parser.py',427),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_exp_relacionales','parser.py',428),
  ('expresion -> expresion MAYOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',429),
  ('expresion -> expresion MENOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',430),
  ('expresion -> expresion AND expresion','expresion',3,'p_exp_logicas','parser.py',438),
  ('expresion -> expresion OR expresion','expresion',3,'p_exp_logicas','parser.py',439),
  ('expresion -> NOT expresion','expresion',2,'p_exp_not','parser.py',445),
  ('expresion -> ENTERO','expresion',1,'p_exp_primtivos','parser.py',454),
  ('expresion -> DECIMAL','expresion',1,'p_exp_primtivos','parser.py',455),
  ('expresion -> ID','expresion',1,'p_exp_primtivos','parser.py',456),
  ('expresion -> CADENA','expresion',1,'p_exp_primtivos','parser.py',457),
  ('expresion -> CARACTER','expresion',1,'p_exp_primtivos','parser.py',458),
  ('expresion -> TRUE','expresion',1,'p_exp_primtivos','parser.py',459),
  ('expresion -> FALSE','expresion',1,'p_exp_primtivos','parser.py',460),
  ('expresion -> expresion PUNTO TO_OWNED PARA PARC','expresion',5,'p_exp_cadena_toowned','parser.py',479),
  ('expresion -> expresion PUNTO TO_STRING PARA PARC','expresion',5,'p_exp_cadena_tostring','parser.py',485),
  ('expresion -> expresion PUNTO ABSOLUTO PARA PARC','expresion',5,'p_exp_absoluto','parser.py',491),
  ('expresion -> expresion PUNTO RAIZ PARA PARC','expresion',5,'p_exp_raiz','parser.py',497),
  ('expresion -> expresion AS F64','expresion',3,'p_exp_casteo','parser.py',503),
  ('expresion -> expresion AS I64','expresion',3,'p_exp_casteo','parser.py',504),
]
