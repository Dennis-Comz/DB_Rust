
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTleftIGUAL_IGUALNO_IGUALMENORMAYORMENOR_IGUALMAYOR_IGUALleftMASMENOSleftMULTIDIVMODULOrightUNARIOADMIRACION AND ARROW BOOL CADENA CARACTER CHAR COMA DECIMAL DIV DOS_PT ELSE ENTERO F64 FALSE GUION_B I64 ID IF IGUAL IGUAL_IGUAL LET LLAVA LLAVC MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MODULO MULTI MUT NOT NO_IGUAL OR PARA PARC POW PRINTLN PT_COMA PUNTO SEP_MATCH STR STRING TO_OWNED TO_STRING TRUE\n    inicio : instrucciones\n    \n    instrucciones : instrucciones instruccion\n    \n    instrucciones : instruccion\n    \n    instruccion : prints PT_COMA\n                | declaracion PT_COMA\n                | sent_if\n                | match\n                | expresion\n    \n    prints : PRINTLN ADMIRACION PARA CADENA COMA list_exp PARC\n    \n    prints : PRINTLN ADMIRACION PARA CADENA PARC\n    \n    list_exp : list_exp COMA expresion\n    \n    list_exp : expresion\n    \n    declaracion : LET MUT ID DOS_PT tipo IGUAL expresion\n    \n    declaracion : LET MUT ID DOS_PT tipo\n    \n    declaracion : LET MUT ID IGUAL expresion\n    \n    declaracion : LET MUT ID\n    \n    declaracion : LET ID DOS_PT tipo IGUAL expresion\n    \n    declaracion : LET ID DOS_PT tipo\n    \n    declaracion : LET ID IGUAL expresion\n    \n    declaracion : LET ID\n    \n    declaracion : ID IGUAL expresion\n    \n    sent_if : IF expresion statement sent_else\n    \n    sent_else : ELSE statement\n            | ELSE sent_if\n    \n    sent_else : \n    \n    exp_if : IF expresion exp_statement exp_else\n    \n    exp_else : ELSE exp_statement\n            | ELSE exp_if\n    \n    exp_statement : LLAVA instrucciones LLAVC\n    \n    match : MATCH expresion casos_match\n    \n    casos_match : LLAVA lista_casos default LLAVC\n    \n    lista_casos : lista_casos lista_expresiones ARROW statement COMA\n                | lista_casos lista_expresiones ARROW instruccion COMA\n    \n    lista_casos : lista_expresiones ARROW statement COMA\n                | lista_expresiones ARROW instruccion COMA\n    \n    lista_expresiones : lista_expresiones SEP_MATCH expresion\n    \n    lista_expresiones : expresion\n    \n    default : GUION_B ARROW statement COMA\n            | GUION_B ARROW instruccion COMA\n    \n    statement : LLAVA instrucciones LLAVC\n    \n    statement : LLAVA LLAVC\n    \n    tipo : I64\n        | F64\n        | BOOL\n        | STRING\n        | STR\n        | CHAR\n    \n    expresion : expresion MAS expresion\n           | expresion MENOS expresion\n           | expresion MULTI expresion\n           | expresion DIV expresion\n           | expresion MODULO expresion\n    \n    expresion : I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC\n    \n    expresion : PARA expresion PARC\n    \n    expresion : MENOS expresion %prec UNARIO\n    \n    expresion : expresion IGUAL_IGUAL expresion\n            | expresion NO_IGUAL expresion\n            | expresion MAYOR expresion\n            | expresion MENOR expresion\n            | expresion MAYOR_IGUAL expresion\n            | expresion MENOR_IGUAL expresion\n    \n    expresion : expresion AND expresion\n            | expresion OR expresion\n    \n    expresion : NOT expresion\n    \n    expresion : exp_if\n    \n    expresion : expresion PUNTO TO_OWNED PARA PARC\n    \n    expresion : expresion PUNTO TO_STRING PARA PARC\n    \n    expresion : CADENA\n    \n    expresion :  ENTERO\n    \n    expresion : DECIMAL\n    \n    expresion : CARACTER\n    \n    expresion : TRUE\n            | FALSE\n    \n    expresion : ID\n    '
    
_lr_action_items = {'PRINTLN':([0,2,3,6,7,8,11,13,19,20,21,22,23,24,25,26,27,44,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,76,78,79,85,96,98,100,101,106,107,110,114,115,116,118,119,120,124,129,132,134,135,136,144,158,],[9,9,-3,-6,-7,-8,-68,-74,-65,-69,-70,-71,-72,-73,-2,-4,-5,-74,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,-25,9,-30,9,-22,-26,9,-41,-66,-67,9,-23,-24,9,-27,-28,-40,9,-29,9,-31,9,9,-40,-53,]),'LET':([0,2,3,6,7,8,11,13,19,20,21,22,23,24,25,26,27,44,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,76,78,79,85,96,98,100,101,106,107,110,114,115,116,118,119,120,124,129,132,134,135,136,144,158,],[12,12,-3,-6,-7,-8,-68,-74,-65,-69,-70,-71,-72,-73,-2,-4,-5,-74,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,-25,12,-30,12,-22,-26,12,-41,-66,-67,12,-23,-24,12,-27,-28,-40,12,-29,12,-31,12,12,-40,-53,]),'ID':([0,2,3,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,46,48,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,74,76,78,79,80,85,87,96,98,100,101,102,106,107,108,110,113,114,115,116,117,118,119,120,124,125,126,129,130,132,134,135,136,141,144,149,150,151,153,154,158,],[13,13,-3,-6,-7,-8,44,-68,47,-74,44,44,44,44,-65,-69,-70,-71,-72,-73,-2,-4,-5,44,44,44,44,44,44,44,44,44,44,44,44,44,-74,44,72,44,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,44,-25,13,-30,44,13,44,-22,-26,13,-41,44,-66,-67,44,13,44,-23,-24,13,44,-27,-28,-40,13,44,44,-29,44,13,-31,13,13,44,-40,-34,-35,44,-32,-33,-53,]),'IF':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,48,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,74,76,78,79,80,85,87,96,97,98,99,100,101,102,106,107,108,110,113,114,115,116,117,118,119,120,124,125,126,129,130,132,134,135,136,141,144,149,150,151,153,154,158,],[14,14,-3,-6,-7,-8,45,-68,-74,45,45,45,45,-65,-69,-70,-71,-72,-73,-2,-4,-5,45,45,45,45,45,45,45,45,45,45,45,45,45,-74,45,45,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,45,-25,14,-30,45,14,45,-22,117,-26,45,14,-41,45,-66,-67,45,14,45,-23,-24,14,45,-27,-28,-40,14,45,45,-29,45,14,-31,14,14,45,-40,-34,-35,45,-32,-33,-53,]),'MATCH':([0,2,3,6,7,8,11,13,19,20,21,22,23,24,25,26,27,44,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,76,78,79,85,96,98,100,101,106,107,110,114,115,116,118,119,120,124,129,132,134,135,136,144,158,],[15,15,-3,-6,-7,-8,-68,-74,-65,-69,-70,-71,-72,-73,-2,-4,-5,-74,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,-25,15,-30,15,-22,-26,15,-41,-66,-67,15,-23,-24,15,-27,-28,-40,15,-29,15,-31,15,15,-40,-53,]),'I64':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,48,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,73,74,76,78,79,80,85,86,87,96,98,100,101,102,106,107,108,110,113,114,115,116,117,118,119,120,124,125,126,129,130,132,134,135,136,141,144,149,150,151,153,154,158,],[17,17,-3,-6,-7,-8,17,-68,-74,17,17,17,17,-65,-69,-70,-71,-72,-73,-2,-4,-5,17,17,17,17,17,17,17,17,17,17,17,17,17,-74,17,17,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,89,17,-25,17,-30,17,17,89,17,-22,-26,17,-41,17,-66,-67,17,17,17,-23,-24,17,17,-27,-28,-40,17,17,17,-29,17,17,-31,17,17,17,-40,-34,-35,17,-32,-33,-53,]),'PARA':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,44,45,48,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,76,78,79,80,85,87,96,98,100,101,102,105,106,107,108,110,113,114,115,116,117,118,119,120,124,125,126,129,130,132,134,135,136,141,144,149,150,151,153,154,158,],[10,10,-3,-6,-7,-8,10,-68,-74,10,10,10,10,-65,-69,-70,-71,-72,-73,-2,-4,-5,10,10,10,10,10,10,10,10,10,10,10,10,10,69,-74,10,10,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,82,83,-54,10,-25,10,-30,10,10,10,-22,-26,10,-41,10,126,-66,-67,10,10,10,-23,-24,10,10,-27,-28,-40,10,10,10,-29,10,10,-31,10,10,10,-40,-34,-35,10,-32,-33,-53,]),'MENOS':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,71,74,75,76,78,79,80,85,87,95,96,98,100,101,102,104,106,107,108,110,112,113,114,115,116,117,118,119,120,124,125,126,128,129,130,131,132,133,134,135,136,139,140,141,143,144,149,150,151,152,153,154,157,158,],[16,16,-3,-6,-7,29,16,-68,-74,16,16,16,16,-65,-69,-70,-71,-72,-73,-2,-4,-5,16,16,16,16,16,16,16,16,16,16,16,16,16,29,-74,16,16,29,29,-55,29,-48,-49,-50,-51,-52,29,29,29,29,29,29,29,29,-54,29,16,29,-25,16,-30,16,16,16,29,-22,-26,16,-41,16,29,-66,-67,16,16,29,16,-23,-24,16,16,-27,-28,-40,16,16,16,29,-29,16,29,16,29,-31,16,16,29,29,16,29,-40,-34,-35,16,29,-32,-33,29,-53,]),'NOT':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,48,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,74,76,78,79,80,85,87,96,98,100,101,102,106,107,108,110,113,114,115,116,117,118,119,120,124,125,126,129,130,132,134,135,136,141,144,149,150,151,153,154,158,],[18,18,-3,-6,-7,-8,18,-68,-74,18,18,18,18,-65,-69,-70,-71,-72,-73,-2,-4,-5,18,18,18,18,18,18,18,18,18,18,18,18,18,-74,18,18,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,18,-25,18,-30,18,18,18,-22,-26,18,-41,18,-66,-67,18,18,18,-23,-24,18,18,-27,-28,-40,18,18,18,-29,18,18,-31,18,18,18,-40,-34,-35,18,-32,-33,-53,]),'CADENA':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,48,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,74,76,78,79,80,85,87,96,98,100,101,102,106,107,108,110,113,114,115,116,117,118,119,120,124,125,126,129,130,132,134,135,136,141,144,149,150,151,153,154,158,],[11,11,-3,-6,-7,-8,11,-68,-74,11,11,11,11,-65,-69,-70,-71,-72,-73,-2,-4,-5,11,11,11,11,11,11,11,11,11,11,11,11,11,-74,11,11,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,84,-54,11,-25,11,-30,11,11,11,-22,-26,11,-41,11,-66,-67,11,11,11,-23,-24,11,11,-27,-28,-40,11,11,11,-29,11,11,-31,11,11,11,-40,-34,-35,11,-32,-33,-53,]),'ENTERO':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,48,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,74,76,78,79,80,85,87,96,98,100,101,102,106,107,108,110,113,114,115,116,117,118,119,120,124,125,126,129,130,132,134,135,136,141,144,149,150,151,153,154,158,],[20,20,-3,-6,-7,-8,20,-68,-74,20,20,20,20,-65,-69,-70,-71,-72,-73,-2,-4,-5,20,20,20,20,20,20,20,20,20,20,20,20,20,-74,20,20,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,20,-25,20,-30,20,20,20,-22,-26,20,-41,20,-66,-67,20,20,20,-23,-24,20,20,-27,-28,-40,20,20,20,-29,20,20,-31,20,20,20,-40,-34,-35,20,-32,-33,-53,]),'DECIMAL':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,48,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,74,76,78,79,80,85,87,96,98,100,101,102,106,107,108,110,113,114,115,116,117,118,119,120,124,125,126,129,130,132,134,135,136,141,144,149,150,151,153,154,158,],[21,21,-3,-6,-7,-8,21,-68,-74,21,21,21,21,-65,-69,-70,-71,-72,-73,-2,-4,-5,21,21,21,21,21,21,21,21,21,21,21,21,21,-74,21,21,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,21,-25,21,-30,21,21,21,-22,-26,21,-41,21,-66,-67,21,21,21,-23,-24,21,21,-27,-28,-40,21,21,21,-29,21,21,-31,21,21,21,-40,-34,-35,21,-32,-33,-53,]),'CARACTER':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,48,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,74,76,78,79,80,85,87,96,98,100,101,102,106,107,108,110,113,114,115,116,117,118,119,120,124,125,126,129,130,132,134,135,136,141,144,149,150,151,153,154,158,],[22,22,-3,-6,-7,-8,22,-68,-74,22,22,22,22,-65,-69,-70,-71,-72,-73,-2,-4,-5,22,22,22,22,22,22,22,22,22,22,22,22,22,-74,22,22,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,22,-25,22,-30,22,22,22,-22,-26,22,-41,22,-66,-67,22,22,22,-23,-24,22,22,-27,-28,-40,22,22,22,-29,22,22,-31,22,22,22,-40,-34,-35,22,-32,-33,-53,]),'TRUE':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,48,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,74,76,78,79,80,85,87,96,98,100,101,102,106,107,108,110,113,114,115,116,117,118,119,120,124,125,126,129,130,132,134,135,136,141,144,149,150,151,153,154,158,],[23,23,-3,-6,-7,-8,23,-68,-74,23,23,23,23,-65,-69,-70,-71,-72,-73,-2,-4,-5,23,23,23,23,23,23,23,23,23,23,23,23,23,-74,23,23,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,23,-25,23,-30,23,23,23,-22,-26,23,-41,23,-66,-67,23,23,23,-23,-24,23,23,-27,-28,-40,23,23,23,-29,23,23,-31,23,23,23,-40,-34,-35,23,-32,-33,-53,]),'FALSE':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,48,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,74,76,78,79,80,85,87,96,98,100,101,102,106,107,108,110,113,114,115,116,117,118,119,120,124,125,126,129,130,132,134,135,136,141,144,149,150,151,153,154,158,],[24,24,-3,-6,-7,-8,24,-68,-74,24,24,24,24,-65,-69,-70,-71,-72,-73,-2,-4,-5,24,24,24,24,24,24,24,24,24,24,24,24,24,-74,24,24,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,24,-25,24,-30,24,24,24,-22,-26,24,-41,24,-66,-67,24,24,24,-23,-24,24,24,-27,-28,-40,24,24,24,-29,24,24,-31,24,24,24,-40,-34,-35,24,-32,-33,-53,]),'$end':([1,2,3,6,7,8,11,13,19,20,21,22,23,24,25,26,27,44,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,76,79,96,98,101,106,107,114,115,118,119,120,129,134,144,158,],[0,-1,-3,-6,-7,-8,-68,-74,-65,-69,-70,-71,-72,-73,-2,-4,-5,-74,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,-25,-30,-22,-26,-41,-66,-67,-23,-24,-27,-28,-40,-29,-31,-40,-53,]),'LLAVC':([3,6,7,8,11,13,19,20,21,22,23,24,25,26,27,44,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,76,78,79,96,98,100,101,106,107,110,114,115,116,118,119,120,121,129,132,134,144,155,156,158,],[-3,-6,-7,-8,-68,-74,-65,-69,-70,-71,-72,-73,-2,-4,-5,-74,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,-25,101,-30,-22,-26,120,-41,-66,-67,129,-23,-24,101,-27,-28,-40,134,-29,144,-31,-40,-38,-39,-53,]),'PT_COMA':([4,5,11,19,20,21,22,23,24,44,47,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,72,75,88,89,90,91,92,93,94,95,98,106,107,109,111,112,118,119,129,131,142,143,158,],[26,27,-68,-65,-69,-70,-71,-72,-73,-74,-20,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,-16,-21,-18,-42,-43,-44,-45,-46,-47,-19,-26,-66,-67,-10,-14,-15,-27,-28,-29,-17,-9,-13,-53,]),'COMA':([6,7,8,11,13,19,20,21,22,23,24,26,27,44,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,76,79,84,96,98,101,106,107,114,115,118,119,120,127,128,129,134,137,138,140,144,145,146,147,148,152,158,],[-6,-7,-8,-68,-74,-65,-69,-70,-71,-72,-73,-4,-5,-74,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,-25,-30,108,-22,-26,-41,-66,-67,-23,-24,-27,-28,-40,141,-12,-29,-31,149,150,151,-40,153,154,155,156,-11,-53,]),'MAS':([8,11,13,19,20,21,22,23,24,43,44,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,71,75,95,98,104,106,107,112,118,119,128,129,131,133,139,140,143,152,157,158,],[28,-68,-74,-65,-69,-70,-71,-72,-73,28,-74,28,28,-55,28,-48,-49,-50,-51,-52,28,28,28,28,28,28,28,28,-54,28,28,28,-26,28,-66,-67,28,-27,-28,28,-29,28,28,28,28,28,28,28,-53,]),'MULTI':([8,11,13,19,20,21,22,23,24,43,44,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,71,75,95,98,104,106,107,112,118,119,128,129,131,133,139,140,143,152,157,158,],[30,-68,-74,-65,-69,-70,-71,-72,-73,30,-74,30,30,-55,30,30,30,-50,-51,-52,30,30,30,30,30,30,30,30,-54,30,30,30,-26,30,-66,-67,30,-27,-28,30,-29,30,30,30,30,30,30,30,-53,]),'DIV':([8,11,13,19,20,21,22,23,24,43,44,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,71,75,95,98,104,106,107,112,118,119,128,129,131,133,139,140,143,152,157,158,],[31,-68,-74,-65,-69,-70,-71,-72,-73,31,-74,31,31,-55,31,31,31,-50,-51,-52,31,31,31,31,31,31,31,31,-54,31,31,31,-26,31,-66,-67,31,-27,-28,31,-29,31,31,31,31,31,31,31,-53,]),'MODULO':([8,11,13,19,20,21,22,23,24,43,44,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,71,75,95,98,104,106,107,112,118,119,128,129,131,133,139,140,143,152,157,158,],[32,-68,-74,-65,-69,-70,-71,-72,-73,32,-74,32,32,-55,32,32,32,-50,-51,-52,32,32,32,32,32,32,32,32,-54,32,32,32,-26,32,-66,-67,32,-27,-28,32,-29,32,32,32,32,32,32,32,-53,]),'IGUAL_IGUAL':([8,11,13,19,20,21,22,23,24,43,44,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,71,75,95,98,104,106,107,112,118,119,128,129,131,133,139,140,143,152,157,158,],[33,-68,-74,-65,-69,-70,-71,-72,-73,33,-74,33,33,-55,33,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,33,33,-54,33,33,33,-26,33,-66,-67,33,-27,-28,33,-29,33,33,33,33,33,33,33,-53,]),'NO_IGUAL':([8,11,13,19,20,21,22,23,24,43,44,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,71,75,95,98,104,106,107,112,118,119,128,129,131,133,139,140,143,152,157,158,],[34,-68,-74,-65,-69,-70,-71,-72,-73,34,-74,34,34,-55,34,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,34,34,-54,34,34,34,-26,34,-66,-67,34,-27,-28,34,-29,34,34,34,34,34,34,34,-53,]),'MAYOR':([8,11,13,19,20,21,22,23,24,43,44,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,71,75,95,98,104,106,107,112,118,119,128,129,131,133,139,140,143,152,157,158,],[35,-68,-74,-65,-69,-70,-71,-72,-73,35,-74,35,35,-55,35,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,35,35,-54,35,35,35,-26,35,-66,-67,35,-27,-28,35,-29,35,35,35,35,35,35,35,-53,]),'MENOR':([8,11,13,19,20,21,22,23,24,43,44,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,71,75,95,98,104,106,107,112,118,119,128,129,131,133,139,140,143,152,157,158,],[36,-68,-74,-65,-69,-70,-71,-72,-73,36,-74,36,36,-55,36,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,36,36,-54,36,36,36,-26,36,-66,-67,36,-27,-28,36,-29,36,36,36,36,36,36,36,-53,]),'MAYOR_IGUAL':([8,11,13,19,20,21,22,23,24,43,44,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,71,75,95,98,104,106,107,112,118,119,128,129,131,133,139,140,143,152,157,158,],[37,-68,-74,-65,-69,-70,-71,-72,-73,37,-74,37,37,-55,37,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,37,37,-54,37,37,37,-26,37,-66,-67,37,-27,-28,37,-29,37,37,37,37,37,37,37,-53,]),'MENOR_IGUAL':([8,11,13,19,20,21,22,23,24,43,44,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,71,75,95,98,104,106,107,112,118,119,128,129,131,133,139,140,143,152,157,158,],[38,-68,-74,-65,-69,-70,-71,-72,-73,38,-74,38,38,-55,38,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,38,38,-54,38,38,38,-26,38,-66,-67,38,-27,-28,38,-29,38,38,38,38,38,38,38,-53,]),'AND':([8,11,13,19,20,21,22,23,24,43,44,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,71,75,95,98,104,106,107,112,118,119,128,129,131,133,139,140,143,152,157,158,],[39,-68,-74,-65,-69,-70,-71,-72,-73,39,-74,39,39,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,39,-54,39,39,39,-26,39,-66,-67,39,-27,-28,39,-29,39,39,39,39,39,39,39,-53,]),'OR':([8,11,13,19,20,21,22,23,24,43,44,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,71,75,95,98,104,106,107,112,118,119,128,129,131,133,139,140,143,152,157,158,],[40,-68,-74,-65,-69,-70,-71,-72,-73,40,-74,40,40,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,40,40,40,-26,40,-66,-67,40,-27,-28,40,-29,40,40,40,40,40,40,40,-53,]),'PUNTO':([8,11,13,19,20,21,22,23,24,43,44,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,71,75,95,98,104,106,107,112,118,119,128,129,131,133,139,140,143,152,157,158,],[41,-68,-74,-65,-69,-70,-71,-72,-73,41,-74,41,41,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,41,41,41,-26,41,-66,-67,41,-27,-28,41,-29,41,41,41,41,41,41,41,-53,]),'ADMIRACION':([9,],[42,]),'PARC':([11,19,20,21,22,23,24,43,44,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,82,83,84,98,106,107,118,119,127,128,129,152,157,158,],[-68,-65,-69,-70,-71,-72,-73,70,-74,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,106,107,109,-26,-66,-67,-27,-28,142,-12,-29,-11,158,-53,]),'LLAVA':([11,19,20,21,22,23,24,44,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,71,97,98,99,106,107,118,119,124,129,133,135,136,158,],[-68,-65,-69,-70,-71,-72,-73,-74,78,80,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,85,116,-26,85,-66,-67,-27,-28,116,-29,116,116,116,-53,]),'ARROW':([11,19,20,21,22,23,24,44,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,98,103,104,106,107,118,119,122,123,129,139,158,],[-68,-65,-69,-70,-71,-72,-73,-74,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,-26,124,-37,-66,-67,-27,-28,135,136,-29,-36,-53,]),'SEP_MATCH':([11,19,20,21,22,23,24,44,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,70,98,103,104,106,107,118,119,122,129,139,158,],[-68,-65,-69,-70,-71,-72,-73,-74,-55,-64,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-62,-63,-54,-26,125,-37,-66,-67,-27,-28,125,-29,-36,-53,]),'MUT':([12,],[46,]),'IGUAL':([13,47,72,88,89,90,91,92,93,94,111,],[48,74,87,113,-42,-43,-44,-45,-46,-47,130,]),'DOS_PT':([17,47,52,72,],[52,73,81,86,]),'TO_OWNED':([41,],[67,]),'TO_STRING':([41,],[68,]),'F64':([73,86,],[90,90,]),'BOOL':([73,86,],[91,91,]),'STRING':([73,86,],[92,92,]),'STR':([73,86,],[93,93,]),'CHAR':([73,86,],[94,94,]),'ELSE':([76,77,101,120,129,144,],[97,99,-41,-29,-29,-40,]),'POW':([81,],[105,]),'GUION_B':([102,149,150,153,154,],[123,-34,-35,-32,-33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'instrucciones':([0,78,85,116,],[2,100,110,132,]),'instruccion':([0,2,78,85,100,110,116,124,132,135,136,],[3,25,3,3,25,25,3,138,25,146,148,]),'prints':([0,2,78,85,100,110,116,124,132,135,136,],[4,4,4,4,4,4,4,4,4,4,4,]),'declaracion':([0,2,78,85,100,110,116,124,132,135,136,],[5,5,5,5,5,5,5,5,5,5,5,]),'sent_if':([0,2,78,85,97,100,110,116,124,132,135,136,],[6,6,6,6,115,6,6,6,6,6,6,6,]),'match':([0,2,78,85,100,110,116,124,132,135,136,],[7,7,7,7,7,7,7,7,7,7,7,]),'expresion':([0,2,10,14,15,16,18,28,29,30,31,32,33,34,35,36,37,38,39,40,45,48,74,78,80,85,87,100,102,108,110,113,116,117,124,125,126,130,132,135,136,141,151,],[8,8,43,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,75,95,8,104,8,112,8,104,128,8,131,8,133,8,139,140,143,8,8,8,152,157,]),'exp_if':([0,2,10,14,15,16,18,28,29,30,31,32,33,34,35,36,37,38,39,40,45,48,74,78,80,85,87,99,100,102,108,110,113,116,117,124,125,126,130,132,135,136,141,151,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,119,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'statement':([49,97,124,133,135,136,],[76,114,137,76,145,147,]),'exp_statement':([49,71,99,],[77,77,118,]),'casos_match':([50,],[79,]),'tipo':([73,86,],[88,111,]),'sent_else':([76,],[96,]),'exp_else':([77,],[98,]),'lista_casos':([80,],[102,]),'lista_expresiones':([80,102,],[103,122,]),'default':([102,],[121,]),'list_exp':([108,],[127,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> instrucciones','inicio',1,'p_inicio','parser.py',97),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_lista_instrucciones','parser.py',103),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',110),
  ('instruccion -> prints PT_COMA','instruccion',2,'p_instruccion','parser.py',116),
  ('instruccion -> declaracion PT_COMA','instruccion',2,'p_instruccion','parser.py',117),
  ('instruccion -> sent_if','instruccion',1,'p_instruccion','parser.py',118),
  ('instruccion -> match','instruccion',1,'p_instruccion','parser.py',119),
  ('instruccion -> expresion','instruccion',1,'p_instruccion','parser.py',120),
  ('prints -> PRINTLN ADMIRACION PARA CADENA COMA list_exp PARC','prints',7,'p_instruccion_println','parser.py',127),
  ('prints -> PRINTLN ADMIRACION PARA CADENA PARC','prints',5,'p_instruccion_println_cads','parser.py',133),
  ('list_exp -> list_exp COMA expresion','list_exp',3,'p_println_listexp','parser.py',139),
  ('list_exp -> expresion','list_exp',1,'p_println_listexp_exit','parser.py',146),
  ('declaracion -> LET MUT ID DOS_PT tipo IGUAL expresion','declaracion',7,'p_instruccion_declaracion','parser.py',155),
  ('declaracion -> LET MUT ID DOS_PT tipo','declaracion',5,'p_declaracion_2','parser.py',168),
  ('declaracion -> LET MUT ID IGUAL expresion','declaracion',5,'p_declaracion_3','parser.py',181),
  ('declaracion -> LET MUT ID','declaracion',3,'p_declaracion_4','parser.py',194),
  ('declaracion -> LET ID DOS_PT tipo IGUAL expresion','declaracion',6,'p_declaracion_5','parser.py',207),
  ('declaracion -> LET ID DOS_PT tipo','declaracion',4,'p_declaracion_6','parser.py',220),
  ('declaracion -> LET ID IGUAL expresion','declaracion',4,'p_declaracion_7','parser.py',233),
  ('declaracion -> LET ID','declaracion',2,'p_declaracion_8','parser.py',246),
  ('declaracion -> ID IGUAL expresion','declaracion',3,'p__declaracion_asignacion','parser.py',259),
  ('sent_if -> IF expresion statement sent_else','sent_if',4,'p_instruccion_sent_if','parser.py',274),
  ('sent_else -> ELSE statement','sent_else',2,'p_sent_else','parser.py',280),
  ('sent_else -> ELSE sent_if','sent_else',2,'p_sent_else','parser.py',281),
  ('sent_else -> <empty>','sent_else',0,'p_sent_else_vacio','parser.py',287),
  ('exp_if -> IF expresion exp_statement exp_else','exp_if',4,'p_exp_if','parser.py',296),
  ('exp_else -> ELSE exp_statement','exp_else',2,'p_if_exp_else','parser.py',302),
  ('exp_else -> ELSE exp_if','exp_else',2,'p_if_exp_else','parser.py',303),
  ('exp_statement -> LLAVA instrucciones LLAVC','exp_statement',3,'p_exp_if_statement','parser.py',309),
  ('match -> MATCH expresion casos_match','match',3,'p_instruccion_match','parser.py',317),
  ('casos_match -> LLAVA lista_casos default LLAVC','casos_match',4,'p_match_casos','parser.py',323),
  ('lista_casos -> lista_casos lista_expresiones ARROW statement COMA','lista_casos',5,'p_match_lista_casos','parser.py',330),
  ('lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA','lista_casos',5,'p_match_lista_casos','parser.py',331),
  ('lista_casos -> lista_expresiones ARROW statement COMA','lista_casos',4,'p_match_lista_casos_salida','parser.py',338),
  ('lista_casos -> lista_expresiones ARROW instruccion COMA','lista_casos',4,'p_match_lista_casos_salida','parser.py',339),
  ('lista_expresiones -> lista_expresiones SEP_MATCH expresion','lista_expresiones',3,'p_match_lista_expresiones','parser.py',345),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_match_lista_expresiones2','parser.py',352),
  ('default -> GUION_B ARROW statement COMA','default',4,'p_match_default','parser.py',358),
  ('default -> GUION_B ARROW instruccion COMA','default',4,'p_match_default','parser.py',359),
  ('statement -> LLAVA instrucciones LLAVC','statement',3,'p_statement','parser.py',368),
  ('statement -> LLAVA LLAVC','statement',2,'p_statement_vacio','parser.py',374),
  ('tipo -> I64','tipo',1,'p_tipo','parser.py',382),
  ('tipo -> F64','tipo',1,'p_tipo','parser.py',383),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',384),
  ('tipo -> STRING','tipo',1,'p_tipo','parser.py',385),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',386),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',387),
  ('expresion -> expresion MAS expresion','expresion',3,'p_exp_aritmeticas','parser.py',403),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_exp_aritmeticas','parser.py',404),
  ('expresion -> expresion MULTI expresion','expresion',3,'p_exp_aritmeticas','parser.py',405),
  ('expresion -> expresion DIV expresion','expresion',3,'p_exp_aritmeticas','parser.py',406),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_exp_aritmeticas','parser.py',407),
  ('expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC','expresion',9,'p_exp_potencia','parser.py',413),
  ('expresion -> PARA expresion PARC','expresion',3,'p_exp_parentesis','parser.py',419),
  ('expresion -> MENOS expresion','expresion',2,'p_exp_unario','parser.py',426),
  ('expresion -> expresion IGUAL_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',435),
  ('expresion -> expresion NO_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',436),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_exp_relacionales','parser.py',437),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_exp_relacionales','parser.py',438),
  ('expresion -> expresion MAYOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',439),
  ('expresion -> expresion MENOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',440),
  ('expresion -> expresion AND expresion','expresion',3,'p_exp_logicas','parser.py',448),
  ('expresion -> expresion OR expresion','expresion',3,'p_exp_logicas','parser.py',449),
  ('expresion -> NOT expresion','expresion',2,'p_exp_not','parser.py',455),
  ('expresion -> exp_if','expresion',1,'p_exp_if_exp','parser.py',463),
  ('expresion -> expresion PUNTO TO_OWNED PARA PARC','expresion',5,'p_exp_cadena_toowned','parser.py',470),
  ('expresion -> expresion PUNTO TO_STRING PARA PARC','expresion',5,'p_exp_cadena_tostring','parser.py',476),
  ('expresion -> CADENA','expresion',1,'p_exp_cadena_pointer','parser.py',482),
  ('expresion -> ENTERO','expresion',1,'p_exp_entero','parser.py',488),
  ('expresion -> DECIMAL','expresion',1,'p_exp_decimal','parser.py',494),
  ('expresion -> CARACTER','expresion',1,'p_exp_caracter','parser.py',500),
  ('expresion -> TRUE','expresion',1,'p_exp_booleano','parser.py',506),
  ('expresion -> FALSE','expresion',1,'p_exp_booleano','parser.py',507),
  ('expresion -> ID','expresion',1,'p_exp_identificador','parser.py',516),
]
