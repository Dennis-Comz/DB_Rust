
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTleftIGUAL_IGUALNO_IGUALMENORMAYORMENOR_IGUALMAYOR_IGUALleftMASMENOSleftMULTIDIVMODULOrightUNARIOADMIRACION AND ARROW BOOL CADENA CARACTER CHAR COMA DECIMAL DIV DOS_PT ELSE ENTERO F64 FALSE GUION_B I64 ID IF IGUAL IGUAL_IGUAL LET LLAVA LLAVC MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MODULO MULTI MUT NOT NO_IGUAL OR PARA PARC POW PRINTLN PT_COMA PUNTO SEP_MATCH STR STRING TO_OWNED TO_STRING TRUE\n    inicio : instrucciones\n    \n    instrucciones : instrucciones instruccion\n    \n    instrucciones : instruccion\n    \n    instruccion : prints PT_COMA\n                | declaracion PT_COMA\n                | sent_if\n                | match\n                | expresion\n    \n    prints : PRINTLN ADMIRACION PARA CADENA COMA list_exp PARC\n    \n    prints : PRINTLN ADMIRACION PARA CADENA PARC\n    \n    list_exp : list_exp COMA expresion\n    \n    list_exp : expresion\n    \n    declaracion : LET MUT ID DOS_PT tipo IGUAL expresion\n    \n    declaracion : LET MUT ID DOS_PT tipo\n    \n    declaracion : LET MUT ID IGUAL expresion\n    \n    declaracion : LET MUT ID\n    \n    declaracion : LET ID DOS_PT tipo IGUAL expresion\n    \n    declaracion : LET ID DOS_PT tipo\n    \n    declaracion : LET ID IGUAL expresion\n    \n    declaracion : LET ID\n    \n    declaracion : ID IGUAL expresion\n    \n    sent_if : IF expresion statement sent_else\n    \n    sent_else : ELSE statement\n            | ELSE sent_if\n    \n    sent_else : \n    \n    exp_if : IF expresion exp_statement exp_else\n    \n    exp_else : ELSE exp_statement\n            | ELSE exp_if\n    \n    exp_statement : LLAVA instrucciones LLAVC\n    \n    match : MATCH expresion casos_match\n    \n    casos_match : LLAVA lista_casos default LLAVC\n    \n    lista_casos : lista_casos lista_expresiones ARROW statement COMA\n                | lista_casos lista_expresiones ARROW instruccion COMA\n    \n    lista_casos : lista_expresiones ARROW statement COMA\n                | lista_expresiones ARROW instruccion COMA\n    \n    lista_expresiones : lista_expresiones SEP_MATCH expresion\n    \n    lista_expresiones : expresion\n    \n    default : GUION_B ARROW statement COMA\n            | GUION_B ARROW instruccion COMA\n    \n    exp_match : MATCH expresion exp_casos_match\n    \n    exp_casos_match : LLAVA exp_lista_casos exp_default LLAVC\n    \n    exp_lista_casos : exp_lista_casos lista_expresiones ARROW statement COMA\n                | exp_lista_casos lista_expresiones ARROW expresion COMA\n    \n    exp_lista_casos : lista_expresiones ARROW statement COMA\n                | lista_expresiones ARROW expresion COMA\n    \n    exp_default : GUION_B ARROW statement COMA\n            | GUION_B ARROW expresion COMA\n    \n    statement : LLAVA instrucciones LLAVC\n    \n    statement : LLAVA LLAVC\n    \n    tipo : I64\n        | F64\n        | BOOL\n        | STRING\n        | STR\n        | CHAR\n    \n    expresion : expresion MAS expresion\n           | expresion MENOS expresion\n           | expresion MULTI expresion\n           | expresion DIV expresion\n           | expresion MODULO expresion\n    \n    expresion : I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC\n    \n    expresion : PARA expresion PARC\n    \n    expresion : MENOS expresion %prec UNARIO\n    \n    expresion : expresion IGUAL_IGUAL expresion\n            | expresion NO_IGUAL expresion\n            | expresion MAYOR expresion\n            | expresion MENOR expresion\n            | expresion MAYOR_IGUAL expresion\n            | expresion MENOR_IGUAL expresion\n    \n    expresion : expresion AND expresion\n            | expresion OR expresion\n    \n    expresion : NOT expresion\n    \n    expresion : exp_if\n    \n    expresion : exp_match\n    \n    expresion : expresion PUNTO TO_OWNED PARA PARC\n    \n    expresion : expresion PUNTO TO_STRING PARA PARC\n    \n    expresion : CADENA\n    \n    expresion :  ENTERO\n    \n    expresion : DECIMAL\n    \n    expresion : CARACTER\n    \n    expresion : TRUE\n            | FALSE\n    \n    expresion : ID\n    '
    
_lr_action_items = {'PRINTLN':([0,2,3,6,7,8,11,13,19,20,21,22,23,24,25,26,27,28,45,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,79,81,82,83,89,101,103,105,106,112,113,116,121,122,123,125,126,127,134,139,143,145,146,147,148,162,186,],[9,9,-3,-6,-7,-8,-77,-83,-73,-74,-78,-79,-80,-81,-82,-2,-4,-5,-83,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,-25,9,-30,-40,9,-22,-26,9,-49,-75,-76,9,-23,-24,9,-27,-28,-48,9,-29,9,-31,9,9,-41,-48,-61,]),'LET':([0,2,3,6,7,8,11,13,19,20,21,22,23,24,25,26,27,28,45,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,79,81,82,83,89,101,103,105,106,112,113,116,121,122,123,125,126,127,134,139,143,145,146,147,148,162,186,],[12,12,-3,-6,-7,-8,-77,-83,-73,-74,-78,-79,-80,-81,-82,-2,-4,-5,-83,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,-25,12,-30,-40,12,-22,-26,12,-49,-75,-76,12,-23,-24,12,-27,-28,-48,12,-29,12,-31,12,12,-41,-48,-61,]),'ID':([0,2,3,6,7,8,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,48,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,77,79,81,82,83,84,89,90,92,101,103,105,106,107,108,112,113,114,116,120,121,122,123,124,125,126,127,134,135,136,139,140,141,143,145,146,147,148,149,150,157,162,171,172,173,174,176,177,178,181,182,186,],[13,13,-3,-6,-7,-8,45,-77,49,-83,45,45,45,45,-73,-74,-78,-79,-80,-81,-82,-2,-4,-5,45,45,45,45,45,45,45,45,45,45,45,45,45,-83,45,45,75,45,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,45,-25,13,-30,-40,45,13,45,45,-22,-26,13,-49,45,45,-75,-76,45,13,45,-23,-24,13,45,-27,-28,-48,154,45,45,-29,45,45,13,-31,13,13,-41,45,45,45,-48,-34,-35,-45,45,-44,-32,-33,-42,-43,-61,]),'IF':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,77,79,81,82,83,84,89,90,92,101,102,103,104,105,106,107,108,112,113,114,116,120,121,122,123,124,125,126,127,134,135,136,139,140,141,143,145,146,147,148,149,150,157,162,171,172,173,174,176,177,178,181,182,186,],[14,14,-3,-6,-7,-8,46,-77,-83,46,46,46,46,-73,-74,-78,-79,-80,-81,-82,-2,-4,-5,46,46,46,46,46,46,46,46,46,46,46,46,46,-83,46,46,46,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,46,-25,14,-30,-40,46,14,46,46,-22,124,-26,46,14,-49,46,46,-75,-76,46,14,46,-23,-24,14,46,-27,-28,-48,14,46,46,-29,46,46,14,-31,14,14,-41,46,46,46,-48,-34,-35,-45,46,-44,-32,-33,-42,-43,-61,]),'MATCH':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,77,79,81,82,83,84,89,90,92,101,103,105,106,107,108,112,113,114,116,120,121,122,123,124,125,126,127,134,135,136,139,140,141,143,145,146,147,148,149,150,157,162,171,172,173,174,176,177,178,181,182,186,],[15,15,-3,-6,-7,-8,47,-77,-83,47,47,47,47,-73,-74,-78,-79,-80,-81,-82,-2,-4,-5,47,47,47,47,47,47,47,47,47,47,47,47,47,-83,47,47,47,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,47,-25,15,-30,-40,47,15,47,47,-22,-26,15,-49,47,47,-75,-76,47,15,47,-23,-24,15,47,-27,-28,-48,15,47,47,-29,47,47,15,-31,15,15,-41,47,47,47,-48,-34,-35,-45,47,-44,-32,-33,-42,-43,-61,]),'I64':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,76,77,79,81,82,83,84,89,90,91,92,101,103,105,106,107,108,112,113,114,116,120,121,122,123,124,125,126,127,134,135,136,139,140,141,143,145,146,147,148,149,150,157,162,171,172,173,174,176,177,178,181,182,186,],[17,17,-3,-6,-7,-8,17,-77,-83,17,17,17,17,-73,-74,-78,-79,-80,-81,-82,-2,-4,-5,17,17,17,17,17,17,17,17,17,17,17,17,17,-83,17,17,17,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,94,17,-25,17,-30,-40,17,17,17,94,17,-22,-26,17,-49,17,17,-75,-76,17,17,17,-23,-24,17,17,-27,-28,-48,17,17,17,-29,17,17,17,-31,17,17,-41,17,17,17,-48,-34,-35,-45,17,-44,-32,-33,-42,-43,-61,]),'PARA':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,45,46,47,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,77,79,81,82,83,84,89,90,92,101,103,105,106,107,108,111,112,113,114,116,120,121,122,123,124,125,126,127,134,135,136,139,140,141,143,145,146,147,148,149,150,157,162,171,172,173,174,176,177,178,181,182,186,],[10,10,-3,-6,-7,-8,10,-77,-83,10,10,10,10,-73,-74,-78,-79,-80,-81,-82,-2,-4,-5,10,10,10,10,10,10,10,10,10,10,10,10,10,71,-83,10,10,10,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,86,87,-62,10,-25,10,-30,-40,10,10,10,10,-22,-26,10,-49,10,10,136,-75,-76,10,10,10,-23,-24,10,10,-27,-28,-48,10,10,10,-29,10,10,10,-31,10,10,-41,10,10,10,-48,-34,-35,-45,10,-44,-32,-33,-42,-43,-61,]),'MENOS':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,46,47,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,77,78,79,81,82,83,84,89,90,92,100,101,103,105,106,107,108,110,112,113,114,116,119,120,121,122,123,124,125,126,127,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,160,161,162,168,170,171,172,173,174,175,176,177,178,181,182,185,186,],[16,16,-3,-6,-7,30,16,-77,-83,16,16,16,16,-73,-74,-78,-79,-80,-81,-82,-2,-4,-5,16,16,16,16,16,16,16,16,16,16,16,16,16,30,-83,16,16,16,30,30,-63,30,-56,-57,-58,-59,-60,30,30,30,30,30,30,30,30,-62,30,30,16,30,-25,16,-30,-40,16,16,16,16,30,-22,-26,16,-49,16,16,30,-75,-76,16,16,30,16,-23,-24,16,16,-27,-28,-48,16,16,16,30,-29,16,16,30,16,30,-31,16,16,-41,16,16,30,-83,30,30,16,30,30,-48,30,30,-34,-35,-45,16,30,-44,-32,-33,-42,-43,30,-61,]),'NOT':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,77,79,81,82,83,84,89,90,92,101,103,105,106,107,108,112,113,114,116,120,121,122,123,124,125,126,127,134,135,136,139,140,141,143,145,146,147,148,149,150,157,162,171,172,173,174,176,177,178,181,182,186,],[18,18,-3,-6,-7,-8,18,-77,-83,18,18,18,18,-73,-74,-78,-79,-80,-81,-82,-2,-4,-5,18,18,18,18,18,18,18,18,18,18,18,18,18,-83,18,18,18,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,18,-25,18,-30,-40,18,18,18,18,-22,-26,18,-49,18,18,-75,-76,18,18,18,-23,-24,18,18,-27,-28,-48,18,18,18,-29,18,18,18,-31,18,18,-41,18,18,18,-48,-34,-35,-45,18,-44,-32,-33,-42,-43,-61,]),'CADENA':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,77,79,81,82,83,84,89,90,92,101,103,105,106,107,108,112,113,114,116,120,121,122,123,124,125,126,127,134,135,136,139,140,141,143,145,146,147,148,149,150,157,162,171,172,173,174,176,177,178,181,182,186,],[11,11,-3,-6,-7,-8,11,-77,-83,11,11,11,11,-73,-74,-78,-79,-80,-81,-82,-2,-4,-5,11,11,11,11,11,11,11,11,11,11,11,11,11,-83,11,11,11,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,88,-62,11,-25,11,-30,-40,11,11,11,11,-22,-26,11,-49,11,11,-75,-76,11,11,11,-23,-24,11,11,-27,-28,-48,11,11,11,-29,11,11,11,-31,11,11,-41,11,11,11,-48,-34,-35,-45,11,-44,-32,-33,-42,-43,-61,]),'ENTERO':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,77,79,81,82,83,84,89,90,92,101,103,105,106,107,108,112,113,114,116,120,121,122,123,124,125,126,127,134,135,136,139,140,141,143,145,146,147,148,149,150,157,162,171,172,173,174,176,177,178,181,182,186,],[21,21,-3,-6,-7,-8,21,-77,-83,21,21,21,21,-73,-74,-78,-79,-80,-81,-82,-2,-4,-5,21,21,21,21,21,21,21,21,21,21,21,21,21,-83,21,21,21,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,21,-25,21,-30,-40,21,21,21,21,-22,-26,21,-49,21,21,-75,-76,21,21,21,-23,-24,21,21,-27,-28,-48,21,21,21,-29,21,21,21,-31,21,21,-41,21,21,21,-48,-34,-35,-45,21,-44,-32,-33,-42,-43,-61,]),'DECIMAL':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,77,79,81,82,83,84,89,90,92,101,103,105,106,107,108,112,113,114,116,120,121,122,123,124,125,126,127,134,135,136,139,140,141,143,145,146,147,148,149,150,157,162,171,172,173,174,176,177,178,181,182,186,],[22,22,-3,-6,-7,-8,22,-77,-83,22,22,22,22,-73,-74,-78,-79,-80,-81,-82,-2,-4,-5,22,22,22,22,22,22,22,22,22,22,22,22,22,-83,22,22,22,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,22,-25,22,-30,-40,22,22,22,22,-22,-26,22,-49,22,22,-75,-76,22,22,22,-23,-24,22,22,-27,-28,-48,22,22,22,-29,22,22,22,-31,22,22,-41,22,22,22,-48,-34,-35,-45,22,-44,-32,-33,-42,-43,-61,]),'CARACTER':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,77,79,81,82,83,84,89,90,92,101,103,105,106,107,108,112,113,114,116,120,121,122,123,124,125,126,127,134,135,136,139,140,141,143,145,146,147,148,149,150,157,162,171,172,173,174,176,177,178,181,182,186,],[23,23,-3,-6,-7,-8,23,-77,-83,23,23,23,23,-73,-74,-78,-79,-80,-81,-82,-2,-4,-5,23,23,23,23,23,23,23,23,23,23,23,23,23,-83,23,23,23,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,23,-25,23,-30,-40,23,23,23,23,-22,-26,23,-49,23,23,-75,-76,23,23,23,-23,-24,23,23,-27,-28,-48,23,23,23,-29,23,23,23,-31,23,23,-41,23,23,23,-48,-34,-35,-45,23,-44,-32,-33,-42,-43,-61,]),'TRUE':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,77,79,81,82,83,84,89,90,92,101,103,105,106,107,108,112,113,114,116,120,121,122,123,124,125,126,127,134,135,136,139,140,141,143,145,146,147,148,149,150,157,162,171,172,173,174,176,177,178,181,182,186,],[24,24,-3,-6,-7,-8,24,-77,-83,24,24,24,24,-73,-74,-78,-79,-80,-81,-82,-2,-4,-5,24,24,24,24,24,24,24,24,24,24,24,24,24,-83,24,24,24,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,24,-25,24,-30,-40,24,24,24,24,-22,-26,24,-49,24,24,-75,-76,24,24,24,-23,-24,24,24,-27,-28,-48,24,24,24,-29,24,24,24,-31,24,24,-41,24,24,24,-48,-34,-35,-45,24,-44,-32,-33,-42,-43,-61,]),'FALSE':([0,2,3,6,7,8,10,11,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,46,47,50,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,77,79,81,82,83,84,89,90,92,101,103,105,106,107,108,112,113,114,116,120,121,122,123,124,125,126,127,134,135,136,139,140,141,143,145,146,147,148,149,150,157,162,171,172,173,174,176,177,178,181,182,186,],[25,25,-3,-6,-7,-8,25,-77,-83,25,25,25,25,-73,-74,-78,-79,-80,-81,-82,-2,-4,-5,25,25,25,25,25,25,25,25,25,25,25,25,25,-83,25,25,25,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,25,-25,25,-30,-40,25,25,25,25,-22,-26,25,-49,25,25,-75,-76,25,25,25,-23,-24,25,25,-27,-28,-48,25,25,25,-29,25,25,25,-31,25,25,-41,25,25,25,-48,-34,-35,-45,25,-44,-32,-33,-42,-43,-61,]),'$end':([1,2,3,6,7,8,11,13,19,20,21,22,23,24,25,26,27,28,45,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,79,82,83,101,103,106,112,113,121,122,125,126,127,139,145,148,162,186,],[0,-1,-3,-6,-7,-8,-77,-83,-73,-74,-78,-79,-80,-81,-82,-2,-4,-5,-83,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,-25,-30,-40,-22,-26,-49,-75,-76,-23,-24,-27,-28,-48,-29,-31,-41,-48,-61,]),'LLAVC':([3,6,7,8,11,13,19,20,21,22,23,24,25,26,27,28,45,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,79,81,82,83,101,103,105,106,112,113,116,121,122,123,125,126,127,128,131,139,143,145,148,162,179,180,183,184,186,],[-3,-6,-7,-8,-77,-83,-73,-74,-78,-79,-80,-81,-82,-2,-4,-5,-83,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,-25,106,-30,-40,-22,-26,127,-49,-75,-76,139,-23,-24,106,-27,-28,-48,145,148,-29,162,-31,-41,-48,-38,-39,-46,-47,-61,]),'PT_COMA':([4,5,11,19,20,21,22,23,24,25,45,49,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,75,78,83,93,94,95,96,97,98,99,100,103,112,113,115,118,119,125,126,139,142,148,158,161,186,],[27,28,-77,-73,-74,-78,-79,-80,-81,-82,-83,-20,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,-16,-21,-40,-18,-50,-51,-52,-53,-54,-55,-19,-26,-75,-76,-10,-14,-15,-27,-28,-29,-17,-41,-9,-13,-61,]),'COMA':([6,7,8,11,13,19,20,21,22,23,24,25,27,28,45,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,79,82,83,88,101,103,106,112,113,121,122,125,126,127,137,138,139,145,148,151,152,153,154,156,159,160,162,163,164,165,166,167,168,169,170,175,186,],[-6,-7,-8,-77,-83,-73,-74,-78,-79,-80,-81,-82,-4,-5,-83,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,-25,-30,-40,114,-22,-26,-49,-75,-76,-23,-24,-27,-28,-48,157,-12,-29,-31,-41,171,172,173,-83,174,176,173,-48,177,178,179,180,181,182,183,184,-11,-61,]),'MAS':([8,11,13,19,20,21,22,23,24,25,44,45,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,78,83,100,103,110,112,113,119,125,126,138,139,142,144,148,153,154,155,156,160,161,168,170,175,185,186,],[29,-77,-83,-73,-74,-78,-79,-80,-81,-82,29,-83,29,29,-63,29,-56,-57,-58,-59,-60,29,29,29,29,29,29,29,29,-62,29,29,29,-40,29,-26,29,-75,-76,29,-27,-28,29,-29,29,29,-41,29,-83,29,29,29,29,29,29,29,29,-61,]),'MULTI':([8,11,13,19,20,21,22,23,24,25,44,45,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,78,83,100,103,110,112,113,119,125,126,138,139,142,144,148,153,154,155,156,160,161,168,170,175,185,186,],[31,-77,-83,-73,-74,-78,-79,-80,-81,-82,31,-83,31,31,-63,31,31,31,-58,-59,-60,31,31,31,31,31,31,31,31,-62,31,31,31,-40,31,-26,31,-75,-76,31,-27,-28,31,-29,31,31,-41,31,-83,31,31,31,31,31,31,31,31,-61,]),'DIV':([8,11,13,19,20,21,22,23,24,25,44,45,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,78,83,100,103,110,112,113,119,125,126,138,139,142,144,148,153,154,155,156,160,161,168,170,175,185,186,],[32,-77,-83,-73,-74,-78,-79,-80,-81,-82,32,-83,32,32,-63,32,32,32,-58,-59,-60,32,32,32,32,32,32,32,32,-62,32,32,32,-40,32,-26,32,-75,-76,32,-27,-28,32,-29,32,32,-41,32,-83,32,32,32,32,32,32,32,32,-61,]),'MODULO':([8,11,13,19,20,21,22,23,24,25,44,45,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,78,83,100,103,110,112,113,119,125,126,138,139,142,144,148,153,154,155,156,160,161,168,170,175,185,186,],[33,-77,-83,-73,-74,-78,-79,-80,-81,-82,33,-83,33,33,-63,33,33,33,-58,-59,-60,33,33,33,33,33,33,33,33,-62,33,33,33,-40,33,-26,33,-75,-76,33,-27,-28,33,-29,33,33,-41,33,-83,33,33,33,33,33,33,33,33,-61,]),'IGUAL_IGUAL':([8,11,13,19,20,21,22,23,24,25,44,45,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,78,83,100,103,110,112,113,119,125,126,138,139,142,144,148,153,154,155,156,160,161,168,170,175,185,186,],[34,-77,-83,-73,-74,-78,-79,-80,-81,-82,34,-83,34,34,-63,34,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,34,34,-62,34,34,34,-40,34,-26,34,-75,-76,34,-27,-28,34,-29,34,34,-41,34,-83,34,34,34,34,34,34,34,34,-61,]),'NO_IGUAL':([8,11,13,19,20,21,22,23,24,25,44,45,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,78,83,100,103,110,112,113,119,125,126,138,139,142,144,148,153,154,155,156,160,161,168,170,175,185,186,],[35,-77,-83,-73,-74,-78,-79,-80,-81,-82,35,-83,35,35,-63,35,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,35,35,-62,35,35,35,-40,35,-26,35,-75,-76,35,-27,-28,35,-29,35,35,-41,35,-83,35,35,35,35,35,35,35,35,-61,]),'MAYOR':([8,11,13,19,20,21,22,23,24,25,44,45,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,78,83,100,103,110,112,113,119,125,126,138,139,142,144,148,153,154,155,156,160,161,168,170,175,185,186,],[36,-77,-83,-73,-74,-78,-79,-80,-81,-82,36,-83,36,36,-63,36,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,36,36,-62,36,36,36,-40,36,-26,36,-75,-76,36,-27,-28,36,-29,36,36,-41,36,-83,36,36,36,36,36,36,36,36,-61,]),'MENOR':([8,11,13,19,20,21,22,23,24,25,44,45,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,78,83,100,103,110,112,113,119,125,126,138,139,142,144,148,153,154,155,156,160,161,168,170,175,185,186,],[37,-77,-83,-73,-74,-78,-79,-80,-81,-82,37,-83,37,37,-63,37,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,37,37,-62,37,37,37,-40,37,-26,37,-75,-76,37,-27,-28,37,-29,37,37,-41,37,-83,37,37,37,37,37,37,37,37,-61,]),'MAYOR_IGUAL':([8,11,13,19,20,21,22,23,24,25,44,45,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,78,83,100,103,110,112,113,119,125,126,138,139,142,144,148,153,154,155,156,160,161,168,170,175,185,186,],[38,-77,-83,-73,-74,-78,-79,-80,-81,-82,38,-83,38,38,-63,38,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,38,38,-62,38,38,38,-40,38,-26,38,-75,-76,38,-27,-28,38,-29,38,38,-41,38,-83,38,38,38,38,38,38,38,38,-61,]),'MENOR_IGUAL':([8,11,13,19,20,21,22,23,24,25,44,45,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,78,83,100,103,110,112,113,119,125,126,138,139,142,144,148,153,154,155,156,160,161,168,170,175,185,186,],[39,-77,-83,-73,-74,-78,-79,-80,-81,-82,39,-83,39,39,-63,39,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,39,39,-62,39,39,39,-40,39,-26,39,-75,-76,39,-27,-28,39,-29,39,39,-41,39,-83,39,39,39,39,39,39,39,39,-61,]),'AND':([8,11,13,19,20,21,22,23,24,25,44,45,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,78,83,100,103,110,112,113,119,125,126,138,139,142,144,148,153,154,155,156,160,161,168,170,175,185,186,],[40,-77,-83,-73,-74,-78,-79,-80,-81,-82,40,-83,40,40,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,40,-62,40,40,40,-40,40,-26,40,-75,-76,40,-27,-28,40,-29,40,40,-41,40,-83,40,40,40,40,40,40,40,40,-61,]),'OR':([8,11,13,19,20,21,22,23,24,25,44,45,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,78,83,100,103,110,112,113,119,125,126,138,139,142,144,148,153,154,155,156,160,161,168,170,175,185,186,],[41,-77,-83,-73,-74,-78,-79,-80,-81,-82,41,-83,41,41,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,41,41,41,-40,41,-26,41,-75,-76,41,-27,-28,41,-29,41,41,-41,41,-83,41,41,41,41,41,41,41,41,-61,]),'PUNTO':([8,11,13,19,20,21,22,23,24,25,44,45,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,78,83,100,103,110,112,113,119,125,126,138,139,142,144,148,153,154,155,156,160,161,168,170,175,185,186,],[42,-77,-83,-73,-74,-78,-79,-80,-81,-82,42,-83,42,42,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,42,42,42,-40,42,-26,42,-75,-76,42,-27,-28,42,-29,42,42,-41,42,-83,42,42,42,42,42,42,42,42,-61,]),'ADMIRACION':([9,],[43,]),'PARC':([11,19,20,21,22,23,24,25,44,45,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,83,86,87,88,103,112,113,125,126,137,138,139,148,175,185,186,],[-77,-73,-74,-78,-79,-80,-81,-82,72,-83,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,-40,112,113,115,-26,-75,-76,-27,-28,158,-12,-29,-41,-11,186,-61,]),'LLAVA':([11,19,20,21,22,23,24,25,45,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,83,102,103,104,112,113,125,126,134,139,140,144,146,147,148,149,150,186,],[-77,-73,-74,-78,-79,-80,-81,-82,-83,81,84,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,89,90,-40,123,-26,89,-75,-76,-27,-28,123,-29,123,123,123,123,-41,123,123,-61,]),'ARROW':([11,19,20,21,22,23,24,25,45,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,83,103,109,110,112,113,117,125,126,129,130,132,133,139,148,155,186,],[-77,-73,-74,-78,-79,-80,-81,-82,-83,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,-40,-26,134,-37,-75,-76,140,-27,-28,146,147,149,150,-29,-41,-36,-61,]),'SEP_MATCH':([11,19,20,21,22,23,24,25,45,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,83,103,109,110,112,113,117,125,126,129,132,139,148,155,186,],[-77,-73,-74,-78,-79,-80,-81,-82,-83,-63,-72,-56,-57,-58,-59,-60,-64,-65,-66,-67,-68,-69,-70,-71,-62,-40,-26,135,-37,-75,-76,135,-27,-28,135,135,-29,-41,-36,-61,]),'MUT':([12,],[48,]),'IGUAL':([13,49,75,93,94,95,96,97,98,99,118,154,],[50,77,92,120,-50,-51,-52,-53,-54,-55,141,50,]),'DOS_PT':([17,49,54,75,],[54,76,85,91,]),'TO_OWNED':([42,],[69,]),'TO_STRING':([42,],[70,]),'F64':([76,91,],[95,95,]),'BOOL':([76,91,],[96,96,]),'STRING':([76,91,],[97,97,]),'STR':([76,91,],[98,98,]),'CHAR':([76,91,],[99,99,]),'ELSE':([79,80,106,127,139,162,],[102,104,-49,-29,-29,-48,]),'POW':([85,],[111,]),'GUION_B':([107,108,171,172,173,176,177,178,181,182,],[130,133,-34,-35,-45,-44,-32,-33,-42,-43,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'instrucciones':([0,81,89,123,],[2,105,116,143,]),'instruccion':([0,2,81,89,105,116,123,134,143,146,147,],[3,26,3,3,26,26,3,152,26,164,166,]),'prints':([0,2,81,89,105,116,123,134,143,146,147,],[4,4,4,4,4,4,4,4,4,4,4,]),'declaracion':([0,2,81,89,105,116,123,134,143,146,147,],[5,5,5,5,5,5,5,5,5,5,5,]),'sent_if':([0,2,81,89,102,105,116,123,134,143,146,147,],[6,6,6,6,122,6,6,6,6,6,6,6,]),'match':([0,2,81,89,105,116,123,134,143,146,147,],[7,7,7,7,7,7,7,7,7,7,7,]),'expresion':([0,2,10,14,15,16,18,29,30,31,32,33,34,35,36,37,38,39,40,41,46,47,50,77,81,84,89,90,92,105,107,108,114,116,120,123,124,134,135,136,140,141,143,146,147,149,150,157,174,],[8,8,44,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,74,78,100,8,110,8,110,119,8,110,110,138,8,142,8,144,153,155,156,160,161,8,8,8,168,170,175,185,]),'exp_if':([0,2,10,14,15,16,18,29,30,31,32,33,34,35,36,37,38,39,40,41,46,47,50,77,81,84,89,90,92,104,105,107,108,114,116,120,123,124,134,135,136,140,141,143,146,147,149,150,157,174,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,126,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'exp_match':([0,2,10,14,15,16,18,29,30,31,32,33,34,35,36,37,38,39,40,41,46,47,50,77,81,84,89,90,92,105,107,108,114,116,120,123,124,134,135,136,140,141,143,146,147,149,150,157,174,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'statement':([51,102,134,140,144,146,147,149,150,],[79,121,151,159,79,163,165,167,169,]),'exp_statement':([51,73,104,],[80,80,125,]),'casos_match':([52,],[82,]),'exp_casos_match':([52,74,],[83,83,]),'tipo':([76,91,],[93,118,]),'sent_else':([79,],[101,]),'exp_else':([80,],[103,]),'lista_casos':([84,],[107,]),'exp_lista_casos':([84,90,],[108,108,]),'lista_expresiones':([84,90,107,108,],[109,117,129,132,]),'default':([107,],[128,]),'exp_default':([108,],[131,]),'list_exp':([114,],[137,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> instrucciones','inicio',1,'p_inicio','parser.py',97),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_lista_instrucciones','parser.py',103),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',110),
  ('instruccion -> prints PT_COMA','instruccion',2,'p_instruccion','parser.py',116),
  ('instruccion -> declaracion PT_COMA','instruccion',2,'p_instruccion','parser.py',117),
  ('instruccion -> sent_if','instruccion',1,'p_instruccion','parser.py',118),
  ('instruccion -> match','instruccion',1,'p_instruccion','parser.py',119),
  ('instruccion -> expresion','instruccion',1,'p_instruccion','parser.py',120),
  ('prints -> PRINTLN ADMIRACION PARA CADENA COMA list_exp PARC','prints',7,'p_instruccion_println','parser.py',127),
  ('prints -> PRINTLN ADMIRACION PARA CADENA PARC','prints',5,'p_instruccion_println_cads','parser.py',133),
  ('list_exp -> list_exp COMA expresion','list_exp',3,'p_println_listexp','parser.py',139),
  ('list_exp -> expresion','list_exp',1,'p_println_listexp_exit','parser.py',146),
  ('declaracion -> LET MUT ID DOS_PT tipo IGUAL expresion','declaracion',7,'p_instruccion_declaracion','parser.py',155),
  ('declaracion -> LET MUT ID DOS_PT tipo','declaracion',5,'p_declaracion_2','parser.py',168),
  ('declaracion -> LET MUT ID IGUAL expresion','declaracion',5,'p_declaracion_3','parser.py',181),
  ('declaracion -> LET MUT ID','declaracion',3,'p_declaracion_4','parser.py',194),
  ('declaracion -> LET ID DOS_PT tipo IGUAL expresion','declaracion',6,'p_declaracion_5','parser.py',207),
  ('declaracion -> LET ID DOS_PT tipo','declaracion',4,'p_declaracion_6','parser.py',220),
  ('declaracion -> LET ID IGUAL expresion','declaracion',4,'p_declaracion_7','parser.py',233),
  ('declaracion -> LET ID','declaracion',2,'p_declaracion_8','parser.py',246),
  ('declaracion -> ID IGUAL expresion','declaracion',3,'p__declaracion_asignacion','parser.py',259),
  ('sent_if -> IF expresion statement sent_else','sent_if',4,'p_instruccion_sent_if','parser.py',274),
  ('sent_else -> ELSE statement','sent_else',2,'p_sent_else','parser.py',280),
  ('sent_else -> ELSE sent_if','sent_else',2,'p_sent_else','parser.py',281),
  ('sent_else -> <empty>','sent_else',0,'p_sent_else_vacio','parser.py',287),
  ('exp_if -> IF expresion exp_statement exp_else','exp_if',4,'p_exp_if','parser.py',296),
  ('exp_else -> ELSE exp_statement','exp_else',2,'p_if_exp_else','parser.py',302),
  ('exp_else -> ELSE exp_if','exp_else',2,'p_if_exp_else','parser.py',303),
  ('exp_statement -> LLAVA instrucciones LLAVC','exp_statement',3,'p_exp_if_statement','parser.py',309),
  ('match -> MATCH expresion casos_match','match',3,'p_instruccion_match','parser.py',318),
  ('casos_match -> LLAVA lista_casos default LLAVC','casos_match',4,'p_match_casos','parser.py',324),
  ('lista_casos -> lista_casos lista_expresiones ARROW statement COMA','lista_casos',5,'p_match_lista_casos','parser.py',331),
  ('lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA','lista_casos',5,'p_match_lista_casos','parser.py',332),
  ('lista_casos -> lista_expresiones ARROW statement COMA','lista_casos',4,'p_match_lista_casos_salida','parser.py',339),
  ('lista_casos -> lista_expresiones ARROW instruccion COMA','lista_casos',4,'p_match_lista_casos_salida','parser.py',340),
  ('lista_expresiones -> lista_expresiones SEP_MATCH expresion','lista_expresiones',3,'p_match_lista_expresiones','parser.py',346),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_match_lista_expresiones2','parser.py',353),
  ('default -> GUION_B ARROW statement COMA','default',4,'p_match_default','parser.py',359),
  ('default -> GUION_B ARROW instruccion COMA','default',4,'p_match_default','parser.py',360),
  ('exp_match -> MATCH expresion exp_casos_match','exp_match',3,'p_expresion_match','parser.py',369),
  ('exp_casos_match -> LLAVA exp_lista_casos exp_default LLAVC','exp_casos_match',4,'p_match_expcasos','parser.py',375),
  ('exp_lista_casos -> exp_lista_casos lista_expresiones ARROW statement COMA','exp_lista_casos',5,'p_match_explista_casos','parser.py',382),
  ('exp_lista_casos -> exp_lista_casos lista_expresiones ARROW expresion COMA','exp_lista_casos',5,'p_match_explista_casos','parser.py',383),
  ('exp_lista_casos -> lista_expresiones ARROW statement COMA','exp_lista_casos',4,'p_match_explista_casos_salida','parser.py',390),
  ('exp_lista_casos -> lista_expresiones ARROW expresion COMA','exp_lista_casos',4,'p_match_explista_casos_salida','parser.py',391),
  ('exp_default -> GUION_B ARROW statement COMA','exp_default',4,'p_match_expdefault','parser.py',397),
  ('exp_default -> GUION_B ARROW expresion COMA','exp_default',4,'p_match_expdefault','parser.py',398),
  ('statement -> LLAVA instrucciones LLAVC','statement',3,'p_statement','parser.py',407),
  ('statement -> LLAVA LLAVC','statement',2,'p_statement_vacio','parser.py',413),
  ('tipo -> I64','tipo',1,'p_tipo','parser.py',421),
  ('tipo -> F64','tipo',1,'p_tipo','parser.py',422),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',423),
  ('tipo -> STRING','tipo',1,'p_tipo','parser.py',424),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',425),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',426),
  ('expresion -> expresion MAS expresion','expresion',3,'p_exp_aritmeticas','parser.py',442),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_exp_aritmeticas','parser.py',443),
  ('expresion -> expresion MULTI expresion','expresion',3,'p_exp_aritmeticas','parser.py',444),
  ('expresion -> expresion DIV expresion','expresion',3,'p_exp_aritmeticas','parser.py',445),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_exp_aritmeticas','parser.py',446),
  ('expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC','expresion',9,'p_exp_potencia','parser.py',452),
  ('expresion -> PARA expresion PARC','expresion',3,'p_exp_parentesis','parser.py',458),
  ('expresion -> MENOS expresion','expresion',2,'p_exp_unario','parser.py',465),
  ('expresion -> expresion IGUAL_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',474),
  ('expresion -> expresion NO_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',475),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_exp_relacionales','parser.py',476),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_exp_relacionales','parser.py',477),
  ('expresion -> expresion MAYOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',478),
  ('expresion -> expresion MENOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',479),
  ('expresion -> expresion AND expresion','expresion',3,'p_exp_logicas','parser.py',487),
  ('expresion -> expresion OR expresion','expresion',3,'p_exp_logicas','parser.py',488),
  ('expresion -> NOT expresion','expresion',2,'p_exp_not','parser.py',494),
  ('expresion -> exp_if','expresion',1,'p_exp_if_exp','parser.py',502),
  ('expresion -> exp_match','expresion',1,'p_exp_match_exp','parser.py',508),
  ('expresion -> expresion PUNTO TO_OWNED PARA PARC','expresion',5,'p_exp_cadena_toowned','parser.py',515),
  ('expresion -> expresion PUNTO TO_STRING PARA PARC','expresion',5,'p_exp_cadena_tostring','parser.py',521),
  ('expresion -> CADENA','expresion',1,'p_exp_cadena_pointer','parser.py',527),
  ('expresion -> ENTERO','expresion',1,'p_exp_entero','parser.py',533),
  ('expresion -> DECIMAL','expresion',1,'p_exp_decimal','parser.py',539),
  ('expresion -> CARACTER','expresion',1,'p_exp_caracter','parser.py',545),
  ('expresion -> TRUE','expresion',1,'p_exp_booleano','parser.py',551),
  ('expresion -> FALSE','expresion',1,'p_exp_booleano','parser.py',552),
  ('expresion -> ID','expresion',1,'p_exp_identificador','parser.py',561),
]
