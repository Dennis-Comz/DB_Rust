
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTleftIGUAL_IGUALNO_IGUALMENORMAYORMENOR_IGUALMAYOR_IGUALleftMASMENOSleftMULTIDIVMODULOrightUNARIOAND ARROW BOOL CADENA CARACTER CHAR COMA DECIMAL DIV DOS_PT ELSE ENTERO F64 FALSE GUION_B I64 ID IF IGUAL IGUAL_IGUAL LET LLAVA LLAVC MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MODULO MULTI MUT NOT NO_IGUAL OR PARA PARC POW PRINT PT_COMA PUNTO SEP_MATCH STR STRING TO_OWNED TO_STRING TRUE\n    inicio : instrucciones\n    \n    instrucciones : instrucciones instruccion\n    \n    instrucciones : instruccion\n    \n    instruccion : print PT_COMA\n                | declaracion PT_COMA\n                | sent_if\n                | match\n    \n    print : PRINT PARA expresion PARC\n    \n    declaracion : LET MUT ID DOS_PT tipo IGUAL expresion\n    \n    declaracion : LET MUT ID DOS_PT tipo\n    \n    declaracion : LET MUT ID IGUAL expresion\n    \n    declaracion : LET MUT ID\n    \n    declaracion : LET ID DOS_PT tipo IGUAL expresion\n    \n    declaracion : LET ID DOS_PT tipo\n    \n    declaracion : LET ID IGUAL expresion\n    \n    declaracion : LET ID\n    \n    declaracion : ID IGUAL expresion\n    \n    sent_if : IF expresion statement sent_else\n    \n    sent_else : ELSE statement\n            | ELSE sent_if\n    \n    sent_else : \n    \n    match : MATCH expresion casos_match\n    \n    casos_match : LLAVA lista_casos default LLAVC\n    \n    lista_casos : lista_casos lista_expresiones ARROW statement COMA\n                | lista_casos lista_expresiones ARROW instruccion COMA\n    \n    lista_casos : lista_expresiones ARROW statement COMA\n                | lista_expresiones ARROW instruccion COMA\n    \n    lista_expresiones : lista_expresiones SEP_MATCH expresion\n    \n    lista_expresiones : expresion\n    \n    default : GUION_B ARROW statement COMA\n            | GUION_B ARROW instruccion COMA\n    \n    statement : LLAVA instrucciones LLAVC\n    \n    statement : LLAVA LLAVC\n    \n    tipo : I64\n        | F64\n        | BOOL\n        | STRING\n        | STR\n        | CHAR\n    \n    expresion : expresion MAS expresion\n           | expresion MENOS expresion\n           | expresion MULTI expresion\n           | expresion DIV expresion\n           | expresion MODULO expresion\n    \n    expresion : I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC\n    \n    expresion : PARA expresion PARC\n    \n    expresion : MENOS expresion %prec UNARIO\n    \n    expresion : expresion IGUAL_IGUAL expresion\n            | expresion NO_IGUAL expresion\n            | expresion MAYOR expresion\n            | expresion MENOR expresion\n            | expresion MAYOR_IGUAL expresion\n            | expresion MENOR_IGUAL expresion\n    \n    expresion : expresion AND expresion\n            | expresion OR expresion\n    \n    expresion : NOT expresion\n    \n    expresion : expresion PUNTO TO_OWNED PARA PARC\n    \n    expresion : expresion PUNTO TO_STRING PARA PARC\n    \n    expresion :  ENTERO\n    \n    expresion : DECIMAL\n    \n    expresion : CARACTER\n    \n    expresion : CADENA\n    \n    expresion : TRUE\n            | FALSE\n    \n    expresion : ID\n    '
    
_lr_action_items = {'PRINT':([0,2,3,6,7,13,14,15,38,53,58,71,88,89,98,99,102,107,114,115,116,],[8,8,-3,-6,-7,-2,-4,-5,-21,8,-22,-18,8,-33,-19,-20,-32,8,-23,8,8,]),'LET':([0,2,3,6,7,13,14,15,38,53,58,71,88,89,98,99,102,107,114,115,116,],[9,9,-3,-6,-7,-2,-4,-5,-21,9,-22,-18,9,-33,-19,-20,-32,9,-23,9,9,]),'ID':([0,2,3,6,7,9,11,12,13,14,15,16,17,19,21,23,24,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,58,59,62,71,88,89,92,97,98,99,102,107,108,109,113,114,115,116,126,127,128,129,130,],[10,10,-3,-6,-7,18,31,31,-2,-4,-5,31,34,31,31,31,31,31,-21,31,31,31,31,31,31,31,31,31,31,31,31,31,10,-22,31,31,-18,10,-33,31,31,-19,-20,-32,10,31,31,31,-23,10,10,-26,-27,31,-24,-25,]),'IF':([0,2,3,6,7,13,14,15,38,53,58,71,72,88,89,98,99,102,107,114,115,116,],[11,11,-3,-6,-7,-2,-4,-5,-21,11,-22,-18,11,11,-33,-19,-20,-32,11,-23,11,11,]),'MATCH':([0,2,3,6,7,13,14,15,38,53,58,71,88,89,98,99,102,107,114,115,116,],[12,12,-3,-6,-7,-2,-4,-5,-21,12,-22,-18,12,-33,-19,-20,-32,12,-23,12,12,]),'$end':([1,2,3,6,7,13,14,15,38,58,71,89,98,99,102,114,],[0,-1,-3,-6,-7,-2,-4,-5,-21,-22,-18,-33,-19,-20,-32,-23,]),'LLAVC':([3,6,7,13,14,15,38,53,58,71,88,89,98,99,102,104,114,131,132,],[-3,-6,-7,-2,-4,-5,-21,89,-22,-18,102,-33,-19,-20,-32,114,-23,-30,-31,]),'PT_COMA':([4,5,18,25,26,27,28,29,30,31,34,37,54,57,60,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,80,81,82,83,84,85,91,95,96,110,111,112,120,134,],[14,15,-16,-59,-60,-61,-62,-63,-64,-65,-12,-17,-47,-56,-8,-14,-34,-35,-36,-37,-38,-39,-15,-40,-41,-42,-43,-44,-48,-49,-50,-51,-52,-53,-54,-55,-46,-10,-11,-13,-57,-58,-9,-45,]),'COMA':([6,7,14,15,25,26,27,28,29,30,31,38,54,57,58,71,73,74,75,76,77,78,79,80,81,82,83,84,85,89,91,98,99,102,111,112,114,117,118,121,122,123,124,125,134,],[-6,-7,-4,-5,-59,-60,-61,-62,-63,-64,-65,-21,-47,-56,-22,-18,-40,-41,-42,-43,-44,-48,-49,-50,-51,-52,-53,-54,-55,-33,-46,-19,-20,-32,-57,-58,-23,126,127,128,129,130,131,132,-45,]),'PARA':([8,11,12,16,19,21,23,24,36,39,40,41,42,43,44,45,46,47,48,49,50,51,59,62,86,87,92,97,103,108,109,113,126,127,128,129,130,],[16,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,100,101,23,23,113,23,23,23,-26,-27,23,-24,-25,]),'MUT':([9,],[17,]),'IGUAL':([10,18,34,63,64,65,66,67,68,69,95,],[19,36,62,97,-34,-35,-36,-37,-38,-39,109,]),'I64':([11,12,16,19,21,23,24,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,59,61,62,92,97,108,109,113,126,127,128,129,130,],[22,22,22,22,22,22,22,64,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,64,22,22,22,22,22,22,-26,-27,22,-24,-25,]),'MENOS':([11,12,16,19,20,21,23,24,25,26,27,28,29,30,31,32,33,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,54,56,57,59,62,70,73,74,75,76,77,78,79,80,81,82,83,84,85,91,92,94,96,97,108,109,110,111,112,113,119,120,121,126,127,128,129,130,133,134,],[21,21,21,21,40,21,21,21,-59,-60,-61,-62,-63,-64,-65,40,40,21,40,21,21,21,21,21,21,21,21,21,21,21,21,21,-47,40,40,21,21,40,-40,-41,-42,-43,-44,40,40,40,40,40,40,40,40,-46,21,40,40,21,21,21,40,-57,-58,21,40,40,40,-26,-27,21,-24,-25,40,-45,]),'NOT':([11,12,16,19,21,23,24,36,39,40,41,42,43,44,45,46,47,48,49,50,51,59,62,92,97,108,109,113,126,127,128,129,130,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-26,-27,24,-24,-25,]),'ENTERO':([11,12,16,19,21,23,24,36,39,40,41,42,43,44,45,46,47,48,49,50,51,59,62,92,97,108,109,113,126,127,128,129,130,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-26,-27,25,-24,-25,]),'DECIMAL':([11,12,16,19,21,23,24,36,39,40,41,42,43,44,45,46,47,48,49,50,51,59,62,92,97,108,109,113,126,127,128,129,130,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-26,-27,26,-24,-25,]),'CARACTER':([11,12,16,19,21,23,24,36,39,40,41,42,43,44,45,46,47,48,49,50,51,59,62,92,97,108,109,113,126,127,128,129,130,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-26,-27,27,-24,-25,]),'CADENA':([11,12,16,19,21,23,24,36,39,40,41,42,43,44,45,46,47,48,49,50,51,59,62,92,97,108,109,113,126,127,128,129,130,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-26,-27,28,-24,-25,]),'TRUE':([11,12,16,19,21,23,24,36,39,40,41,42,43,44,45,46,47,48,49,50,51,59,62,92,97,108,109,113,126,127,128,129,130,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-26,-27,29,-24,-25,]),'FALSE':([11,12,16,19,21,23,24,36,39,40,41,42,43,44,45,46,47,48,49,50,51,59,62,92,97,108,109,113,126,127,128,129,130,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-26,-27,30,-24,-25,]),'DOS_PT':([18,22,34,55,],[35,55,61,90,]),'MAS':([20,25,26,27,28,29,30,31,32,33,37,54,56,57,70,73,74,75,76,77,78,79,80,81,82,83,84,85,91,94,96,110,111,112,119,120,121,133,134,],[39,-59,-60,-61,-62,-63,-64,-65,39,39,39,-47,39,39,39,-40,-41,-42,-43,-44,39,39,39,39,39,39,39,39,-46,39,39,39,-57,-58,39,39,39,39,-45,]),'MULTI':([20,25,26,27,28,29,30,31,32,33,37,54,56,57,70,73,74,75,76,77,78,79,80,81,82,83,84,85,91,94,96,110,111,112,119,120,121,133,134,],[41,-59,-60,-61,-62,-63,-64,-65,41,41,41,-47,41,41,41,41,41,-42,-43,-44,41,41,41,41,41,41,41,41,-46,41,41,41,-57,-58,41,41,41,41,-45,]),'DIV':([20,25,26,27,28,29,30,31,32,33,37,54,56,57,70,73,74,75,76,77,78,79,80,81,82,83,84,85,91,94,96,110,111,112,119,120,121,133,134,],[42,-59,-60,-61,-62,-63,-64,-65,42,42,42,-47,42,42,42,42,42,-42,-43,-44,42,42,42,42,42,42,42,42,-46,42,42,42,-57,-58,42,42,42,42,-45,]),'MODULO':([20,25,26,27,28,29,30,31,32,33,37,54,56,57,70,73,74,75,76,77,78,79,80,81,82,83,84,85,91,94,96,110,111,112,119,120,121,133,134,],[43,-59,-60,-61,-62,-63,-64,-65,43,43,43,-47,43,43,43,43,43,-42,-43,-44,43,43,43,43,43,43,43,43,-46,43,43,43,-57,-58,43,43,43,43,-45,]),'IGUAL_IGUAL':([20,25,26,27,28,29,30,31,32,33,37,54,56,57,70,73,74,75,76,77,78,79,80,81,82,83,84,85,91,94,96,110,111,112,119,120,121,133,134,],[44,-59,-60,-61,-62,-63,-64,-65,44,44,44,-47,44,44,44,-40,-41,-42,-43,-44,-48,-49,-50,-51,-52,-53,44,44,-46,44,44,44,-57,-58,44,44,44,44,-45,]),'NO_IGUAL':([20,25,26,27,28,29,30,31,32,33,37,54,56,57,70,73,74,75,76,77,78,79,80,81,82,83,84,85,91,94,96,110,111,112,119,120,121,133,134,],[45,-59,-60,-61,-62,-63,-64,-65,45,45,45,-47,45,45,45,-40,-41,-42,-43,-44,-48,-49,-50,-51,-52,-53,45,45,-46,45,45,45,-57,-58,45,45,45,45,-45,]),'MAYOR':([20,25,26,27,28,29,30,31,32,33,37,54,56,57,70,73,74,75,76,77,78,79,80,81,82,83,84,85,91,94,96,110,111,112,119,120,121,133,134,],[46,-59,-60,-61,-62,-63,-64,-65,46,46,46,-47,46,46,46,-40,-41,-42,-43,-44,-48,-49,-50,-51,-52,-53,46,46,-46,46,46,46,-57,-58,46,46,46,46,-45,]),'MENOR':([20,25,26,27,28,29,30,31,32,33,37,54,56,57,70,73,74,75,76,77,78,79,80,81,82,83,84,85,91,94,96,110,111,112,119,120,121,133,134,],[47,-59,-60,-61,-62,-63,-64,-65,47,47,47,-47,47,47,47,-40,-41,-42,-43,-44,-48,-49,-50,-51,-52,-53,47,47,-46,47,47,47,-57,-58,47,47,47,47,-45,]),'MAYOR_IGUAL':([20,25,26,27,28,29,30,31,32,33,37,54,56,57,70,73,74,75,76,77,78,79,80,81,82,83,84,85,91,94,96,110,111,112,119,120,121,133,134,],[48,-59,-60,-61,-62,-63,-64,-65,48,48,48,-47,48,48,48,-40,-41,-42,-43,-44,-48,-49,-50,-51,-52,-53,48,48,-46,48,48,48,-57,-58,48,48,48,48,-45,]),'MENOR_IGUAL':([20,25,26,27,28,29,30,31,32,33,37,54,56,57,70,73,74,75,76,77,78,79,80,81,82,83,84,85,91,94,96,110,111,112,119,120,121,133,134,],[49,-59,-60,-61,-62,-63,-64,-65,49,49,49,-47,49,49,49,-40,-41,-42,-43,-44,-48,-49,-50,-51,-52,-53,49,49,-46,49,49,49,-57,-58,49,49,49,49,-45,]),'AND':([20,25,26,27,28,29,30,31,32,33,37,54,56,57,70,73,74,75,76,77,78,79,80,81,82,83,84,85,91,94,96,110,111,112,119,120,121,133,134,],[50,-59,-60,-61,-62,-63,-64,-65,50,50,50,-47,50,-56,50,-40,-41,-42,-43,-44,-48,-49,-50,-51,-52,-53,-54,50,-46,50,50,50,-57,-58,50,50,50,50,-45,]),'OR':([20,25,26,27,28,29,30,31,32,33,37,54,56,57,70,73,74,75,76,77,78,79,80,81,82,83,84,85,91,94,96,110,111,112,119,120,121,133,134,],[51,-59,-60,-61,-62,-63,-64,-65,51,51,51,-47,51,-56,51,-40,-41,-42,-43,-44,-48,-49,-50,-51,-52,-53,-54,-55,-46,51,51,51,-57,-58,51,51,51,51,-45,]),'PUNTO':([20,25,26,27,28,29,30,31,32,33,37,54,56,57,70,73,74,75,76,77,78,79,80,81,82,83,84,85,91,94,96,110,111,112,119,120,121,133,134,],[52,-59,-60,-61,-62,-63,-64,-65,52,52,52,-47,52,-56,52,-40,-41,-42,-43,-44,-48,-49,-50,-51,-52,-53,-54,-55,-46,52,52,52,-57,-58,52,52,52,52,-45,]),'LLAVA':([20,25,26,27,28,29,30,31,32,54,57,72,73,74,75,76,77,78,79,80,81,82,83,84,85,91,107,111,112,115,116,134,],[53,-59,-60,-61,-62,-63,-64,-65,59,-47,-56,53,-40,-41,-42,-43,-44,-48,-49,-50,-51,-52,-53,-54,-55,-46,53,-57,-58,53,53,-45,]),'PARC':([25,26,27,28,29,30,31,33,54,56,57,73,74,75,76,77,78,79,80,81,82,83,84,85,91,100,101,111,112,133,134,],[-59,-60,-61,-62,-63,-64,-65,60,-47,91,-56,-40,-41,-42,-43,-44,-48,-49,-50,-51,-52,-53,-54,-55,-46,111,112,-57,-58,134,-45,]),'ARROW':([25,26,27,28,29,30,31,54,57,73,74,75,76,77,78,79,80,81,82,83,84,85,91,93,94,105,106,111,112,119,134,],[-59,-60,-61,-62,-63,-64,-65,-47,-56,-40,-41,-42,-43,-44,-48,-49,-50,-51,-52,-53,-54,-55,-46,107,-29,115,116,-57,-58,-28,-45,]),'SEP_MATCH':([25,26,27,28,29,30,31,54,57,73,74,75,76,77,78,79,80,81,82,83,84,85,91,93,94,105,111,112,119,134,],[-59,-60,-61,-62,-63,-64,-65,-47,-56,-40,-41,-42,-43,-44,-48,-49,-50,-51,-52,-53,-54,-55,-46,108,-29,108,-57,-58,-28,-45,]),'F64':([35,61,],[65,65,]),'BOOL':([35,61,],[66,66,]),'STRING':([35,61,],[67,67,]),'STR':([35,61,],[68,68,]),'CHAR':([35,61,],[69,69,]),'ELSE':([38,89,102,],[72,-33,-32,]),'TO_OWNED':([52,],[86,]),'TO_STRING':([52,],[87,]),'POW':([90,],[103,]),'GUION_B':([92,126,127,129,130,],[106,-26,-27,-24,-25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'instrucciones':([0,53,],[2,88,]),'instruccion':([0,2,53,88,107,115,116,],[3,13,3,13,118,123,125,]),'print':([0,2,53,88,107,115,116,],[4,4,4,4,4,4,4,]),'declaracion':([0,2,53,88,107,115,116,],[5,5,5,5,5,5,5,]),'sent_if':([0,2,53,72,88,107,115,116,],[6,6,6,99,6,6,6,6,]),'match':([0,2,53,88,107,115,116,],[7,7,7,7,7,7,7,]),'expresion':([11,12,16,19,21,23,24,36,39,40,41,42,43,44,45,46,47,48,49,50,51,59,62,92,97,108,109,113,128,],[20,32,33,37,54,56,57,70,73,74,75,76,77,78,79,80,81,82,83,84,85,94,96,94,110,119,120,121,133,]),'statement':([20,72,107,115,116,],[38,98,117,122,124,]),'casos_match':([32,],[58,]),'tipo':([35,61,],[63,95,]),'sent_else':([38,],[71,]),'lista_casos':([59,],[92,]),'lista_expresiones':([59,92,],[93,105,]),'default':([92,],[104,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> instrucciones','inicio',1,'p_inicio','parser.py',96),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_lista_instrucciones','parser.py',102),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',109),
  ('instruccion -> print PT_COMA','instruccion',2,'p_instruccion','parser.py',115),
  ('instruccion -> declaracion PT_COMA','instruccion',2,'p_instruccion','parser.py',116),
  ('instruccion -> sent_if','instruccion',1,'p_instruccion','parser.py',117),
  ('instruccion -> match','instruccion',1,'p_instruccion','parser.py',118),
  ('print -> PRINT PARA expresion PARC','print',4,'p_instruccion_print','parser.py',124),
  ('declaracion -> LET MUT ID DOS_PT tipo IGUAL expresion','declaracion',7,'p_instruccion_declaracion','parser.py',131),
  ('declaracion -> LET MUT ID DOS_PT tipo','declaracion',5,'p_declaracion_2','parser.py',144),
  ('declaracion -> LET MUT ID IGUAL expresion','declaracion',5,'p_declaracion_3','parser.py',157),
  ('declaracion -> LET MUT ID','declaracion',3,'p_declaracion_4','parser.py',170),
  ('declaracion -> LET ID DOS_PT tipo IGUAL expresion','declaracion',6,'p_declaracion_5','parser.py',183),
  ('declaracion -> LET ID DOS_PT tipo','declaracion',4,'p_declaracion_6','parser.py',196),
  ('declaracion -> LET ID IGUAL expresion','declaracion',4,'p_declaracion_7','parser.py',209),
  ('declaracion -> LET ID','declaracion',2,'p_declaracion_8','parser.py',222),
  ('declaracion -> ID IGUAL expresion','declaracion',3,'p__declaracion_asignacion','parser.py',235),
  ('sent_if -> IF expresion statement sent_else','sent_if',4,'p_instruccion_sent_if','parser.py',250),
  ('sent_else -> ELSE statement','sent_else',2,'p_sent_else','parser.py',256),
  ('sent_else -> ELSE sent_if','sent_else',2,'p_sent_else','parser.py',257),
  ('sent_else -> <empty>','sent_else',0,'p_sent_else_vacio','parser.py',263),
  ('match -> MATCH expresion casos_match','match',3,'p_instruccion_match','parser.py',272),
  ('casos_match -> LLAVA lista_casos default LLAVC','casos_match',4,'p_match_casos','parser.py',278),
  ('lista_casos -> lista_casos lista_expresiones ARROW statement COMA','lista_casos',5,'p_match_lista_casos','parser.py',285),
  ('lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA','lista_casos',5,'p_match_lista_casos','parser.py',286),
  ('lista_casos -> lista_expresiones ARROW statement COMA','lista_casos',4,'p_match_lista_casos_salida','parser.py',293),
  ('lista_casos -> lista_expresiones ARROW instruccion COMA','lista_casos',4,'p_match_lista_casos_salida','parser.py',294),
  ('lista_expresiones -> lista_expresiones SEP_MATCH expresion','lista_expresiones',3,'p_match_lista_expresiones','parser.py',300),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_match_lista_expresiones2','parser.py',307),
  ('default -> GUION_B ARROW statement COMA','default',4,'p_match_default','parser.py',313),
  ('default -> GUION_B ARROW instruccion COMA','default',4,'p_match_default','parser.py',314),
  ('statement -> LLAVA instrucciones LLAVC','statement',3,'p_statement','parser.py',321),
  ('statement -> LLAVA LLAVC','statement',2,'p_statement_vacio','parser.py',327),
  ('tipo -> I64','tipo',1,'p_tipo','parser.py',333),
  ('tipo -> F64','tipo',1,'p_tipo','parser.py',334),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',335),
  ('tipo -> STRING','tipo',1,'p_tipo','parser.py',336),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',337),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',338),
  ('expresion -> expresion MAS expresion','expresion',3,'p_exp_aritmeticas','parser.py',354),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_exp_aritmeticas','parser.py',355),
  ('expresion -> expresion MULTI expresion','expresion',3,'p_exp_aritmeticas','parser.py',356),
  ('expresion -> expresion DIV expresion','expresion',3,'p_exp_aritmeticas','parser.py',357),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_exp_aritmeticas','parser.py',358),
  ('expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC','expresion',9,'p_exp_potencia','parser.py',364),
  ('expresion -> PARA expresion PARC','expresion',3,'p_exp_parentesis','parser.py',370),
  ('expresion -> MENOS expresion','expresion',2,'p_exp_unario','parser.py',377),
  ('expresion -> expresion IGUAL_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',386),
  ('expresion -> expresion NO_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',387),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_exp_relacionales','parser.py',388),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_exp_relacionales','parser.py',389),
  ('expresion -> expresion MAYOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',390),
  ('expresion -> expresion MENOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',391),
  ('expresion -> expresion AND expresion','expresion',3,'p_exp_logicas','parser.py',399),
  ('expresion -> expresion OR expresion','expresion',3,'p_exp_logicas','parser.py',400),
  ('expresion -> NOT expresion','expresion',2,'p_exp_not','parser.py',406),
  ('expresion -> expresion PUNTO TO_OWNED PARA PARC','expresion',5,'p_exp_cadena_toowned','parser.py',414),
  ('expresion -> expresion PUNTO TO_STRING PARA PARC','expresion',5,'p_exp_cadena_tostring','parser.py',420),
  ('expresion -> ENTERO','expresion',1,'p_exp_entero','parser.py',427),
  ('expresion -> DECIMAL','expresion',1,'p_exp_decimal','parser.py',433),
  ('expresion -> CARACTER','expresion',1,'p_exp_caracter','parser.py',439),
  ('expresion -> CADENA','expresion',1,'p_exp_cadena_pointer','parser.py',445),
  ('expresion -> TRUE','expresion',1,'p_exp_booleano','parser.py',451),
  ('expresion -> FALSE','expresion',1,'p_exp_booleano','parser.py',452),
  ('expresion -> ID','expresion',1,'p_exp_identificador','parser.py',461),
]
