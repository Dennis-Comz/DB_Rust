
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTleftIGUAL_IGUALNO_IGUALMENORMAYORMENOR_IGUALMAYOR_IGUALleftMASMENOSleftMULTIDIVMODULOrightUNARIOAND BOOL CADENA CARACTER CHAR COMA DECIMAL DIV DOS_PT ENTERO F64 FALSE I64 ID IGUAL IGUAL_IGUAL LET MAS MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MODULO MULTI MUT NOT NO_IGUAL OR PARA PARC POW PRINT PT_COMA PUNTO STR STRING TO_OWNED TO_STRING TRUE\n    inicio : instrucciones\n    \n    instrucciones : instrucciones instruccion PT_COMA\n    \n    instrucciones : instruccion PT_COMA\n    \n    instruccion : print\n                | declaracion\n    \n    print : PRINT PARA expresion PARC\n    \n    declaracion : LET MUT ID DOS_PT tipo IGUAL expresion\n    \n    declaracion : LET MUT ID DOS_PT tipo\n    \n    declaracion : LET MUT ID IGUAL expresion\n    \n    declaracion : LET MUT ID\n    \n    declaracion : LET ID DOS_PT tipo IGUAL expresion\n    \n    declaracion : LET ID DOS_PT tipo\n    \n    declaracion : LET ID IGUAL expresion\n    \n    declaracion : LET ID\n    \n    declaracion : ID IGUAL expresion\n    \n    tipo : I64\n        | F64\n        | BOOL\n        | STRING\n        | STR\n    \n    expresion : expresion MAS expresion\n           | expresion MENOS expresion\n           | expresion MULTI expresion\n           | expresion DIV expresion\n           | expresion MODULO expresion\n    \n    expresion : I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC\n    \n    expresion : PARA expresion PARC\n    \n    expresion : MENOS expresion %prec UNARIO\n    \n    expresion : expresion IGUAL_IGUAL expresion\n            | expresion NO_IGUAL expresion\n            | expresion MAYOR expresion\n            | expresion MENOR expresion\n            | expresion MAYOR_IGUAL expresion\n            | expresion MENOR_IGUAL expresion\n    \n    expresion : expresion AND expresion\n            | expresion OR expresion\n    \n    expresion : NOT expresion\n    \n    expresion : expresion PUNTO TO_OWNED PARA PARC\n    \n    expresion : expresion PUNTO TO_STRING PARA PARC\n    \n    expresion :  ENTERO\n    \n    expresion : DECIMAL\n    \n    expresion : CARACTER\n    \n    expresion : CADENA\n    \n    expresion : TRUE\n            | FALSE\n    \n    expresion : ID\n    '
    
_lr_action_items = {'PRINT':([0,2,10,15,],[6,6,-3,-2,]),'LET':([0,2,10,15,],[7,7,-3,-2,]),'ID':([0,2,7,10,11,12,14,15,16,18,20,30,34,35,36,37,38,39,40,41,42,43,44,45,46,52,79,83,87,90,],[8,8,13,-3,27,28,27,-2,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'$end':([1,2,10,15,],[0,-1,-3,-2,]),'PT_COMA':([3,4,5,9,13,21,22,23,24,25,26,27,28,31,33,48,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,78,84,85,86,88,92,],[10,-4,-5,15,-14,-40,-41,-42,-43,-44,-45,-46,-10,-15,-6,-28,-37,-12,-16,-17,-18,-19,-20,-13,-27,-21,-22,-23,-24,-25,-29,-30,-31,-32,-33,-34,-35,-36,-8,-9,-11,-38,-39,-7,-26,]),'PARA':([6,11,14,16,18,20,30,34,35,36,37,38,39,40,41,42,43,44,45,46,52,74,75,79,82,83,87,90,],[11,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,80,81,16,87,16,16,16,]),'MUT':([7,],[12,]),'IGUAL':([8,13,28,53,54,55,56,57,58,77,],[14,30,52,79,-16,-17,-18,-19,-20,83,]),'I64':([11,14,16,18,20,29,30,34,35,36,37,38,39,40,41,42,43,44,45,46,51,52,79,83,87,90,],[19,19,19,19,19,54,19,19,19,19,19,19,19,19,19,19,19,19,19,19,54,19,19,19,19,19,]),'MENOS':([11,14,16,17,18,20,21,22,23,24,25,26,27,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,48,50,52,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,79,83,84,85,86,87,88,89,90,91,92,],[18,18,18,35,18,18,-40,-41,-42,-43,-44,-45,-46,18,35,35,18,18,18,18,18,18,18,18,18,18,18,18,18,-28,35,18,35,-27,-21,-22,-23,-24,-25,35,35,35,35,35,35,35,35,35,18,18,35,-38,-39,18,35,35,18,35,-26,]),'NOT':([11,14,16,18,20,30,34,35,36,37,38,39,40,41,42,43,44,45,46,52,79,83,87,90,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'ENTERO':([11,14,16,18,20,30,34,35,36,37,38,39,40,41,42,43,44,45,46,52,79,83,87,90,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'DECIMAL':([11,14,16,18,20,30,34,35,36,37,38,39,40,41,42,43,44,45,46,52,79,83,87,90,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'CARACTER':([11,14,16,18,20,30,34,35,36,37,38,39,40,41,42,43,44,45,46,52,79,83,87,90,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'CADENA':([11,14,16,18,20,30,34,35,36,37,38,39,40,41,42,43,44,45,46,52,79,83,87,90,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'TRUE':([11,14,16,18,20,30,34,35,36,37,38,39,40,41,42,43,44,45,46,52,79,83,87,90,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'FALSE':([11,14,16,18,20,30,34,35,36,37,38,39,40,41,42,43,44,45,46,52,79,83,87,90,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'DOS_PT':([13,19,28,49,],[29,49,51,76,]),'PARC':([17,21,22,23,24,25,26,27,32,48,50,60,61,62,63,64,65,66,67,68,69,70,71,72,73,80,81,85,86,91,92,],[33,-40,-41,-42,-43,-44,-45,-46,60,-28,-37,-27,-21,-22,-23,-24,-25,-29,-30,-31,-32,-33,-34,-35,-36,85,86,-38,-39,92,-26,]),'MAS':([17,21,22,23,24,25,26,27,31,32,48,50,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,84,85,86,88,89,91,92,],[34,-40,-41,-42,-43,-44,-45,-46,34,34,-28,34,34,-27,-21,-22,-23,-24,-25,34,34,34,34,34,34,34,34,34,34,-38,-39,34,34,34,-26,]),'MULTI':([17,21,22,23,24,25,26,27,31,32,48,50,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,84,85,86,88,89,91,92,],[36,-40,-41,-42,-43,-44,-45,-46,36,36,-28,36,36,-27,36,36,-23,-24,-25,36,36,36,36,36,36,36,36,36,36,-38,-39,36,36,36,-26,]),'DIV':([17,21,22,23,24,25,26,27,31,32,48,50,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,84,85,86,88,89,91,92,],[37,-40,-41,-42,-43,-44,-45,-46,37,37,-28,37,37,-27,37,37,-23,-24,-25,37,37,37,37,37,37,37,37,37,37,-38,-39,37,37,37,-26,]),'MODULO':([17,21,22,23,24,25,26,27,31,32,48,50,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,84,85,86,88,89,91,92,],[38,-40,-41,-42,-43,-44,-45,-46,38,38,-28,38,38,-27,38,38,-23,-24,-25,38,38,38,38,38,38,38,38,38,38,-38,-39,38,38,38,-26,]),'IGUAL_IGUAL':([17,21,22,23,24,25,26,27,31,32,48,50,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,84,85,86,88,89,91,92,],[39,-40,-41,-42,-43,-44,-45,-46,39,39,-28,39,39,-27,-21,-22,-23,-24,-25,-29,-30,-31,-32,-33,-34,39,39,39,39,-38,-39,39,39,39,-26,]),'NO_IGUAL':([17,21,22,23,24,25,26,27,31,32,48,50,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,84,85,86,88,89,91,92,],[40,-40,-41,-42,-43,-44,-45,-46,40,40,-28,40,40,-27,-21,-22,-23,-24,-25,-29,-30,-31,-32,-33,-34,40,40,40,40,-38,-39,40,40,40,-26,]),'MAYOR':([17,21,22,23,24,25,26,27,31,32,48,50,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,84,85,86,88,89,91,92,],[41,-40,-41,-42,-43,-44,-45,-46,41,41,-28,41,41,-27,-21,-22,-23,-24,-25,-29,-30,-31,-32,-33,-34,41,41,41,41,-38,-39,41,41,41,-26,]),'MENOR':([17,21,22,23,24,25,26,27,31,32,48,50,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,84,85,86,88,89,91,92,],[42,-40,-41,-42,-43,-44,-45,-46,42,42,-28,42,42,-27,-21,-22,-23,-24,-25,-29,-30,-31,-32,-33,-34,42,42,42,42,-38,-39,42,42,42,-26,]),'MAYOR_IGUAL':([17,21,22,23,24,25,26,27,31,32,48,50,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,84,85,86,88,89,91,92,],[43,-40,-41,-42,-43,-44,-45,-46,43,43,-28,43,43,-27,-21,-22,-23,-24,-25,-29,-30,-31,-32,-33,-34,43,43,43,43,-38,-39,43,43,43,-26,]),'MENOR_IGUAL':([17,21,22,23,24,25,26,27,31,32,48,50,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,84,85,86,88,89,91,92,],[44,-40,-41,-42,-43,-44,-45,-46,44,44,-28,44,44,-27,-21,-22,-23,-24,-25,-29,-30,-31,-32,-33,-34,44,44,44,44,-38,-39,44,44,44,-26,]),'AND':([17,21,22,23,24,25,26,27,31,32,48,50,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,84,85,86,88,89,91,92,],[45,-40,-41,-42,-43,-44,-45,-46,45,45,-28,-37,45,-27,-21,-22,-23,-24,-25,-29,-30,-31,-32,-33,-34,-35,45,45,45,-38,-39,45,45,45,-26,]),'OR':([17,21,22,23,24,25,26,27,31,32,48,50,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,84,85,86,88,89,91,92,],[46,-40,-41,-42,-43,-44,-45,-46,46,46,-28,-37,46,-27,-21,-22,-23,-24,-25,-29,-30,-31,-32,-33,-34,-35,-36,46,46,-38,-39,46,46,46,-26,]),'PUNTO':([17,21,22,23,24,25,26,27,31,32,48,50,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,84,85,86,88,89,91,92,],[47,-40,-41,-42,-43,-44,-45,-46,47,47,-28,-37,47,-27,-21,-22,-23,-24,-25,-29,-30,-31,-32,-33,-34,-35,-36,47,47,-38,-39,47,47,47,-26,]),'COMA':([21,22,23,24,25,26,27,48,50,60,61,62,63,64,65,66,67,68,69,70,71,72,73,85,86,89,92,],[-40,-41,-42,-43,-44,-45,-46,-28,-37,-27,-21,-22,-23,-24,-25,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,90,-26,]),'F64':([29,51,],[55,55,]),'BOOL':([29,51,],[56,56,]),'STRING':([29,51,],[57,57,]),'STR':([29,51,],[58,58,]),'TO_OWNED':([47,],[74,]),'TO_STRING':([47,],[75,]),'POW':([76,],[82,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,9,]),'print':([0,2,],[4,4,]),'declaracion':([0,2,],[5,5,]),'expresion':([11,14,16,18,20,30,34,35,36,37,38,39,40,41,42,43,44,45,46,52,79,83,87,90,],[17,31,32,48,50,59,61,62,63,64,65,66,67,68,69,70,71,72,73,78,84,88,89,91,]),'tipo':([29,51,],[53,77,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> instrucciones','inicio',1,'p_inicio','parser.py',73),
  ('instrucciones -> instrucciones instruccion PT_COMA','instrucciones',3,'p_lista_instrucciones','parser.py',79),
  ('instrucciones -> instruccion PT_COMA','instrucciones',2,'p_instrucciones_instruccion','parser.py',86),
  ('instruccion -> print','instruccion',1,'p_instruccion','parser.py',92),
  ('instruccion -> declaracion','instruccion',1,'p_instruccion','parser.py',93),
  ('print -> PRINT PARA expresion PARC','print',4,'p_instruccion_print','parser.py',99),
  ('declaracion -> LET MUT ID DOS_PT tipo IGUAL expresion','declaracion',7,'p_instruccion_declaracion','parser.py',105),
  ('declaracion -> LET MUT ID DOS_PT tipo','declaracion',5,'p_declaracion_2','parser.py',118),
  ('declaracion -> LET MUT ID IGUAL expresion','declaracion',5,'p_declaracion_3','parser.py',131),
  ('declaracion -> LET MUT ID','declaracion',3,'p_declaracion_4','parser.py',144),
  ('declaracion -> LET ID DOS_PT tipo IGUAL expresion','declaracion',6,'p_declaracion_5','parser.py',157),
  ('declaracion -> LET ID DOS_PT tipo','declaracion',4,'p_declaracion_6','parser.py',170),
  ('declaracion -> LET ID IGUAL expresion','declaracion',4,'p_declaracion_7','parser.py',183),
  ('declaracion -> LET ID','declaracion',2,'p_declaracion_8','parser.py',196),
  ('declaracion -> ID IGUAL expresion','declaracion',3,'p__declaracion_asignacion','parser.py',209),
  ('tipo -> I64','tipo',1,'p_tipo','parser.py',223),
  ('tipo -> F64','tipo',1,'p_tipo','parser.py',224),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',225),
  ('tipo -> STRING','tipo',1,'p_tipo','parser.py',226),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',227),
  ('expresion -> expresion MAS expresion','expresion',3,'p_exp_aritmeticas','parser.py',243),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_exp_aritmeticas','parser.py',244),
  ('expresion -> expresion MULTI expresion','expresion',3,'p_exp_aritmeticas','parser.py',245),
  ('expresion -> expresion DIV expresion','expresion',3,'p_exp_aritmeticas','parser.py',246),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_exp_aritmeticas','parser.py',247),
  ('expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC','expresion',9,'p_exp_potencia','parser.py',253),
  ('expresion -> PARA expresion PARC','expresion',3,'p_exp_parentesis','parser.py',259),
  ('expresion -> MENOS expresion','expresion',2,'p_exp_unario','parser.py',266),
  ('expresion -> expresion IGUAL_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',275),
  ('expresion -> expresion NO_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',276),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_exp_relacionales','parser.py',277),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_exp_relacionales','parser.py',278),
  ('expresion -> expresion MAYOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',279),
  ('expresion -> expresion MENOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',280),
  ('expresion -> expresion AND expresion','expresion',3,'p_exp_logicas','parser.py',288),
  ('expresion -> expresion OR expresion','expresion',3,'p_exp_logicas','parser.py',289),
  ('expresion -> NOT expresion','expresion',2,'p_exp_not','parser.py',295),
  ('expresion -> expresion PUNTO TO_OWNED PARA PARC','expresion',5,'p_exp_cadena_toowned','parser.py',303),
  ('expresion -> expresion PUNTO TO_STRING PARA PARC','expresion',5,'p_exp_cadena_tostring','parser.py',309),
  ('expresion -> ENTERO','expresion',1,'p_exp_entero','parser.py',316),
  ('expresion -> DECIMAL','expresion',1,'p_exp_decimal','parser.py',322),
  ('expresion -> CARACTER','expresion',1,'p_exp_caracter','parser.py',328),
  ('expresion -> CADENA','expresion',1,'p_exp_cadena_pointer','parser.py',334),
  ('expresion -> TRUE','expresion',1,'p_exp_booleano','parser.py',340),
  ('expresion -> FALSE','expresion',1,'p_exp_booleano','parser.py',341),
  ('expresion -> ID','expresion',1,'p_exp_identificador','parser.py',350),
]
