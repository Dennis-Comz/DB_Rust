
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocIGUAL_IGUALNO_IGUALMENORMAYORMENOR_IGUALMAYOR_IGUALleftMASMENOSleftMULTIDIVMODULOrightNOTUNARIOAND ARROW BOOL CADENA CARACTER CHAR COMA DECIMAL DIV DOS_PT ELSE ENTERO F64 FALSE GUION_B I64 ID IF IGUAL IGUAL_IGUAL LET LLAVA LLAVC MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MODULO MULTI MUT NOT NO_IGUAL OR PARA PARC POW PRINTLN PT_COMA PUNTO SEP_MATCH STR STRING TO_OWNED TO_STRING TRUE\n    inicio : instrucciones\n    \n    instrucciones : instrucciones instruccion\n    \n    instrucciones : instruccion\n    \n    instruccion : prints PT_COMA\n                | declaracion PT_COMA\n                | sent_if\n                | match\n                | expresion\n    \n    prints : PRINTLN NOT PARA CADENA COMA list_exp PARC\n    \n    prints : PRINTLN NOT PARA CADENA PARC\n    \n    list_exp : list_exp COMA expresion\n    \n    list_exp : expresion\n    \n    declaracion : LET MUT ID DOS_PT tipo IGUAL valores\n    \n    declaracion : LET MUT ID DOS_PT tipo\n    \n    declaracion : LET MUT ID IGUAL valores\n    \n    declaracion : LET MUT ID\n    \n    declaracion : LET ID DOS_PT tipo IGUAL valores\n    \n    declaracion : LET ID DOS_PT tipo\n    \n    declaracion : LET ID IGUAL valores\n    \n    declaracion : LET ID\n    \n    declaracion : ID IGUAL valores\n    \n    valores : expresion\n            | sent_if\n            | match\n    \n    sent_if : IF expresion statement sent_else\n    \n    sent_else : ELSE statement\n            | ELSE sent_if\n    \n    sent_else : \n    \n    match : MATCH expresion casos_match\n    \n    casos_match : LLAVA lista_casos default LLAVC\n    \n    lista_casos : lista_casos lista_expresiones ARROW statement COMA\n                | lista_casos lista_expresiones ARROW instruccion COMA\n    \n    lista_casos : lista_expresiones ARROW statement COMA\n                | lista_expresiones ARROW instruccion COMA\n    \n    lista_expresiones : lista_expresiones SEP_MATCH expresion\n    \n    lista_expresiones : expresion\n    \n    default : GUION_B ARROW statement COMA\n            | GUION_B ARROW instruccion COMA\n    \n    statement : LLAVA instrucciones LLAVC\n    \n    statement : LLAVA LLAVC\n    \n    tipo : I64\n        | F64\n        | BOOL\n        | STRING\n        | STR\n        | CHAR\n    \n    expresion : MENOS expresion %prec UNARIO\n            | expresion MAS expresion\n            | expresion MENOS expresion\n            | expresion MULTI expresion\n            | expresion DIV expresion\n            | expresion MODULO expresion\n    \n    expresion : I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC\n    \n    expresion : PARA expresion PARC\n    \n    expresion : expresion IGUAL_IGUAL expresion\n            | expresion NO_IGUAL expresion\n            | expresion MAYOR expresion\n            | expresion MENOR expresion\n            | expresion MAYOR_IGUAL expresion\n            | expresion MENOR_IGUAL expresion\n    \n    expresion : expresion AND expresion\n            | expresion OR expresion\n    \n    expresion : NOT expresion %prec NOT\n    \n    expresion : ENTERO\n            | DECIMAL\n            | ID\n            | CADENA \n            | CARACTER\n            | TRUE\n            | FALSE\n    \n    expresion : expresion PUNTO TO_OWNED PARA PARC\n    \n    expresion : expresion PUNTO TO_STRING PARA PARC\n    '
    
_lr_action_items = {'PRINTLN':([0,2,3,6,7,8,12,14,19,20,21,22,23,24,25,26,42,43,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,76,77,78,94,96,97,102,103,109,110,111,115,122,123,124,145,],[9,9,-3,-6,-7,-8,-67,-66,-64,-65,-68,-69,-70,-2,-4,-5,-63,-66,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,-28,9,-29,-25,9,-40,-71,-72,-26,-27,-39,9,-30,9,9,-53,]),'LET':([0,2,3,6,7,8,12,14,19,20,21,22,23,24,25,26,42,43,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,76,77,78,94,96,97,102,103,109,110,111,115,122,123,124,145,],[13,13,-3,-6,-7,-8,-67,-66,-64,-65,-68,-69,-70,-2,-4,-5,-63,-66,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,-28,13,-29,-25,13,-40,-71,-72,-26,-27,-39,13,-30,13,13,-53,]),'ID':([0,2,3,6,7,8,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,45,47,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,71,76,77,78,79,85,94,96,97,98,102,103,104,108,109,110,111,115,116,117,120,122,123,124,129,136,137,138,140,141,145,],[14,14,-3,-6,-7,-8,43,43,-67,46,-66,43,43,43,-64,-65,-68,-69,-70,-2,-4,-5,43,43,43,43,43,43,43,43,43,43,43,43,43,-63,-66,69,43,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,43,-28,14,-29,43,43,-25,14,-40,43,-71,-72,43,43,-26,-27,-39,14,43,43,43,-30,14,14,43,-33,-34,43,-31,-32,-53,]),'IF':([0,2,3,6,7,8,12,14,19,20,21,22,23,24,25,26,42,43,47,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,71,76,77,78,85,94,95,96,97,102,103,108,109,110,111,115,120,122,123,124,145,],[15,15,-3,-6,-7,-8,-67,-66,-64,-65,-68,-69,-70,-2,-4,-5,-63,-66,15,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,15,-28,15,-29,15,-25,15,15,-40,-71,-72,15,-26,-27,-39,15,15,-30,15,15,-53,]),'MATCH':([0,2,3,6,7,8,12,14,19,20,21,22,23,24,25,26,42,43,47,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,71,76,77,78,85,94,96,97,102,103,108,109,110,111,115,120,122,123,124,145,],[16,16,-3,-6,-7,-8,-67,-66,-64,-65,-68,-69,-70,-2,-4,-5,-63,-66,16,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,16,-28,16,-29,16,-25,16,-40,-71,-72,16,-26,-27,-39,16,16,-30,16,16,-53,]),'MENOS':([0,2,3,6,7,8,10,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,71,73,76,77,78,79,85,94,96,97,98,100,102,103,104,108,109,110,111,115,116,117,119,120,122,123,124,127,128,129,136,137,138,139,140,141,144,145,],[17,17,-3,-6,-7,28,17,17,-67,-66,17,17,17,-64,-65,-68,-69,-70,-2,-4,-5,17,17,17,17,17,17,17,17,17,17,17,17,17,-63,-66,28,17,28,28,-47,-48,-49,-50,-51,-52,28,28,28,28,28,28,28,28,-54,17,28,-28,17,-29,17,17,-25,17,-40,17,28,-71,-72,17,17,-26,-27,-39,17,17,17,28,17,-30,17,17,28,28,17,-33,-34,17,28,-31,-32,28,-53,]),'I64':([0,2,3,6,7,8,10,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,47,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,70,71,76,77,78,79,84,85,94,96,97,98,102,103,104,108,109,110,111,115,116,117,120,122,123,124,129,136,137,138,140,141,145,],[18,18,-3,-6,-7,-8,18,18,-67,-66,18,18,18,-64,-65,-68,-69,-70,-2,-4,-5,18,18,18,18,18,18,18,18,18,18,18,18,18,-63,-66,18,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,87,18,-28,18,-29,18,87,18,-25,18,-40,18,-71,-72,18,18,-26,-27,-39,18,18,18,18,-30,18,18,18,-33,-34,18,-31,-32,-53,]),'PARA':([0,2,3,6,7,8,10,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,47,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,71,76,77,78,79,85,94,96,97,98,101,102,103,104,108,109,110,111,115,116,117,120,122,123,124,129,136,137,138,140,141,145,],[11,11,-3,-6,-7,-8,11,11,-67,-66,11,11,11,-64,-65,-68,-69,-70,-2,-4,-5,11,11,11,11,11,11,11,11,11,11,11,11,11,67,-63,-66,11,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,81,82,-54,11,-28,11,-29,11,11,-25,11,-40,11,117,-71,-72,11,11,-26,-27,-39,11,11,11,11,-30,11,11,11,-33,-34,11,-31,-32,-53,]),'NOT':([0,2,3,6,7,8,9,10,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,47,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,71,76,77,78,79,85,94,96,97,98,102,103,104,108,109,110,111,115,116,117,120,122,123,124,129,136,137,138,140,141,145,],[10,10,-3,-6,-7,-8,41,10,10,-67,-66,10,10,10,-64,-65,-68,-69,-70,-2,-4,-5,10,10,10,10,10,10,10,10,10,10,10,10,10,-63,-66,10,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,10,-28,10,-29,10,10,-25,10,-40,10,-71,-72,10,10,-26,-27,-39,10,10,10,10,-30,10,10,10,-33,-34,10,-31,-32,-53,]),'ENTERO':([0,2,3,6,7,8,10,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,47,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,71,76,77,78,79,85,94,96,97,98,102,103,104,108,109,110,111,115,116,117,120,122,123,124,129,136,137,138,140,141,145,],[19,19,-3,-6,-7,-8,19,19,-67,-66,19,19,19,-64,-65,-68,-69,-70,-2,-4,-5,19,19,19,19,19,19,19,19,19,19,19,19,19,-63,-66,19,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,19,-28,19,-29,19,19,-25,19,-40,19,-71,-72,19,19,-26,-27,-39,19,19,19,19,-30,19,19,19,-33,-34,19,-31,-32,-53,]),'DECIMAL':([0,2,3,6,7,8,10,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,47,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,71,76,77,78,79,85,94,96,97,98,102,103,104,108,109,110,111,115,116,117,120,122,123,124,129,136,137,138,140,141,145,],[20,20,-3,-6,-7,-8,20,20,-67,-66,20,20,20,-64,-65,-68,-69,-70,-2,-4,-5,20,20,20,20,20,20,20,20,20,20,20,20,20,-63,-66,20,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,20,-28,20,-29,20,20,-25,20,-40,20,-71,-72,20,20,-26,-27,-39,20,20,20,20,-30,20,20,20,-33,-34,20,-31,-32,-53,]),'CADENA':([0,2,3,6,7,8,10,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,47,50,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,71,76,77,78,79,85,94,96,97,98,102,103,104,108,109,110,111,115,116,117,120,122,123,124,129,136,137,138,140,141,145,],[12,12,-3,-6,-7,-8,12,12,-67,-66,12,12,12,-64,-65,-68,-69,-70,-2,-4,-5,12,12,12,12,12,12,12,12,12,12,12,12,12,-63,-66,12,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,83,-54,12,-28,12,-29,12,12,-25,12,-40,12,-71,-72,12,12,-26,-27,-39,12,12,12,12,-30,12,12,12,-33,-34,12,-31,-32,-53,]),'CARACTER':([0,2,3,6,7,8,10,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,47,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,71,76,77,78,79,85,94,96,97,98,102,103,104,108,109,110,111,115,116,117,120,122,123,124,129,136,137,138,140,141,145,],[21,21,-3,-6,-7,-8,21,21,-67,-66,21,21,21,-64,-65,-68,-69,-70,-2,-4,-5,21,21,21,21,21,21,21,21,21,21,21,21,21,-63,-66,21,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,21,-28,21,-29,21,21,-25,21,-40,21,-71,-72,21,21,-26,-27,-39,21,21,21,21,-30,21,21,21,-33,-34,21,-31,-32,-53,]),'TRUE':([0,2,3,6,7,8,10,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,47,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,71,76,77,78,79,85,94,96,97,98,102,103,104,108,109,110,111,115,116,117,120,122,123,124,129,136,137,138,140,141,145,],[22,22,-3,-6,-7,-8,22,22,-67,-66,22,22,22,-64,-65,-68,-69,-70,-2,-4,-5,22,22,22,22,22,22,22,22,22,22,22,22,22,-63,-66,22,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,22,-28,22,-29,22,22,-25,22,-40,22,-71,-72,22,22,-26,-27,-39,22,22,22,22,-30,22,22,22,-33,-34,22,-31,-32,-53,]),'FALSE':([0,2,3,6,7,8,10,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,47,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,71,76,77,78,79,85,94,96,97,98,102,103,104,108,109,110,111,115,116,117,120,122,123,124,129,136,137,138,140,141,145,],[23,23,-3,-6,-7,-8,23,23,-67,-66,23,23,23,-64,-65,-68,-69,-70,-2,-4,-5,23,23,23,23,23,23,23,23,23,23,23,23,23,-63,-66,23,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,23,-28,23,-29,23,23,-25,23,-40,23,-71,-72,23,23,-26,-27,-39,23,23,23,23,-30,23,23,23,-33,-34,23,-31,-32,-53,]),'$end':([1,2,3,6,7,8,12,14,19,20,21,22,23,24,25,26,42,43,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,76,78,94,97,102,103,109,110,111,122,145,],[0,-1,-3,-6,-7,-8,-67,-66,-64,-65,-68,-69,-70,-2,-4,-5,-63,-66,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,-28,-29,-25,-40,-71,-72,-26,-27,-39,-30,-53,]),'LLAVC':([3,6,7,8,12,14,19,20,21,22,23,24,25,26,42,43,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,76,77,78,94,96,97,102,103,109,110,111,112,122,142,143,145,],[-3,-6,-7,-8,-67,-66,-64,-65,-68,-69,-70,-2,-4,-5,-63,-66,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,-28,97,-29,-25,111,-40,-71,-72,-26,-27,-39,122,-30,-37,-38,-53,]),'PT_COMA':([4,5,12,19,20,21,22,23,42,43,46,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,69,72,73,74,75,76,78,86,87,88,89,90,91,92,93,94,97,102,103,105,106,107,109,110,111,121,122,130,131,145,],[25,26,-67,-64,-65,-68,-69,-70,-63,-66,-20,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,-16,-21,-22,-23,-24,-28,-29,-18,-41,-42,-43,-44,-45,-46,-19,-25,-40,-71,-72,-10,-14,-15,-26,-27,-39,-17,-30,-9,-13,-53,]),'COMA':([6,7,8,12,14,19,20,21,22,23,25,26,42,43,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,76,78,83,94,97,102,103,109,110,111,118,119,122,125,126,128,132,133,134,135,139,145,],[-6,-7,-8,-67,-66,-64,-65,-68,-69,-70,-4,-5,-63,-66,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,-28,-29,104,-25,-40,-71,-72,-26,-27,-39,129,-12,-30,136,137,138,140,141,142,143,-11,-53,]),'MAS':([8,12,14,19,20,21,22,23,42,43,44,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,73,100,102,103,119,127,128,139,144,145,],[27,-67,-66,-64,-65,-68,-69,-70,-63,-66,27,27,27,-47,-48,-49,-50,-51,-52,27,27,27,27,27,27,27,27,-54,27,27,-71,-72,27,27,27,27,27,-53,]),'MULTI':([8,12,14,19,20,21,22,23,42,43,44,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,73,100,102,103,119,127,128,139,144,145,],[29,-67,-66,-64,-65,-68,-69,-70,-63,-66,29,29,29,-47,29,29,-50,-51,-52,29,29,29,29,29,29,29,29,-54,29,29,-71,-72,29,29,29,29,29,-53,]),'DIV':([8,12,14,19,20,21,22,23,42,43,44,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,73,100,102,103,119,127,128,139,144,145,],[30,-67,-66,-64,-65,-68,-69,-70,-63,-66,30,30,30,-47,30,30,-50,-51,-52,30,30,30,30,30,30,30,30,-54,30,30,-71,-72,30,30,30,30,30,-53,]),'MODULO':([8,12,14,19,20,21,22,23,42,43,44,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,73,100,102,103,119,127,128,139,144,145,],[31,-67,-66,-64,-65,-68,-69,-70,-63,-66,31,31,31,-47,31,31,-50,-51,-52,31,31,31,31,31,31,31,31,-54,31,31,-71,-72,31,31,31,31,31,-53,]),'IGUAL_IGUAL':([8,12,14,19,20,21,22,23,42,43,44,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,73,100,102,103,119,127,128,139,144,145,],[32,-67,-66,-64,-65,-68,-69,-70,-63,-66,32,32,32,-47,-48,-49,-50,-51,-52,None,None,None,None,None,None,32,32,-54,32,32,-71,-72,32,32,32,32,32,-53,]),'NO_IGUAL':([8,12,14,19,20,21,22,23,42,43,44,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,73,100,102,103,119,127,128,139,144,145,],[33,-67,-66,-64,-65,-68,-69,-70,-63,-66,33,33,33,-47,-48,-49,-50,-51,-52,None,None,None,None,None,None,33,33,-54,33,33,-71,-72,33,33,33,33,33,-53,]),'MAYOR':([8,12,14,19,20,21,22,23,42,43,44,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,73,100,102,103,119,127,128,139,144,145,],[34,-67,-66,-64,-65,-68,-69,-70,-63,-66,34,34,34,-47,-48,-49,-50,-51,-52,None,None,None,None,None,None,34,34,-54,34,34,-71,-72,34,34,34,34,34,-53,]),'MENOR':([8,12,14,19,20,21,22,23,42,43,44,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,73,100,102,103,119,127,128,139,144,145,],[35,-67,-66,-64,-65,-68,-69,-70,-63,-66,35,35,35,-47,-48,-49,-50,-51,-52,None,None,None,None,None,None,35,35,-54,35,35,-71,-72,35,35,35,35,35,-53,]),'MAYOR_IGUAL':([8,12,14,19,20,21,22,23,42,43,44,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,73,100,102,103,119,127,128,139,144,145,],[36,-67,-66,-64,-65,-68,-69,-70,-63,-66,36,36,36,-47,-48,-49,-50,-51,-52,None,None,None,None,None,None,36,36,-54,36,36,-71,-72,36,36,36,36,36,-53,]),'MENOR_IGUAL':([8,12,14,19,20,21,22,23,42,43,44,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,73,100,102,103,119,127,128,139,144,145,],[37,-67,-66,-64,-65,-68,-69,-70,-63,-66,37,37,37,-47,-48,-49,-50,-51,-52,None,None,None,None,None,None,37,37,-54,37,37,-71,-72,37,37,37,37,37,-53,]),'AND':([8,12,14,19,20,21,22,23,42,43,44,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,73,100,102,103,119,127,128,139,144,145,],[38,-67,-66,-64,-65,-68,-69,-70,-63,-66,38,38,38,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,38,-54,38,38,-71,-72,38,38,38,38,38,-53,]),'OR':([8,12,14,19,20,21,22,23,42,43,44,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,73,100,102,103,119,127,128,139,144,145,],[39,-67,-66,-64,-65,-68,-69,-70,-63,-66,39,39,39,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,39,39,-71,-72,39,39,39,39,39,-53,]),'PUNTO':([8,12,14,19,20,21,22,23,42,43,44,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,73,100,102,103,119,127,128,139,144,145,],[40,-67,-66,-64,-65,-68,-69,-70,-63,-66,40,40,40,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,40,40,-71,-72,40,40,40,40,40,-53,]),'PARC':([12,19,20,21,22,23,42,43,44,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,81,82,83,102,103,118,119,139,144,145,],[-67,-64,-65,-68,-69,-70,-63,-66,68,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,102,103,105,-71,-72,130,-12,-11,145,-53,]),'LLAVA':([12,19,20,21,22,23,42,43,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,95,102,103,115,123,124,145,],[-67,-64,-65,-68,-69,-70,-63,-66,77,79,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,77,-71,-72,77,77,77,-53,]),'ARROW':([12,19,20,21,22,23,42,43,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,99,100,102,103,113,114,127,145,],[-67,-64,-65,-68,-69,-70,-63,-66,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,115,-36,-71,-72,123,124,-35,-53,]),'SEP_MATCH':([12,19,20,21,22,23,42,43,50,52,53,54,55,56,57,58,59,60,61,62,63,64,68,99,100,102,103,113,127,145,],[-67,-64,-65,-68,-69,-70,-63,-66,-47,-48,-49,-50,-51,-52,-55,-56,-57,-58,-59,-60,-61,-62,-54,116,-36,-71,-72,116,-35,-53,]),'MUT':([13,],[45,]),'IGUAL':([14,46,69,86,87,88,89,90,91,92,106,],[47,71,85,108,-41,-42,-43,-44,-45,-46,120,]),'DOS_PT':([18,46,51,69,],[51,70,80,84,]),'TO_OWNED':([40,],[65,]),'TO_STRING':([40,],[66,]),'F64':([70,84,],[88,88,]),'BOOL':([70,84,],[89,89,]),'STRING':([70,84,],[90,90,]),'STR':([70,84,],[91,91,]),'CHAR':([70,84,],[92,92,]),'ELSE':([76,97,111,],[95,-40,-39,]),'POW':([80,],[101,]),'GUION_B':([98,136,137,140,141,],[114,-33,-34,-31,-32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'instrucciones':([0,77,],[2,96,]),'instruccion':([0,2,77,96,115,123,124,],[3,24,3,24,126,133,135,]),'prints':([0,2,77,96,115,123,124,],[4,4,4,4,4,4,4,]),'declaracion':([0,2,77,96,115,123,124,],[5,5,5,5,5,5,5,]),'sent_if':([0,2,47,71,77,85,95,96,108,115,120,123,124,],[6,6,74,74,6,74,110,6,74,6,74,6,6,]),'match':([0,2,47,71,77,85,96,108,115,120,123,124,],[7,7,75,75,7,75,7,75,7,75,7,7,]),'expresion':([0,2,10,11,15,16,17,27,28,29,30,31,32,33,34,35,36,37,38,39,47,71,77,79,85,96,98,104,108,115,116,117,120,123,124,129,138,],[8,8,42,44,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,73,73,8,100,73,8,100,119,73,8,127,128,73,8,8,139,144,]),'valores':([47,71,85,108,120,],[72,93,107,121,131,]),'statement':([48,95,115,123,124,],[76,109,125,132,134,]),'casos_match':([49,],[78,]),'tipo':([70,84,],[86,106,]),'sent_else':([76,],[94,]),'lista_casos':([79,],[98,]),'lista_expresiones':([79,98,],[99,113,]),'default':([98,],[112,]),'list_exp':([104,],[118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> instrucciones','inicio',1,'p_inicio','parser.py',96),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_lista_instrucciones','parser.py',102),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','parser.py',109),
  ('instruccion -> prints PT_COMA','instruccion',2,'p_instruccion','parser.py',115),
  ('instruccion -> declaracion PT_COMA','instruccion',2,'p_instruccion','parser.py',116),
  ('instruccion -> sent_if','instruccion',1,'p_instruccion','parser.py',117),
  ('instruccion -> match','instruccion',1,'p_instruccion','parser.py',118),
  ('instruccion -> expresion','instruccion',1,'p_instruccion','parser.py',119),
  ('prints -> PRINTLN NOT PARA CADENA COMA list_exp PARC','prints',7,'p_instruccion_println','parser.py',126),
  ('prints -> PRINTLN NOT PARA CADENA PARC','prints',5,'p_instruccion_println_cads','parser.py',132),
  ('list_exp -> list_exp COMA expresion','list_exp',3,'p_println_listexp','parser.py',138),
  ('list_exp -> expresion','list_exp',1,'p_println_listexp_exit','parser.py',145),
  ('declaracion -> LET MUT ID DOS_PT tipo IGUAL valores','declaracion',7,'p_instruccion_declaracion','parser.py',154),
  ('declaracion -> LET MUT ID DOS_PT tipo','declaracion',5,'p_declaracion_2','parser.py',167),
  ('declaracion -> LET MUT ID IGUAL valores','declaracion',5,'p_declaracion_3','parser.py',180),
  ('declaracion -> LET MUT ID','declaracion',3,'p_declaracion_4','parser.py',193),
  ('declaracion -> LET ID DOS_PT tipo IGUAL valores','declaracion',6,'p_declaracion_5','parser.py',206),
  ('declaracion -> LET ID DOS_PT tipo','declaracion',4,'p_declaracion_6','parser.py',219),
  ('declaracion -> LET ID IGUAL valores','declaracion',4,'p_declaracion_7','parser.py',232),
  ('declaracion -> LET ID','declaracion',2,'p_declaracion_8','parser.py',245),
  ('declaracion -> ID IGUAL valores','declaracion',3,'p__declaracion_asignacion','parser.py',258),
  ('valores -> expresion','valores',1,'p_declaracion_valores','parser.py',271),
  ('valores -> sent_if','valores',1,'p_declaracion_valores','parser.py',272),
  ('valores -> match','valores',1,'p_declaracion_valores','parser.py',273),
  ('sent_if -> IF expresion statement sent_else','sent_if',4,'p_instruccion_sent_if','parser.py',281),
  ('sent_else -> ELSE statement','sent_else',2,'p_sent_else','parser.py',287),
  ('sent_else -> ELSE sent_if','sent_else',2,'p_sent_else','parser.py',288),
  ('sent_else -> <empty>','sent_else',0,'p_sent_else_vacio','parser.py',294),
  ('match -> MATCH expresion casos_match','match',3,'p_instruccion_match','parser.py',303),
  ('casos_match -> LLAVA lista_casos default LLAVC','casos_match',4,'p_match_casos','parser.py',309),
  ('lista_casos -> lista_casos lista_expresiones ARROW statement COMA','lista_casos',5,'p_match_lista_casos','parser.py',316),
  ('lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA','lista_casos',5,'p_match_lista_casos','parser.py',317),
  ('lista_casos -> lista_expresiones ARROW statement COMA','lista_casos',4,'p_match_lista_casos_salida','parser.py',324),
  ('lista_casos -> lista_expresiones ARROW instruccion COMA','lista_casos',4,'p_match_lista_casos_salida','parser.py',325),
  ('lista_expresiones -> lista_expresiones SEP_MATCH expresion','lista_expresiones',3,'p_match_lista_expresiones','parser.py',331),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_match_lista_expresiones2','parser.py',338),
  ('default -> GUION_B ARROW statement COMA','default',4,'p_match_default','parser.py',344),
  ('default -> GUION_B ARROW instruccion COMA','default',4,'p_match_default','parser.py',345),
  ('statement -> LLAVA instrucciones LLAVC','statement',3,'p_statement','parser.py',354),
  ('statement -> LLAVA LLAVC','statement',2,'p_statement_vacio','parser.py',360),
  ('tipo -> I64','tipo',1,'p_tipo','parser.py',368),
  ('tipo -> F64','tipo',1,'p_tipo','parser.py',369),
  ('tipo -> BOOL','tipo',1,'p_tipo','parser.py',370),
  ('tipo -> STRING','tipo',1,'p_tipo','parser.py',371),
  ('tipo -> STR','tipo',1,'p_tipo','parser.py',372),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',373),
  ('expresion -> MENOS expresion','expresion',2,'p_exp_aritmeticas','parser.py',391),
  ('expresion -> expresion MAS expresion','expresion',3,'p_exp_aritmeticas','parser.py',392),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_exp_aritmeticas','parser.py',393),
  ('expresion -> expresion MULTI expresion','expresion',3,'p_exp_aritmeticas','parser.py',394),
  ('expresion -> expresion DIV expresion','expresion',3,'p_exp_aritmeticas','parser.py',395),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_exp_aritmeticas','parser.py',396),
  ('expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC','expresion',9,'p_exp_potencia','parser.py',405),
  ('expresion -> PARA expresion PARC','expresion',3,'p_exp_parentesis','parser.py',411),
  ('expresion -> expresion IGUAL_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',420),
  ('expresion -> expresion NO_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',421),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_exp_relacionales','parser.py',422),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_exp_relacionales','parser.py',423),
  ('expresion -> expresion MAYOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',424),
  ('expresion -> expresion MENOR_IGUAL expresion','expresion',3,'p_exp_relacionales','parser.py',425),
  ('expresion -> expresion AND expresion','expresion',3,'p_exp_logicas','parser.py',433),
  ('expresion -> expresion OR expresion','expresion',3,'p_exp_logicas','parser.py',434),
  ('expresion -> NOT expresion','expresion',2,'p_exp_not','parser.py',440),
  ('expresion -> ENTERO','expresion',1,'p_exp_primtivos','parser.py',449),
  ('expresion -> DECIMAL','expresion',1,'p_exp_primtivos','parser.py',450),
  ('expresion -> ID','expresion',1,'p_exp_primtivos','parser.py',451),
  ('expresion -> CADENA','expresion',1,'p_exp_primtivos','parser.py',452),
  ('expresion -> CARACTER','expresion',1,'p_exp_primtivos','parser.py',453),
  ('expresion -> TRUE','expresion',1,'p_exp_primtivos','parser.py',454),
  ('expresion -> FALSE','expresion',1,'p_exp_primtivos','parser.py',455),
  ('expresion -> expresion PUNTO TO_OWNED PARA PARC','expresion',5,'p_exp_cadena_toowned','parser.py',474),
  ('expresion -> expresion PUNTO TO_STRING PARA PARC','expresion',5,'p_exp_cadena_tostring','parser.py',480),
]
