Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> prints PT_COMA
Rule 5     instruccion -> declaracion PT_COMA
Rule 6     instruccion -> sent_if
Rule 7     instruccion -> match
Rule 8     instruccion -> expresion
Rule 9     instruccion -> return PT_COMA
Rule 10    instruccion -> break PT_COMA
Rule 11    instruccion -> continue PT_COMA
Rule 12    instruccion -> loop
Rule 13    instruccion -> while
Rule 14    instruccion -> funcion
Rule 15    prints -> PRINTLN NOT PARA CADENA COMA list_exp PARC
Rule 16    prints -> PRINTLN NOT PARA CADENA PARC
Rule 17    list_exp -> list_exp COMA expresion
Rule 18    list_exp -> expresion
Rule 19    declaracion -> LET MUT ID DOS_PT tipo IGUAL valores
Rule 20    declaracion -> LET MUT ID DOS_PT tipo
Rule 21    declaracion -> LET MUT ID IGUAL valores
Rule 22    declaracion -> LET MUT ID
Rule 23    declaracion -> LET ID DOS_PT tipo IGUAL valores
Rule 24    declaracion -> LET ID DOS_PT tipo
Rule 25    declaracion -> LET ID IGUAL valores
Rule 26    declaracion -> LET ID
Rule 27    declaracion -> ID IGUAL valores
Rule 28    valores -> expresion
Rule 29    valores -> sent_if
Rule 30    valores -> match
Rule 31    valores -> loop
Rule 32    sent_if -> IF expresion statement sent_else
Rule 33    sent_else -> ELSE statement
Rule 34    sent_else -> ELSE sent_if
Rule 35    sent_else -> <empty>
Rule 36    match -> MATCH expresion casos_match
Rule 37    casos_match -> LLAVA lista_casos default LLAVC
Rule 38    lista_casos -> lista_casos lista_expresiones ARROW statement COMA
Rule 39    lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA
Rule 40    lista_casos -> lista_expresiones ARROW statement COMA
Rule 41    lista_casos -> lista_expresiones ARROW instruccion COMA
Rule 42    lista_expresiones -> lista_expresiones SEP_MATCH expresion
Rule 43    lista_expresiones -> expresion
Rule 44    default -> GUION_B ARROW statement COMA
Rule 45    default -> GUION_B ARROW instruccion COMA
Rule 46    return -> RETURN
Rule 47    return -> RETURN expresion
Rule 48    break -> BREAK
Rule 49    break -> BREAK expresion
Rule 50    continue -> CONTINUE
Rule 51    loop -> LOOP statement
Rule 52    while -> WHILE expresion statement
Rule 53    funcion -> FN ID PARA lista_parametros PARC statement
Rule 54    funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement
Rule 55    funcion -> FN ID PARA PARC statement
Rule 56    funcion -> FN ID PARA PARC ARRFUNC statement
Rule 57    lista_parametros -> lista_parametros COMA ID DOS_PT tipo
Rule 58    lista_parametros -> ID DOS_PT tipo
Rule 59    llamado -> ID PARA list_exp PARC
Rule 60    llamado -> ID PARA PARC
Rule 61    statement -> LLAVA instrucciones LLAVC
Rule 62    statement -> LLAVA LLAVC
Rule 63    tipo -> I64
Rule 64    tipo -> F64
Rule 65    tipo -> BOOL
Rule 66    tipo -> STRING
Rule 67    tipo -> STR
Rule 68    tipo -> CHAR
Rule 69    expresion -> MENOS expresion
Rule 70    expresion -> expresion MAS expresion
Rule 71    expresion -> expresion MENOS expresion
Rule 72    expresion -> expresion MULTI expresion
Rule 73    expresion -> expresion DIV expresion
Rule 74    expresion -> expresion MODULO expresion
Rule 75    expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
Rule 76    expresion -> PARA expresion PARC
Rule 77    expresion -> llamado
Rule 78    expresion -> expresion IGUAL_IGUAL expresion
Rule 79    expresion -> expresion NO_IGUAL expresion
Rule 80    expresion -> expresion MAYOR expresion
Rule 81    expresion -> expresion MENOR expresion
Rule 82    expresion -> expresion MAYOR_IGUAL expresion
Rule 83    expresion -> expresion MENOR_IGUAL expresion
Rule 84    expresion -> expresion AND expresion
Rule 85    expresion -> expresion OR expresion
Rule 86    expresion -> NOT expresion
Rule 87    expresion -> ENTERO
Rule 88    expresion -> DECIMAL
Rule 89    expresion -> ID
Rule 90    expresion -> CADENA
Rule 91    expresion -> CARACTER
Rule 92    expresion -> TRUE
Rule 93    expresion -> FALSE
Rule 94    expresion -> expresion PUNTO TO_OWNED PARA PARC
Rule 95    expresion -> expresion PUNTO TO_STRING PARA PARC
Rule 96    expresion -> expresion PUNTO ABSOLUTO PARA PARC
Rule 97    expresion -> expresion PUNTO RAIZ PARA PARC
Rule 98    expresion -> expresion AS F64
Rule 99    expresion -> expresion AS I64

Terminals, with rules where they appear

ABSOLUTO             : 96
AND                  : 84
ARRFUNC              : 54 56
ARROW                : 38 39 40 41 44 45
AS                   : 98 99
BOOL                 : 65
BREAK                : 48 49
CADENA               : 15 16 90
CARACTER             : 91
CHAR                 : 68
COMA                 : 15 17 38 39 40 41 44 45 57 75
CONTINUE             : 50
DECIMAL              : 88
DIV                  : 73
DOS_PT               : 19 20 23 24 57 58 75 75
ELSE                 : 33 34
ENTERO               : 87
F64                  : 64 98
FALSE                : 93
FN                   : 53 54 55 56
GUION_B              : 44 45
I64                  : 63 75 99
ID                   : 19 20 21 22 23 24 25 26 27 53 54 55 56 57 58 59 60 89
IF                   : 32
IGUAL                : 19 21 23 25 27
IGUAL_IGUAL          : 78
LET                  : 19 20 21 22 23 24 25 26
LLAVA                : 37 61 62
LLAVC                : 37 61 62
LOOP                 : 51
MAS                  : 70
MATCH                : 36
MAYOR                : 80
MAYOR_IGUAL          : 82
MENOR                : 81
MENOR_IGUAL          : 83
MENOS                : 69 71
MODULO               : 74
MULTI                : 72
MUT                  : 19 20 21 22
NOT                  : 15 16 86
NO_IGUAL             : 79
OR                   : 85
PARA                 : 15 16 53 54 55 56 59 60 75 76 94 95 96 97
PARC                 : 15 16 53 54 55 56 59 60 75 76 94 95 96 97
POW                  : 75
PRINTLN              : 15 16
PT_COMA              : 4 5 9 10 11
PUNTO                : 94 95 96 97
RAIZ                 : 97
RETURN               : 46 47
SEP_MATCH            : 42
STR                  : 67
STRING               : 66
TO_OWNED             : 94
TO_STRING            : 95
TRUE                 : 92
WHILE                : 52
error                : 

Nonterminals, with rules where they appear

break                : 10
casos_match          : 36
continue             : 11
declaracion          : 5
default              : 37
expresion            : 8 17 18 28 32 36 42 43 47 49 52 69 70 70 71 71 72 72 73 73 74 74 75 75 76 78 78 79 79 80 80 81 81 82 82 83 83 84 84 85 85 86 94 95 96 97 98 99
funcion              : 14
inicio               : 0
instruccion          : 2 3 39 41 45
instrucciones        : 1 2 61
list_exp             : 15 17 59
lista_casos          : 37 38 39
lista_expresiones    : 38 39 40 41 42
lista_parametros     : 53 54 57
llamado              : 77
loop                 : 12 31
match                : 7 30
prints               : 4
return               : 9
sent_else            : 32
sent_if              : 6 29 34
statement            : 32 33 38 40 44 51 52 53 54 55 56
tipo                 : 19 20 23 24 54 57 58
valores              : 19 21 23 25 27
while                : 13

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) instruccion -> . loop
    (13) instruccion -> . while
    (14) instruccion -> . funcion
    (15) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (16) prints -> . PRINTLN NOT PARA CADENA PARC
    (19) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (20) declaracion -> . LET MUT ID DOS_PT tipo
    (21) declaracion -> . LET MUT ID IGUAL valores
    (22) declaracion -> . LET MUT ID
    (23) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (24) declaracion -> . LET ID DOS_PT tipo
    (25) declaracion -> . LET ID IGUAL valores
    (26) declaracion -> . LET ID
    (27) declaracion -> . ID IGUAL valores
    (32) sent_if -> . IF expresion statement sent_else
    (36) match -> . MATCH expresion casos_match
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (46) return -> . RETURN
    (47) return -> . RETURN expresion
    (48) break -> . BREAK
    (49) break -> . BREAK expresion
    (50) continue -> . CONTINUE
    (51) loop -> . LOOP statement
    (52) while -> . WHILE expresion statement
    (53) funcion -> . FN ID PARA lista_parametros PARC statement
    (54) funcion -> . FN ID PARA lista_parametros PARC ARRFUNC tipo statement
    (55) funcion -> . FN ID PARA PARC statement
    (56) funcion -> . FN ID PARA PARC ARRFUNC statement
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    PRINTLN         shift and go to state 15
    LET             shift and go to state 19
    ID              shift and go to state 20
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    RETURN          shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    LOOP            shift and go to state 34
    WHILE           shift and go to state 35
    FN              shift and go to state 36

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    funcion                        shift and go to state 14
    llamado                        shift and go to state 25

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) instruccion -> . loop
    (13) instruccion -> . while
    (14) instruccion -> . funcion
    (15) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (16) prints -> . PRINTLN NOT PARA CADENA PARC
    (19) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (20) declaracion -> . LET MUT ID DOS_PT tipo
    (21) declaracion -> . LET MUT ID IGUAL valores
    (22) declaracion -> . LET MUT ID
    (23) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (24) declaracion -> . LET ID DOS_PT tipo
    (25) declaracion -> . LET ID IGUAL valores
    (26) declaracion -> . LET ID
    (27) declaracion -> . ID IGUAL valores
    (32) sent_if -> . IF expresion statement sent_else
    (36) match -> . MATCH expresion casos_match
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (46) return -> . RETURN
    (47) return -> . RETURN expresion
    (48) break -> . BREAK
    (49) break -> . BREAK expresion
    (50) continue -> . CONTINUE
    (51) loop -> . LOOP statement
    (52) while -> . WHILE expresion statement
    (53) funcion -> . FN ID PARA lista_parametros PARC statement
    (54) funcion -> . FN ID PARA lista_parametros PARC ARRFUNC tipo statement
    (55) funcion -> . FN ID PARA PARC statement
    (56) funcion -> . FN ID PARA PARC ARRFUNC statement
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    $end            reduce using rule 1 (inicio -> instrucciones .)
    PRINTLN         shift and go to state 15
    LET             shift and go to state 19
    ID              shift and go to state 20
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    RETURN          shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    LOOP            shift and go to state 34
    WHILE           shift and go to state 35
    FN              shift and go to state 36

    instruccion                    shift and go to state 37
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    funcion                        shift and go to state 14
    llamado                        shift and go to state 25

state 3

    (3) instrucciones -> instruccion .

    PRINTLN         reduce using rule 3 (instrucciones -> instruccion .)
    LET             reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    MATCH           reduce using rule 3 (instrucciones -> instruccion .)
    MENOS           reduce using rule 3 (instrucciones -> instruccion .)
    I64             reduce using rule 3 (instrucciones -> instruccion .)
    PARA            reduce using rule 3 (instrucciones -> instruccion .)
    NOT             reduce using rule 3 (instrucciones -> instruccion .)
    ENTERO          reduce using rule 3 (instrucciones -> instruccion .)
    DECIMAL         reduce using rule 3 (instrucciones -> instruccion .)
    CADENA          reduce using rule 3 (instrucciones -> instruccion .)
    CARACTER        reduce using rule 3 (instrucciones -> instruccion .)
    TRUE            reduce using rule 3 (instrucciones -> instruccion .)
    FALSE           reduce using rule 3 (instrucciones -> instruccion .)
    RETURN          reduce using rule 3 (instrucciones -> instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instruccion .)
    LOOP            reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    FN              reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVC           reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> prints . PT_COMA

    PT_COMA         shift and go to state 38


state 5

    (5) instruccion -> declaracion . PT_COMA

    PT_COMA         shift and go to state 39


state 6

    (6) instruccion -> sent_if .

    PRINTLN         reduce using rule 6 (instruccion -> sent_if .)
    LET             reduce using rule 6 (instruccion -> sent_if .)
    ID              reduce using rule 6 (instruccion -> sent_if .)
    IF              reduce using rule 6 (instruccion -> sent_if .)
    MATCH           reduce using rule 6 (instruccion -> sent_if .)
    MENOS           reduce using rule 6 (instruccion -> sent_if .)
    I64             reduce using rule 6 (instruccion -> sent_if .)
    PARA            reduce using rule 6 (instruccion -> sent_if .)
    NOT             reduce using rule 6 (instruccion -> sent_if .)
    ENTERO          reduce using rule 6 (instruccion -> sent_if .)
    DECIMAL         reduce using rule 6 (instruccion -> sent_if .)
    CADENA          reduce using rule 6 (instruccion -> sent_if .)
    CARACTER        reduce using rule 6 (instruccion -> sent_if .)
    TRUE            reduce using rule 6 (instruccion -> sent_if .)
    FALSE           reduce using rule 6 (instruccion -> sent_if .)
    RETURN          reduce using rule 6 (instruccion -> sent_if .)
    BREAK           reduce using rule 6 (instruccion -> sent_if .)
    CONTINUE        reduce using rule 6 (instruccion -> sent_if .)
    LOOP            reduce using rule 6 (instruccion -> sent_if .)
    WHILE           reduce using rule 6 (instruccion -> sent_if .)
    FN              reduce using rule 6 (instruccion -> sent_if .)
    $end            reduce using rule 6 (instruccion -> sent_if .)
    LLAVC           reduce using rule 6 (instruccion -> sent_if .)
    COMA            reduce using rule 6 (instruccion -> sent_if .)


state 7

    (7) instruccion -> match .

    PRINTLN         reduce using rule 7 (instruccion -> match .)
    LET             reduce using rule 7 (instruccion -> match .)
    ID              reduce using rule 7 (instruccion -> match .)
    IF              reduce using rule 7 (instruccion -> match .)
    MATCH           reduce using rule 7 (instruccion -> match .)
    MENOS           reduce using rule 7 (instruccion -> match .)
    I64             reduce using rule 7 (instruccion -> match .)
    PARA            reduce using rule 7 (instruccion -> match .)
    NOT             reduce using rule 7 (instruccion -> match .)
    ENTERO          reduce using rule 7 (instruccion -> match .)
    DECIMAL         reduce using rule 7 (instruccion -> match .)
    CADENA          reduce using rule 7 (instruccion -> match .)
    CARACTER        reduce using rule 7 (instruccion -> match .)
    TRUE            reduce using rule 7 (instruccion -> match .)
    FALSE           reduce using rule 7 (instruccion -> match .)
    RETURN          reduce using rule 7 (instruccion -> match .)
    BREAK           reduce using rule 7 (instruccion -> match .)
    CONTINUE        reduce using rule 7 (instruccion -> match .)
    LOOP            reduce using rule 7 (instruccion -> match .)
    WHILE           reduce using rule 7 (instruccion -> match .)
    FN              reduce using rule 7 (instruccion -> match .)
    $end            reduce using rule 7 (instruccion -> match .)
    LLAVC           reduce using rule 7 (instruccion -> match .)
    COMA            reduce using rule 7 (instruccion -> match .)


state 8

    (8) instruccion -> expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

  ! shift/reduce conflict for MENOS resolved as shift
    PRINTLN         reduce using rule 8 (instruccion -> expresion .)
    LET             reduce using rule 8 (instruccion -> expresion .)
    ID              reduce using rule 8 (instruccion -> expresion .)
    IF              reduce using rule 8 (instruccion -> expresion .)
    MATCH           reduce using rule 8 (instruccion -> expresion .)
    I64             reduce using rule 8 (instruccion -> expresion .)
    PARA            reduce using rule 8 (instruccion -> expresion .)
    NOT             reduce using rule 8 (instruccion -> expresion .)
    ENTERO          reduce using rule 8 (instruccion -> expresion .)
    DECIMAL         reduce using rule 8 (instruccion -> expresion .)
    CADENA          reduce using rule 8 (instruccion -> expresion .)
    CARACTER        reduce using rule 8 (instruccion -> expresion .)
    TRUE            reduce using rule 8 (instruccion -> expresion .)
    FALSE           reduce using rule 8 (instruccion -> expresion .)
    RETURN          reduce using rule 8 (instruccion -> expresion .)
    BREAK           reduce using rule 8 (instruccion -> expresion .)
    CONTINUE        reduce using rule 8 (instruccion -> expresion .)
    LOOP            reduce using rule 8 (instruccion -> expresion .)
    WHILE           reduce using rule 8 (instruccion -> expresion .)
    FN              reduce using rule 8 (instruccion -> expresion .)
    $end            reduce using rule 8 (instruccion -> expresion .)
    LLAVC           reduce using rule 8 (instruccion -> expresion .)
    COMA            reduce using rule 8 (instruccion -> expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44
    IGUAL_IGUAL     shift and go to state 45
    NO_IGUAL        shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_IGUAL     shift and go to state 49
    MENOR_IGUAL     shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    PUNTO           shift and go to state 53
    AS              shift and go to state 54

  ! MENOS           [ reduce using rule 8 (instruccion -> expresion .) ]


state 9

    (9) instruccion -> return . PT_COMA

    PT_COMA         shift and go to state 55


state 10

    (10) instruccion -> break . PT_COMA

    PT_COMA         shift and go to state 56


state 11

    (11) instruccion -> continue . PT_COMA

    PT_COMA         shift and go to state 57


state 12

    (12) instruccion -> loop .

    PRINTLN         reduce using rule 12 (instruccion -> loop .)
    LET             reduce using rule 12 (instruccion -> loop .)
    ID              reduce using rule 12 (instruccion -> loop .)
    IF              reduce using rule 12 (instruccion -> loop .)
    MATCH           reduce using rule 12 (instruccion -> loop .)
    MENOS           reduce using rule 12 (instruccion -> loop .)
    I64             reduce using rule 12 (instruccion -> loop .)
    PARA            reduce using rule 12 (instruccion -> loop .)
    NOT             reduce using rule 12 (instruccion -> loop .)
    ENTERO          reduce using rule 12 (instruccion -> loop .)
    DECIMAL         reduce using rule 12 (instruccion -> loop .)
    CADENA          reduce using rule 12 (instruccion -> loop .)
    CARACTER        reduce using rule 12 (instruccion -> loop .)
    TRUE            reduce using rule 12 (instruccion -> loop .)
    FALSE           reduce using rule 12 (instruccion -> loop .)
    RETURN          reduce using rule 12 (instruccion -> loop .)
    BREAK           reduce using rule 12 (instruccion -> loop .)
    CONTINUE        reduce using rule 12 (instruccion -> loop .)
    LOOP            reduce using rule 12 (instruccion -> loop .)
    WHILE           reduce using rule 12 (instruccion -> loop .)
    FN              reduce using rule 12 (instruccion -> loop .)
    $end            reduce using rule 12 (instruccion -> loop .)
    LLAVC           reduce using rule 12 (instruccion -> loop .)
    COMA            reduce using rule 12 (instruccion -> loop .)


state 13

    (13) instruccion -> while .

    PRINTLN         reduce using rule 13 (instruccion -> while .)
    LET             reduce using rule 13 (instruccion -> while .)
    ID              reduce using rule 13 (instruccion -> while .)
    IF              reduce using rule 13 (instruccion -> while .)
    MATCH           reduce using rule 13 (instruccion -> while .)
    MENOS           reduce using rule 13 (instruccion -> while .)
    I64             reduce using rule 13 (instruccion -> while .)
    PARA            reduce using rule 13 (instruccion -> while .)
    NOT             reduce using rule 13 (instruccion -> while .)
    ENTERO          reduce using rule 13 (instruccion -> while .)
    DECIMAL         reduce using rule 13 (instruccion -> while .)
    CADENA          reduce using rule 13 (instruccion -> while .)
    CARACTER        reduce using rule 13 (instruccion -> while .)
    TRUE            reduce using rule 13 (instruccion -> while .)
    FALSE           reduce using rule 13 (instruccion -> while .)
    RETURN          reduce using rule 13 (instruccion -> while .)
    BREAK           reduce using rule 13 (instruccion -> while .)
    CONTINUE        reduce using rule 13 (instruccion -> while .)
    LOOP            reduce using rule 13 (instruccion -> while .)
    WHILE           reduce using rule 13 (instruccion -> while .)
    FN              reduce using rule 13 (instruccion -> while .)
    $end            reduce using rule 13 (instruccion -> while .)
    LLAVC           reduce using rule 13 (instruccion -> while .)
    COMA            reduce using rule 13 (instruccion -> while .)


state 14

    (14) instruccion -> funcion .

    PRINTLN         reduce using rule 14 (instruccion -> funcion .)
    LET             reduce using rule 14 (instruccion -> funcion .)
    ID              reduce using rule 14 (instruccion -> funcion .)
    IF              reduce using rule 14 (instruccion -> funcion .)
    MATCH           reduce using rule 14 (instruccion -> funcion .)
    MENOS           reduce using rule 14 (instruccion -> funcion .)
    I64             reduce using rule 14 (instruccion -> funcion .)
    PARA            reduce using rule 14 (instruccion -> funcion .)
    NOT             reduce using rule 14 (instruccion -> funcion .)
    ENTERO          reduce using rule 14 (instruccion -> funcion .)
    DECIMAL         reduce using rule 14 (instruccion -> funcion .)
    CADENA          reduce using rule 14 (instruccion -> funcion .)
    CARACTER        reduce using rule 14 (instruccion -> funcion .)
    TRUE            reduce using rule 14 (instruccion -> funcion .)
    FALSE           reduce using rule 14 (instruccion -> funcion .)
    RETURN          reduce using rule 14 (instruccion -> funcion .)
    BREAK           reduce using rule 14 (instruccion -> funcion .)
    CONTINUE        reduce using rule 14 (instruccion -> funcion .)
    LOOP            reduce using rule 14 (instruccion -> funcion .)
    WHILE           reduce using rule 14 (instruccion -> funcion .)
    FN              reduce using rule 14 (instruccion -> funcion .)
    $end            reduce using rule 14 (instruccion -> funcion .)
    LLAVC           reduce using rule 14 (instruccion -> funcion .)
    COMA            reduce using rule 14 (instruccion -> funcion .)


state 15

    (15) prints -> PRINTLN . NOT PARA CADENA COMA list_exp PARC
    (16) prints -> PRINTLN . NOT PARA CADENA PARC

    NOT             shift and go to state 58


state 16

    (86) expresion -> NOT . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 59
    llamado                        shift and go to state 25

state 17

    (76) expresion -> PARA . expresion PARC
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 61
    llamado                        shift and go to state 25

state 18

    (90) expresion -> CADENA .

    MAS             reduce using rule 90 (expresion -> CADENA .)
    MENOS           reduce using rule 90 (expresion -> CADENA .)
    MULTI           reduce using rule 90 (expresion -> CADENA .)
    DIV             reduce using rule 90 (expresion -> CADENA .)
    MODULO          reduce using rule 90 (expresion -> CADENA .)
    IGUAL_IGUAL     reduce using rule 90 (expresion -> CADENA .)
    NO_IGUAL        reduce using rule 90 (expresion -> CADENA .)
    MAYOR           reduce using rule 90 (expresion -> CADENA .)
    MENOR           reduce using rule 90 (expresion -> CADENA .)
    MAYOR_IGUAL     reduce using rule 90 (expresion -> CADENA .)
    MENOR_IGUAL     reduce using rule 90 (expresion -> CADENA .)
    AND             reduce using rule 90 (expresion -> CADENA .)
    OR              reduce using rule 90 (expresion -> CADENA .)
    PUNTO           reduce using rule 90 (expresion -> CADENA .)
    AS              reduce using rule 90 (expresion -> CADENA .)
    PRINTLN         reduce using rule 90 (expresion -> CADENA .)
    LET             reduce using rule 90 (expresion -> CADENA .)
    ID              reduce using rule 90 (expresion -> CADENA .)
    IF              reduce using rule 90 (expresion -> CADENA .)
    MATCH           reduce using rule 90 (expresion -> CADENA .)
    I64             reduce using rule 90 (expresion -> CADENA .)
    PARA            reduce using rule 90 (expresion -> CADENA .)
    NOT             reduce using rule 90 (expresion -> CADENA .)
    ENTERO          reduce using rule 90 (expresion -> CADENA .)
    DECIMAL         reduce using rule 90 (expresion -> CADENA .)
    CADENA          reduce using rule 90 (expresion -> CADENA .)
    CARACTER        reduce using rule 90 (expresion -> CADENA .)
    TRUE            reduce using rule 90 (expresion -> CADENA .)
    FALSE           reduce using rule 90 (expresion -> CADENA .)
    RETURN          reduce using rule 90 (expresion -> CADENA .)
    BREAK           reduce using rule 90 (expresion -> CADENA .)
    CONTINUE        reduce using rule 90 (expresion -> CADENA .)
    LOOP            reduce using rule 90 (expresion -> CADENA .)
    WHILE           reduce using rule 90 (expresion -> CADENA .)
    FN              reduce using rule 90 (expresion -> CADENA .)
    $end            reduce using rule 90 (expresion -> CADENA .)
    PARC            reduce using rule 90 (expresion -> CADENA .)
    LLAVA           reduce using rule 90 (expresion -> CADENA .)
    PT_COMA         reduce using rule 90 (expresion -> CADENA .)
    COMA            reduce using rule 90 (expresion -> CADENA .)
    LLAVC           reduce using rule 90 (expresion -> CADENA .)
    ARROW           reduce using rule 90 (expresion -> CADENA .)
    SEP_MATCH       reduce using rule 90 (expresion -> CADENA .)


state 19

    (19) declaracion -> LET . MUT ID DOS_PT tipo IGUAL valores
    (20) declaracion -> LET . MUT ID DOS_PT tipo
    (21) declaracion -> LET . MUT ID IGUAL valores
    (22) declaracion -> LET . MUT ID
    (23) declaracion -> LET . ID DOS_PT tipo IGUAL valores
    (24) declaracion -> LET . ID DOS_PT tipo
    (25) declaracion -> LET . ID IGUAL valores
    (26) declaracion -> LET . ID

    MUT             shift and go to state 62
    ID              shift and go to state 63


state 20

    (27) declaracion -> ID . IGUAL valores
    (89) expresion -> ID .
    (59) llamado -> ID . PARA list_exp PARC
    (60) llamado -> ID . PARA PARC

  ! shift/reduce conflict for PARA resolved as shift
    IGUAL           shift and go to state 64
    MAS             reduce using rule 89 (expresion -> ID .)
    MENOS           reduce using rule 89 (expresion -> ID .)
    MULTI           reduce using rule 89 (expresion -> ID .)
    DIV             reduce using rule 89 (expresion -> ID .)
    MODULO          reduce using rule 89 (expresion -> ID .)
    IGUAL_IGUAL     reduce using rule 89 (expresion -> ID .)
    NO_IGUAL        reduce using rule 89 (expresion -> ID .)
    MAYOR           reduce using rule 89 (expresion -> ID .)
    MENOR           reduce using rule 89 (expresion -> ID .)
    MAYOR_IGUAL     reduce using rule 89 (expresion -> ID .)
    MENOR_IGUAL     reduce using rule 89 (expresion -> ID .)
    AND             reduce using rule 89 (expresion -> ID .)
    OR              reduce using rule 89 (expresion -> ID .)
    PUNTO           reduce using rule 89 (expresion -> ID .)
    AS              reduce using rule 89 (expresion -> ID .)
    PRINTLN         reduce using rule 89 (expresion -> ID .)
    LET             reduce using rule 89 (expresion -> ID .)
    ID              reduce using rule 89 (expresion -> ID .)
    IF              reduce using rule 89 (expresion -> ID .)
    MATCH           reduce using rule 89 (expresion -> ID .)
    I64             reduce using rule 89 (expresion -> ID .)
    NOT             reduce using rule 89 (expresion -> ID .)
    ENTERO          reduce using rule 89 (expresion -> ID .)
    DECIMAL         reduce using rule 89 (expresion -> ID .)
    CADENA          reduce using rule 89 (expresion -> ID .)
    CARACTER        reduce using rule 89 (expresion -> ID .)
    TRUE            reduce using rule 89 (expresion -> ID .)
    FALSE           reduce using rule 89 (expresion -> ID .)
    RETURN          reduce using rule 89 (expresion -> ID .)
    BREAK           reduce using rule 89 (expresion -> ID .)
    CONTINUE        reduce using rule 89 (expresion -> ID .)
    LOOP            reduce using rule 89 (expresion -> ID .)
    WHILE           reduce using rule 89 (expresion -> ID .)
    FN              reduce using rule 89 (expresion -> ID .)
    $end            reduce using rule 89 (expresion -> ID .)
    LLAVC           reduce using rule 89 (expresion -> ID .)
    COMA            reduce using rule 89 (expresion -> ID .)
    PARA            shift and go to state 65

  ! PARA            [ reduce using rule 89 (expresion -> ID .) ]


state 21

    (32) sent_if -> IF . expresion statement sent_else
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 66
    llamado                        shift and go to state 25

state 22

    (36) match -> MATCH . expresion casos_match
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 67
    llamado                        shift and go to state 25

state 23

    (69) expresion -> MENOS . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 68
    llamado                        shift and go to state 25

state 24

    (75) expresion -> I64 . DOS_PT DOS_PT POW PARA expresion COMA expresion PARC

    DOS_PT          shift and go to state 69


state 25

    (77) expresion -> llamado .

    MAS             reduce using rule 77 (expresion -> llamado .)
    MENOS           reduce using rule 77 (expresion -> llamado .)
    MULTI           reduce using rule 77 (expresion -> llamado .)
    DIV             reduce using rule 77 (expresion -> llamado .)
    MODULO          reduce using rule 77 (expresion -> llamado .)
    IGUAL_IGUAL     reduce using rule 77 (expresion -> llamado .)
    NO_IGUAL        reduce using rule 77 (expresion -> llamado .)
    MAYOR           reduce using rule 77 (expresion -> llamado .)
    MENOR           reduce using rule 77 (expresion -> llamado .)
    MAYOR_IGUAL     reduce using rule 77 (expresion -> llamado .)
    MENOR_IGUAL     reduce using rule 77 (expresion -> llamado .)
    AND             reduce using rule 77 (expresion -> llamado .)
    OR              reduce using rule 77 (expresion -> llamado .)
    PUNTO           reduce using rule 77 (expresion -> llamado .)
    AS              reduce using rule 77 (expresion -> llamado .)
    PRINTLN         reduce using rule 77 (expresion -> llamado .)
    LET             reduce using rule 77 (expresion -> llamado .)
    ID              reduce using rule 77 (expresion -> llamado .)
    IF              reduce using rule 77 (expresion -> llamado .)
    MATCH           reduce using rule 77 (expresion -> llamado .)
    I64             reduce using rule 77 (expresion -> llamado .)
    PARA            reduce using rule 77 (expresion -> llamado .)
    NOT             reduce using rule 77 (expresion -> llamado .)
    ENTERO          reduce using rule 77 (expresion -> llamado .)
    DECIMAL         reduce using rule 77 (expresion -> llamado .)
    CADENA          reduce using rule 77 (expresion -> llamado .)
    CARACTER        reduce using rule 77 (expresion -> llamado .)
    TRUE            reduce using rule 77 (expresion -> llamado .)
    FALSE           reduce using rule 77 (expresion -> llamado .)
    RETURN          reduce using rule 77 (expresion -> llamado .)
    BREAK           reduce using rule 77 (expresion -> llamado .)
    CONTINUE        reduce using rule 77 (expresion -> llamado .)
    LOOP            reduce using rule 77 (expresion -> llamado .)
    WHILE           reduce using rule 77 (expresion -> llamado .)
    FN              reduce using rule 77 (expresion -> llamado .)
    $end            reduce using rule 77 (expresion -> llamado .)
    PARC            reduce using rule 77 (expresion -> llamado .)
    LLAVA           reduce using rule 77 (expresion -> llamado .)
    PT_COMA         reduce using rule 77 (expresion -> llamado .)
    COMA            reduce using rule 77 (expresion -> llamado .)
    LLAVC           reduce using rule 77 (expresion -> llamado .)
    ARROW           reduce using rule 77 (expresion -> llamado .)
    SEP_MATCH       reduce using rule 77 (expresion -> llamado .)


state 26

    (87) expresion -> ENTERO .

    MAS             reduce using rule 87 (expresion -> ENTERO .)
    MENOS           reduce using rule 87 (expresion -> ENTERO .)
    MULTI           reduce using rule 87 (expresion -> ENTERO .)
    DIV             reduce using rule 87 (expresion -> ENTERO .)
    MODULO          reduce using rule 87 (expresion -> ENTERO .)
    IGUAL_IGUAL     reduce using rule 87 (expresion -> ENTERO .)
    NO_IGUAL        reduce using rule 87 (expresion -> ENTERO .)
    MAYOR           reduce using rule 87 (expresion -> ENTERO .)
    MENOR           reduce using rule 87 (expresion -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 87 (expresion -> ENTERO .)
    MENOR_IGUAL     reduce using rule 87 (expresion -> ENTERO .)
    AND             reduce using rule 87 (expresion -> ENTERO .)
    OR              reduce using rule 87 (expresion -> ENTERO .)
    PUNTO           reduce using rule 87 (expresion -> ENTERO .)
    AS              reduce using rule 87 (expresion -> ENTERO .)
    PRINTLN         reduce using rule 87 (expresion -> ENTERO .)
    LET             reduce using rule 87 (expresion -> ENTERO .)
    ID              reduce using rule 87 (expresion -> ENTERO .)
    IF              reduce using rule 87 (expresion -> ENTERO .)
    MATCH           reduce using rule 87 (expresion -> ENTERO .)
    I64             reduce using rule 87 (expresion -> ENTERO .)
    PARA            reduce using rule 87 (expresion -> ENTERO .)
    NOT             reduce using rule 87 (expresion -> ENTERO .)
    ENTERO          reduce using rule 87 (expresion -> ENTERO .)
    DECIMAL         reduce using rule 87 (expresion -> ENTERO .)
    CADENA          reduce using rule 87 (expresion -> ENTERO .)
    CARACTER        reduce using rule 87 (expresion -> ENTERO .)
    TRUE            reduce using rule 87 (expresion -> ENTERO .)
    FALSE           reduce using rule 87 (expresion -> ENTERO .)
    RETURN          reduce using rule 87 (expresion -> ENTERO .)
    BREAK           reduce using rule 87 (expresion -> ENTERO .)
    CONTINUE        reduce using rule 87 (expresion -> ENTERO .)
    LOOP            reduce using rule 87 (expresion -> ENTERO .)
    WHILE           reduce using rule 87 (expresion -> ENTERO .)
    FN              reduce using rule 87 (expresion -> ENTERO .)
    $end            reduce using rule 87 (expresion -> ENTERO .)
    PARC            reduce using rule 87 (expresion -> ENTERO .)
    LLAVA           reduce using rule 87 (expresion -> ENTERO .)
    PT_COMA         reduce using rule 87 (expresion -> ENTERO .)
    COMA            reduce using rule 87 (expresion -> ENTERO .)
    LLAVC           reduce using rule 87 (expresion -> ENTERO .)
    ARROW           reduce using rule 87 (expresion -> ENTERO .)
    SEP_MATCH       reduce using rule 87 (expresion -> ENTERO .)


state 27

    (88) expresion -> DECIMAL .

    MAS             reduce using rule 88 (expresion -> DECIMAL .)
    MENOS           reduce using rule 88 (expresion -> DECIMAL .)
    MULTI           reduce using rule 88 (expresion -> DECIMAL .)
    DIV             reduce using rule 88 (expresion -> DECIMAL .)
    MODULO          reduce using rule 88 (expresion -> DECIMAL .)
    IGUAL_IGUAL     reduce using rule 88 (expresion -> DECIMAL .)
    NO_IGUAL        reduce using rule 88 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 88 (expresion -> DECIMAL .)
    MENOR           reduce using rule 88 (expresion -> DECIMAL .)
    MAYOR_IGUAL     reduce using rule 88 (expresion -> DECIMAL .)
    MENOR_IGUAL     reduce using rule 88 (expresion -> DECIMAL .)
    AND             reduce using rule 88 (expresion -> DECIMAL .)
    OR              reduce using rule 88 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 88 (expresion -> DECIMAL .)
    AS              reduce using rule 88 (expresion -> DECIMAL .)
    PRINTLN         reduce using rule 88 (expresion -> DECIMAL .)
    LET             reduce using rule 88 (expresion -> DECIMAL .)
    ID              reduce using rule 88 (expresion -> DECIMAL .)
    IF              reduce using rule 88 (expresion -> DECIMAL .)
    MATCH           reduce using rule 88 (expresion -> DECIMAL .)
    I64             reduce using rule 88 (expresion -> DECIMAL .)
    PARA            reduce using rule 88 (expresion -> DECIMAL .)
    NOT             reduce using rule 88 (expresion -> DECIMAL .)
    ENTERO          reduce using rule 88 (expresion -> DECIMAL .)
    DECIMAL         reduce using rule 88 (expresion -> DECIMAL .)
    CADENA          reduce using rule 88 (expresion -> DECIMAL .)
    CARACTER        reduce using rule 88 (expresion -> DECIMAL .)
    TRUE            reduce using rule 88 (expresion -> DECIMAL .)
    FALSE           reduce using rule 88 (expresion -> DECIMAL .)
    RETURN          reduce using rule 88 (expresion -> DECIMAL .)
    BREAK           reduce using rule 88 (expresion -> DECIMAL .)
    CONTINUE        reduce using rule 88 (expresion -> DECIMAL .)
    LOOP            reduce using rule 88 (expresion -> DECIMAL .)
    WHILE           reduce using rule 88 (expresion -> DECIMAL .)
    FN              reduce using rule 88 (expresion -> DECIMAL .)
    $end            reduce using rule 88 (expresion -> DECIMAL .)
    PARC            reduce using rule 88 (expresion -> DECIMAL .)
    LLAVA           reduce using rule 88 (expresion -> DECIMAL .)
    PT_COMA         reduce using rule 88 (expresion -> DECIMAL .)
    COMA            reduce using rule 88 (expresion -> DECIMAL .)
    LLAVC           reduce using rule 88 (expresion -> DECIMAL .)
    ARROW           reduce using rule 88 (expresion -> DECIMAL .)
    SEP_MATCH       reduce using rule 88 (expresion -> DECIMAL .)


state 28

    (91) expresion -> CARACTER .

    MAS             reduce using rule 91 (expresion -> CARACTER .)
    MENOS           reduce using rule 91 (expresion -> CARACTER .)
    MULTI           reduce using rule 91 (expresion -> CARACTER .)
    DIV             reduce using rule 91 (expresion -> CARACTER .)
    MODULO          reduce using rule 91 (expresion -> CARACTER .)
    IGUAL_IGUAL     reduce using rule 91 (expresion -> CARACTER .)
    NO_IGUAL        reduce using rule 91 (expresion -> CARACTER .)
    MAYOR           reduce using rule 91 (expresion -> CARACTER .)
    MENOR           reduce using rule 91 (expresion -> CARACTER .)
    MAYOR_IGUAL     reduce using rule 91 (expresion -> CARACTER .)
    MENOR_IGUAL     reduce using rule 91 (expresion -> CARACTER .)
    AND             reduce using rule 91 (expresion -> CARACTER .)
    OR              reduce using rule 91 (expresion -> CARACTER .)
    PUNTO           reduce using rule 91 (expresion -> CARACTER .)
    AS              reduce using rule 91 (expresion -> CARACTER .)
    PRINTLN         reduce using rule 91 (expresion -> CARACTER .)
    LET             reduce using rule 91 (expresion -> CARACTER .)
    ID              reduce using rule 91 (expresion -> CARACTER .)
    IF              reduce using rule 91 (expresion -> CARACTER .)
    MATCH           reduce using rule 91 (expresion -> CARACTER .)
    I64             reduce using rule 91 (expresion -> CARACTER .)
    PARA            reduce using rule 91 (expresion -> CARACTER .)
    NOT             reduce using rule 91 (expresion -> CARACTER .)
    ENTERO          reduce using rule 91 (expresion -> CARACTER .)
    DECIMAL         reduce using rule 91 (expresion -> CARACTER .)
    CADENA          reduce using rule 91 (expresion -> CARACTER .)
    CARACTER        reduce using rule 91 (expresion -> CARACTER .)
    TRUE            reduce using rule 91 (expresion -> CARACTER .)
    FALSE           reduce using rule 91 (expresion -> CARACTER .)
    RETURN          reduce using rule 91 (expresion -> CARACTER .)
    BREAK           reduce using rule 91 (expresion -> CARACTER .)
    CONTINUE        reduce using rule 91 (expresion -> CARACTER .)
    LOOP            reduce using rule 91 (expresion -> CARACTER .)
    WHILE           reduce using rule 91 (expresion -> CARACTER .)
    FN              reduce using rule 91 (expresion -> CARACTER .)
    $end            reduce using rule 91 (expresion -> CARACTER .)
    PARC            reduce using rule 91 (expresion -> CARACTER .)
    LLAVA           reduce using rule 91 (expresion -> CARACTER .)
    PT_COMA         reduce using rule 91 (expresion -> CARACTER .)
    COMA            reduce using rule 91 (expresion -> CARACTER .)
    LLAVC           reduce using rule 91 (expresion -> CARACTER .)
    ARROW           reduce using rule 91 (expresion -> CARACTER .)
    SEP_MATCH       reduce using rule 91 (expresion -> CARACTER .)


state 29

    (92) expresion -> TRUE .

    MAS             reduce using rule 92 (expresion -> TRUE .)
    MENOS           reduce using rule 92 (expresion -> TRUE .)
    MULTI           reduce using rule 92 (expresion -> TRUE .)
    DIV             reduce using rule 92 (expresion -> TRUE .)
    MODULO          reduce using rule 92 (expresion -> TRUE .)
    IGUAL_IGUAL     reduce using rule 92 (expresion -> TRUE .)
    NO_IGUAL        reduce using rule 92 (expresion -> TRUE .)
    MAYOR           reduce using rule 92 (expresion -> TRUE .)
    MENOR           reduce using rule 92 (expresion -> TRUE .)
    MAYOR_IGUAL     reduce using rule 92 (expresion -> TRUE .)
    MENOR_IGUAL     reduce using rule 92 (expresion -> TRUE .)
    AND             reduce using rule 92 (expresion -> TRUE .)
    OR              reduce using rule 92 (expresion -> TRUE .)
    PUNTO           reduce using rule 92 (expresion -> TRUE .)
    AS              reduce using rule 92 (expresion -> TRUE .)
    PRINTLN         reduce using rule 92 (expresion -> TRUE .)
    LET             reduce using rule 92 (expresion -> TRUE .)
    ID              reduce using rule 92 (expresion -> TRUE .)
    IF              reduce using rule 92 (expresion -> TRUE .)
    MATCH           reduce using rule 92 (expresion -> TRUE .)
    I64             reduce using rule 92 (expresion -> TRUE .)
    PARA            reduce using rule 92 (expresion -> TRUE .)
    NOT             reduce using rule 92 (expresion -> TRUE .)
    ENTERO          reduce using rule 92 (expresion -> TRUE .)
    DECIMAL         reduce using rule 92 (expresion -> TRUE .)
    CADENA          reduce using rule 92 (expresion -> TRUE .)
    CARACTER        reduce using rule 92 (expresion -> TRUE .)
    TRUE            reduce using rule 92 (expresion -> TRUE .)
    FALSE           reduce using rule 92 (expresion -> TRUE .)
    RETURN          reduce using rule 92 (expresion -> TRUE .)
    BREAK           reduce using rule 92 (expresion -> TRUE .)
    CONTINUE        reduce using rule 92 (expresion -> TRUE .)
    LOOP            reduce using rule 92 (expresion -> TRUE .)
    WHILE           reduce using rule 92 (expresion -> TRUE .)
    FN              reduce using rule 92 (expresion -> TRUE .)
    $end            reduce using rule 92 (expresion -> TRUE .)
    PARC            reduce using rule 92 (expresion -> TRUE .)
    LLAVA           reduce using rule 92 (expresion -> TRUE .)
    PT_COMA         reduce using rule 92 (expresion -> TRUE .)
    COMA            reduce using rule 92 (expresion -> TRUE .)
    LLAVC           reduce using rule 92 (expresion -> TRUE .)
    ARROW           reduce using rule 92 (expresion -> TRUE .)
    SEP_MATCH       reduce using rule 92 (expresion -> TRUE .)


state 30

    (93) expresion -> FALSE .

    MAS             reduce using rule 93 (expresion -> FALSE .)
    MENOS           reduce using rule 93 (expresion -> FALSE .)
    MULTI           reduce using rule 93 (expresion -> FALSE .)
    DIV             reduce using rule 93 (expresion -> FALSE .)
    MODULO          reduce using rule 93 (expresion -> FALSE .)
    IGUAL_IGUAL     reduce using rule 93 (expresion -> FALSE .)
    NO_IGUAL        reduce using rule 93 (expresion -> FALSE .)
    MAYOR           reduce using rule 93 (expresion -> FALSE .)
    MENOR           reduce using rule 93 (expresion -> FALSE .)
    MAYOR_IGUAL     reduce using rule 93 (expresion -> FALSE .)
    MENOR_IGUAL     reduce using rule 93 (expresion -> FALSE .)
    AND             reduce using rule 93 (expresion -> FALSE .)
    OR              reduce using rule 93 (expresion -> FALSE .)
    PUNTO           reduce using rule 93 (expresion -> FALSE .)
    AS              reduce using rule 93 (expresion -> FALSE .)
    PRINTLN         reduce using rule 93 (expresion -> FALSE .)
    LET             reduce using rule 93 (expresion -> FALSE .)
    ID              reduce using rule 93 (expresion -> FALSE .)
    IF              reduce using rule 93 (expresion -> FALSE .)
    MATCH           reduce using rule 93 (expresion -> FALSE .)
    I64             reduce using rule 93 (expresion -> FALSE .)
    PARA            reduce using rule 93 (expresion -> FALSE .)
    NOT             reduce using rule 93 (expresion -> FALSE .)
    ENTERO          reduce using rule 93 (expresion -> FALSE .)
    DECIMAL         reduce using rule 93 (expresion -> FALSE .)
    CADENA          reduce using rule 93 (expresion -> FALSE .)
    CARACTER        reduce using rule 93 (expresion -> FALSE .)
    TRUE            reduce using rule 93 (expresion -> FALSE .)
    FALSE           reduce using rule 93 (expresion -> FALSE .)
    RETURN          reduce using rule 93 (expresion -> FALSE .)
    BREAK           reduce using rule 93 (expresion -> FALSE .)
    CONTINUE        reduce using rule 93 (expresion -> FALSE .)
    LOOP            reduce using rule 93 (expresion -> FALSE .)
    WHILE           reduce using rule 93 (expresion -> FALSE .)
    FN              reduce using rule 93 (expresion -> FALSE .)
    $end            reduce using rule 93 (expresion -> FALSE .)
    PARC            reduce using rule 93 (expresion -> FALSE .)
    LLAVA           reduce using rule 93 (expresion -> FALSE .)
    PT_COMA         reduce using rule 93 (expresion -> FALSE .)
    COMA            reduce using rule 93 (expresion -> FALSE .)
    LLAVC           reduce using rule 93 (expresion -> FALSE .)
    ARROW           reduce using rule 93 (expresion -> FALSE .)
    SEP_MATCH       reduce using rule 93 (expresion -> FALSE .)


state 31

    (46) return -> RETURN .
    (47) return -> RETURN . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    PT_COMA         reduce using rule 46 (return -> RETURN .)
    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 70
    llamado                        shift and go to state 25

state 32

    (48) break -> BREAK .
    (49) break -> BREAK . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    PT_COMA         reduce using rule 48 (break -> BREAK .)
    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 71
    llamado                        shift and go to state 25

state 33

    (50) continue -> CONTINUE .

    PT_COMA         reduce using rule 50 (continue -> CONTINUE .)


state 34

    (51) loop -> LOOP . statement
    (61) statement -> . LLAVA instrucciones LLAVC
    (62) statement -> . LLAVA LLAVC

    LLAVA           shift and go to state 73

    statement                      shift and go to state 72

state 35

    (52) while -> WHILE . expresion statement
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 74
    llamado                        shift and go to state 25

state 36

    (53) funcion -> FN . ID PARA lista_parametros PARC statement
    (54) funcion -> FN . ID PARA lista_parametros PARC ARRFUNC tipo statement
    (55) funcion -> FN . ID PARA PARC statement
    (56) funcion -> FN . ID PARA PARC ARRFUNC statement

    ID              shift and go to state 75


state 37

    (2) instrucciones -> instrucciones instruccion .

    PRINTLN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MENOS           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    I64             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PARA            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NOT             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ENTERO          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DECIMAL         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CADENA          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CARACTER        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    TRUE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FALSE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FN              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVC           reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 38

    (4) instruccion -> prints PT_COMA .

    PRINTLN         reduce using rule 4 (instruccion -> prints PT_COMA .)
    LET             reduce using rule 4 (instruccion -> prints PT_COMA .)
    ID              reduce using rule 4 (instruccion -> prints PT_COMA .)
    IF              reduce using rule 4 (instruccion -> prints PT_COMA .)
    MATCH           reduce using rule 4 (instruccion -> prints PT_COMA .)
    MENOS           reduce using rule 4 (instruccion -> prints PT_COMA .)
    I64             reduce using rule 4 (instruccion -> prints PT_COMA .)
    PARA            reduce using rule 4 (instruccion -> prints PT_COMA .)
    NOT             reduce using rule 4 (instruccion -> prints PT_COMA .)
    ENTERO          reduce using rule 4 (instruccion -> prints PT_COMA .)
    DECIMAL         reduce using rule 4 (instruccion -> prints PT_COMA .)
    CADENA          reduce using rule 4 (instruccion -> prints PT_COMA .)
    CARACTER        reduce using rule 4 (instruccion -> prints PT_COMA .)
    TRUE            reduce using rule 4 (instruccion -> prints PT_COMA .)
    FALSE           reduce using rule 4 (instruccion -> prints PT_COMA .)
    RETURN          reduce using rule 4 (instruccion -> prints PT_COMA .)
    BREAK           reduce using rule 4 (instruccion -> prints PT_COMA .)
    CONTINUE        reduce using rule 4 (instruccion -> prints PT_COMA .)
    LOOP            reduce using rule 4 (instruccion -> prints PT_COMA .)
    WHILE           reduce using rule 4 (instruccion -> prints PT_COMA .)
    FN              reduce using rule 4 (instruccion -> prints PT_COMA .)
    $end            reduce using rule 4 (instruccion -> prints PT_COMA .)
    LLAVC           reduce using rule 4 (instruccion -> prints PT_COMA .)
    COMA            reduce using rule 4 (instruccion -> prints PT_COMA .)


state 39

    (5) instruccion -> declaracion PT_COMA .

    PRINTLN         reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    LET             reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    ID              reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    IF              reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    MATCH           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    MENOS           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    I64             reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    PARA            reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    NOT             reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    ENTERO          reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    DECIMAL         reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    CADENA          reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    CARACTER        reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    TRUE            reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    FALSE           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    RETURN          reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    BREAK           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    CONTINUE        reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    LOOP            reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    WHILE           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    FN              reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    $end            reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    LLAVC           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    COMA            reduce using rule 5 (instruccion -> declaracion PT_COMA .)


state 40

    (70) expresion -> expresion MAS . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 76
    llamado                        shift and go to state 25

state 41

    (71) expresion -> expresion MENOS . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 77
    llamado                        shift and go to state 25

state 42

    (72) expresion -> expresion MULTI . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 78
    llamado                        shift and go to state 25

state 43

    (73) expresion -> expresion DIV . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 79
    llamado                        shift and go to state 25

state 44

    (74) expresion -> expresion MODULO . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 80
    llamado                        shift and go to state 25

state 45

    (78) expresion -> expresion IGUAL_IGUAL . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 81
    llamado                        shift and go to state 25

state 46

    (79) expresion -> expresion NO_IGUAL . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 82
    llamado                        shift and go to state 25

state 47

    (80) expresion -> expresion MAYOR . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 83
    llamado                        shift and go to state 25

state 48

    (81) expresion -> expresion MENOR . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 84
    llamado                        shift and go to state 25

state 49

    (82) expresion -> expresion MAYOR_IGUAL . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 85
    llamado                        shift and go to state 25

state 50

    (83) expresion -> expresion MENOR_IGUAL . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 86
    llamado                        shift and go to state 25

state 51

    (84) expresion -> expresion AND . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 87
    llamado                        shift and go to state 25

state 52

    (85) expresion -> expresion OR . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 88
    llamado                        shift and go to state 25

state 53

    (94) expresion -> expresion PUNTO . TO_OWNED PARA PARC
    (95) expresion -> expresion PUNTO . TO_STRING PARA PARC
    (96) expresion -> expresion PUNTO . ABSOLUTO PARA PARC
    (97) expresion -> expresion PUNTO . RAIZ PARA PARC

    TO_OWNED        shift and go to state 89
    TO_STRING       shift and go to state 90
    ABSOLUTO        shift and go to state 91
    RAIZ            shift and go to state 92


state 54

    (98) expresion -> expresion AS . F64
    (99) expresion -> expresion AS . I64

    F64             shift and go to state 93
    I64             shift and go to state 94


state 55

    (9) instruccion -> return PT_COMA .

    PRINTLN         reduce using rule 9 (instruccion -> return PT_COMA .)
    LET             reduce using rule 9 (instruccion -> return PT_COMA .)
    ID              reduce using rule 9 (instruccion -> return PT_COMA .)
    IF              reduce using rule 9 (instruccion -> return PT_COMA .)
    MATCH           reduce using rule 9 (instruccion -> return PT_COMA .)
    MENOS           reduce using rule 9 (instruccion -> return PT_COMA .)
    I64             reduce using rule 9 (instruccion -> return PT_COMA .)
    PARA            reduce using rule 9 (instruccion -> return PT_COMA .)
    NOT             reduce using rule 9 (instruccion -> return PT_COMA .)
    ENTERO          reduce using rule 9 (instruccion -> return PT_COMA .)
    DECIMAL         reduce using rule 9 (instruccion -> return PT_COMA .)
    CADENA          reduce using rule 9 (instruccion -> return PT_COMA .)
    CARACTER        reduce using rule 9 (instruccion -> return PT_COMA .)
    TRUE            reduce using rule 9 (instruccion -> return PT_COMA .)
    FALSE           reduce using rule 9 (instruccion -> return PT_COMA .)
    RETURN          reduce using rule 9 (instruccion -> return PT_COMA .)
    BREAK           reduce using rule 9 (instruccion -> return PT_COMA .)
    CONTINUE        reduce using rule 9 (instruccion -> return PT_COMA .)
    LOOP            reduce using rule 9 (instruccion -> return PT_COMA .)
    WHILE           reduce using rule 9 (instruccion -> return PT_COMA .)
    FN              reduce using rule 9 (instruccion -> return PT_COMA .)
    $end            reduce using rule 9 (instruccion -> return PT_COMA .)
    LLAVC           reduce using rule 9 (instruccion -> return PT_COMA .)
    COMA            reduce using rule 9 (instruccion -> return PT_COMA .)


state 56

    (10) instruccion -> break PT_COMA .

    PRINTLN         reduce using rule 10 (instruccion -> break PT_COMA .)
    LET             reduce using rule 10 (instruccion -> break PT_COMA .)
    ID              reduce using rule 10 (instruccion -> break PT_COMA .)
    IF              reduce using rule 10 (instruccion -> break PT_COMA .)
    MATCH           reduce using rule 10 (instruccion -> break PT_COMA .)
    MENOS           reduce using rule 10 (instruccion -> break PT_COMA .)
    I64             reduce using rule 10 (instruccion -> break PT_COMA .)
    PARA            reduce using rule 10 (instruccion -> break PT_COMA .)
    NOT             reduce using rule 10 (instruccion -> break PT_COMA .)
    ENTERO          reduce using rule 10 (instruccion -> break PT_COMA .)
    DECIMAL         reduce using rule 10 (instruccion -> break PT_COMA .)
    CADENA          reduce using rule 10 (instruccion -> break PT_COMA .)
    CARACTER        reduce using rule 10 (instruccion -> break PT_COMA .)
    TRUE            reduce using rule 10 (instruccion -> break PT_COMA .)
    FALSE           reduce using rule 10 (instruccion -> break PT_COMA .)
    RETURN          reduce using rule 10 (instruccion -> break PT_COMA .)
    BREAK           reduce using rule 10 (instruccion -> break PT_COMA .)
    CONTINUE        reduce using rule 10 (instruccion -> break PT_COMA .)
    LOOP            reduce using rule 10 (instruccion -> break PT_COMA .)
    WHILE           reduce using rule 10 (instruccion -> break PT_COMA .)
    FN              reduce using rule 10 (instruccion -> break PT_COMA .)
    $end            reduce using rule 10 (instruccion -> break PT_COMA .)
    LLAVC           reduce using rule 10 (instruccion -> break PT_COMA .)
    COMA            reduce using rule 10 (instruccion -> break PT_COMA .)


state 57

    (11) instruccion -> continue PT_COMA .

    PRINTLN         reduce using rule 11 (instruccion -> continue PT_COMA .)
    LET             reduce using rule 11 (instruccion -> continue PT_COMA .)
    ID              reduce using rule 11 (instruccion -> continue PT_COMA .)
    IF              reduce using rule 11 (instruccion -> continue PT_COMA .)
    MATCH           reduce using rule 11 (instruccion -> continue PT_COMA .)
    MENOS           reduce using rule 11 (instruccion -> continue PT_COMA .)
    I64             reduce using rule 11 (instruccion -> continue PT_COMA .)
    PARA            reduce using rule 11 (instruccion -> continue PT_COMA .)
    NOT             reduce using rule 11 (instruccion -> continue PT_COMA .)
    ENTERO          reduce using rule 11 (instruccion -> continue PT_COMA .)
    DECIMAL         reduce using rule 11 (instruccion -> continue PT_COMA .)
    CADENA          reduce using rule 11 (instruccion -> continue PT_COMA .)
    CARACTER        reduce using rule 11 (instruccion -> continue PT_COMA .)
    TRUE            reduce using rule 11 (instruccion -> continue PT_COMA .)
    FALSE           reduce using rule 11 (instruccion -> continue PT_COMA .)
    RETURN          reduce using rule 11 (instruccion -> continue PT_COMA .)
    BREAK           reduce using rule 11 (instruccion -> continue PT_COMA .)
    CONTINUE        reduce using rule 11 (instruccion -> continue PT_COMA .)
    LOOP            reduce using rule 11 (instruccion -> continue PT_COMA .)
    WHILE           reduce using rule 11 (instruccion -> continue PT_COMA .)
    FN              reduce using rule 11 (instruccion -> continue PT_COMA .)
    $end            reduce using rule 11 (instruccion -> continue PT_COMA .)
    LLAVC           reduce using rule 11 (instruccion -> continue PT_COMA .)
    COMA            reduce using rule 11 (instruccion -> continue PT_COMA .)


state 58

    (15) prints -> PRINTLN NOT . PARA CADENA COMA list_exp PARC
    (16) prints -> PRINTLN NOT . PARA CADENA PARC

    PARA            shift and go to state 95


state 59

    (86) expresion -> NOT expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    MAS             reduce using rule 86 (expresion -> NOT expresion .)
    MENOS           reduce using rule 86 (expresion -> NOT expresion .)
    MULTI           reduce using rule 86 (expresion -> NOT expresion .)
    DIV             reduce using rule 86 (expresion -> NOT expresion .)
    MODULO          reduce using rule 86 (expresion -> NOT expresion .)
    IGUAL_IGUAL     reduce using rule 86 (expresion -> NOT expresion .)
    NO_IGUAL        reduce using rule 86 (expresion -> NOT expresion .)
    MAYOR           reduce using rule 86 (expresion -> NOT expresion .)
    MENOR           reduce using rule 86 (expresion -> NOT expresion .)
    MAYOR_IGUAL     reduce using rule 86 (expresion -> NOT expresion .)
    MENOR_IGUAL     reduce using rule 86 (expresion -> NOT expresion .)
    AND             reduce using rule 86 (expresion -> NOT expresion .)
    OR              reduce using rule 86 (expresion -> NOT expresion .)
    PUNTO           reduce using rule 86 (expresion -> NOT expresion .)
    AS              reduce using rule 86 (expresion -> NOT expresion .)
    PRINTLN         reduce using rule 86 (expresion -> NOT expresion .)
    LET             reduce using rule 86 (expresion -> NOT expresion .)
    ID              reduce using rule 86 (expresion -> NOT expresion .)
    IF              reduce using rule 86 (expresion -> NOT expresion .)
    MATCH           reduce using rule 86 (expresion -> NOT expresion .)
    I64             reduce using rule 86 (expresion -> NOT expresion .)
    PARA            reduce using rule 86 (expresion -> NOT expresion .)
    NOT             reduce using rule 86 (expresion -> NOT expresion .)
    ENTERO          reduce using rule 86 (expresion -> NOT expresion .)
    DECIMAL         reduce using rule 86 (expresion -> NOT expresion .)
    CADENA          reduce using rule 86 (expresion -> NOT expresion .)
    CARACTER        reduce using rule 86 (expresion -> NOT expresion .)
    TRUE            reduce using rule 86 (expresion -> NOT expresion .)
    FALSE           reduce using rule 86 (expresion -> NOT expresion .)
    RETURN          reduce using rule 86 (expresion -> NOT expresion .)
    BREAK           reduce using rule 86 (expresion -> NOT expresion .)
    CONTINUE        reduce using rule 86 (expresion -> NOT expresion .)
    LOOP            reduce using rule 86 (expresion -> NOT expresion .)
    WHILE           reduce using rule 86 (expresion -> NOT expresion .)
    FN              reduce using rule 86 (expresion -> NOT expresion .)
    $end            reduce using rule 86 (expresion -> NOT expresion .)
    PARC            reduce using rule 86 (expresion -> NOT expresion .)
    LLAVA           reduce using rule 86 (expresion -> NOT expresion .)
    PT_COMA         reduce using rule 86 (expresion -> NOT expresion .)
    COMA            reduce using rule 86 (expresion -> NOT expresion .)
    LLAVC           reduce using rule 86 (expresion -> NOT expresion .)
    ARROW           reduce using rule 86 (expresion -> NOT expresion .)
    SEP_MATCH       reduce using rule 86 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! MULTI           [ shift and go to state 42 ]
  ! DIV             [ shift and go to state 43 ]
  ! MODULO          [ shift and go to state 44 ]
  ! IGUAL_IGUAL     [ shift and go to state 45 ]
  ! NO_IGUAL        [ shift and go to state 46 ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_IGUAL     [ shift and go to state 49 ]
  ! MENOR_IGUAL     [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! PUNTO           [ shift and go to state 53 ]
  ! AS              [ shift and go to state 54 ]


state 60

    (89) expresion -> ID .
    (59) llamado -> ID . PARA list_exp PARC
    (60) llamado -> ID . PARA PARC

  ! shift/reduce conflict for PARA resolved as shift
    MAS             reduce using rule 89 (expresion -> ID .)
    MENOS           reduce using rule 89 (expresion -> ID .)
    MULTI           reduce using rule 89 (expresion -> ID .)
    DIV             reduce using rule 89 (expresion -> ID .)
    MODULO          reduce using rule 89 (expresion -> ID .)
    IGUAL_IGUAL     reduce using rule 89 (expresion -> ID .)
    NO_IGUAL        reduce using rule 89 (expresion -> ID .)
    MAYOR           reduce using rule 89 (expresion -> ID .)
    MENOR           reduce using rule 89 (expresion -> ID .)
    MAYOR_IGUAL     reduce using rule 89 (expresion -> ID .)
    MENOR_IGUAL     reduce using rule 89 (expresion -> ID .)
    AND             reduce using rule 89 (expresion -> ID .)
    OR              reduce using rule 89 (expresion -> ID .)
    PUNTO           reduce using rule 89 (expresion -> ID .)
    AS              reduce using rule 89 (expresion -> ID .)
    PRINTLN         reduce using rule 89 (expresion -> ID .)
    LET             reduce using rule 89 (expresion -> ID .)
    ID              reduce using rule 89 (expresion -> ID .)
    IF              reduce using rule 89 (expresion -> ID .)
    MATCH           reduce using rule 89 (expresion -> ID .)
    I64             reduce using rule 89 (expresion -> ID .)
    NOT             reduce using rule 89 (expresion -> ID .)
    ENTERO          reduce using rule 89 (expresion -> ID .)
    DECIMAL         reduce using rule 89 (expresion -> ID .)
    CADENA          reduce using rule 89 (expresion -> ID .)
    CARACTER        reduce using rule 89 (expresion -> ID .)
    TRUE            reduce using rule 89 (expresion -> ID .)
    FALSE           reduce using rule 89 (expresion -> ID .)
    RETURN          reduce using rule 89 (expresion -> ID .)
    BREAK           reduce using rule 89 (expresion -> ID .)
    CONTINUE        reduce using rule 89 (expresion -> ID .)
    LOOP            reduce using rule 89 (expresion -> ID .)
    WHILE           reduce using rule 89 (expresion -> ID .)
    FN              reduce using rule 89 (expresion -> ID .)
    $end            reduce using rule 89 (expresion -> ID .)
    PARC            reduce using rule 89 (expresion -> ID .)
    LLAVA           reduce using rule 89 (expresion -> ID .)
    PT_COMA         reduce using rule 89 (expresion -> ID .)
    COMA            reduce using rule 89 (expresion -> ID .)
    LLAVC           reduce using rule 89 (expresion -> ID .)
    ARROW           reduce using rule 89 (expresion -> ID .)
    SEP_MATCH       reduce using rule 89 (expresion -> ID .)
    PARA            shift and go to state 65

  ! PARA            [ reduce using rule 89 (expresion -> ID .) ]


state 61

    (76) expresion -> PARA expresion . PARC
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    PARC            shift and go to state 96
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44
    IGUAL_IGUAL     shift and go to state 45
    NO_IGUAL        shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_IGUAL     shift and go to state 49
    MENOR_IGUAL     shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    PUNTO           shift and go to state 53
    AS              shift and go to state 54


state 62

    (19) declaracion -> LET MUT . ID DOS_PT tipo IGUAL valores
    (20) declaracion -> LET MUT . ID DOS_PT tipo
    (21) declaracion -> LET MUT . ID IGUAL valores
    (22) declaracion -> LET MUT . ID

    ID              shift and go to state 97


state 63

    (23) declaracion -> LET ID . DOS_PT tipo IGUAL valores
    (24) declaracion -> LET ID . DOS_PT tipo
    (25) declaracion -> LET ID . IGUAL valores
    (26) declaracion -> LET ID .

    DOS_PT          shift and go to state 98
    IGUAL           shift and go to state 99
    PT_COMA         reduce using rule 26 (declaracion -> LET ID .)


state 64

    (27) declaracion -> ID IGUAL . valores
    (28) valores -> . expresion
    (29) valores -> . sent_if
    (30) valores -> . match
    (31) valores -> . loop
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (32) sent_if -> . IF expresion statement sent_else
    (36) match -> . MATCH expresion casos_match
    (51) loop -> . LOOP statement
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 34

    valores                        shift and go to state 100
    expresion                      shift and go to state 101
    sent_if                        shift and go to state 102
    match                          shift and go to state 103
    loop                           shift and go to state 104
    llamado                        shift and go to state 25

state 65

    (59) llamado -> ID PARA . list_exp PARC
    (60) llamado -> ID PARA . PARC
    (17) list_exp -> . list_exp COMA expresion
    (18) list_exp -> . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    PARC            shift and go to state 106
    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    list_exp                       shift and go to state 105
    expresion                      shift and go to state 107
    llamado                        shift and go to state 25

state 66

    (32) sent_if -> IF expresion . statement sent_else
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64
    (61) statement -> . LLAVA instrucciones LLAVC
    (62) statement -> . LLAVA LLAVC

    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44
    IGUAL_IGUAL     shift and go to state 45
    NO_IGUAL        shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_IGUAL     shift and go to state 49
    MENOR_IGUAL     shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    PUNTO           shift and go to state 53
    AS              shift and go to state 54
    LLAVA           shift and go to state 73

    statement                      shift and go to state 108

state 67

    (36) match -> MATCH expresion . casos_match
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64
    (37) casos_match -> . LLAVA lista_casos default LLAVC

    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44
    IGUAL_IGUAL     shift and go to state 45
    NO_IGUAL        shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_IGUAL     shift and go to state 49
    MENOR_IGUAL     shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    PUNTO           shift and go to state 53
    AS              shift and go to state 54
    LLAVA           shift and go to state 110

    casos_match                    shift and go to state 109

state 68

    (69) expresion -> MENOS expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    MAS             reduce using rule 69 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 69 (expresion -> MENOS expresion .)
    MULTI           reduce using rule 69 (expresion -> MENOS expresion .)
    DIV             reduce using rule 69 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 69 (expresion -> MENOS expresion .)
    IGUAL_IGUAL     reduce using rule 69 (expresion -> MENOS expresion .)
    NO_IGUAL        reduce using rule 69 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 69 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 69 (expresion -> MENOS expresion .)
    MAYOR_IGUAL     reduce using rule 69 (expresion -> MENOS expresion .)
    MENOR_IGUAL     reduce using rule 69 (expresion -> MENOS expresion .)
    AND             reduce using rule 69 (expresion -> MENOS expresion .)
    OR              reduce using rule 69 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 69 (expresion -> MENOS expresion .)
    AS              reduce using rule 69 (expresion -> MENOS expresion .)
    PRINTLN         reduce using rule 69 (expresion -> MENOS expresion .)
    LET             reduce using rule 69 (expresion -> MENOS expresion .)
    ID              reduce using rule 69 (expresion -> MENOS expresion .)
    IF              reduce using rule 69 (expresion -> MENOS expresion .)
    MATCH           reduce using rule 69 (expresion -> MENOS expresion .)
    I64             reduce using rule 69 (expresion -> MENOS expresion .)
    PARA            reduce using rule 69 (expresion -> MENOS expresion .)
    NOT             reduce using rule 69 (expresion -> MENOS expresion .)
    ENTERO          reduce using rule 69 (expresion -> MENOS expresion .)
    DECIMAL         reduce using rule 69 (expresion -> MENOS expresion .)
    CADENA          reduce using rule 69 (expresion -> MENOS expresion .)
    CARACTER        reduce using rule 69 (expresion -> MENOS expresion .)
    TRUE            reduce using rule 69 (expresion -> MENOS expresion .)
    FALSE           reduce using rule 69 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 69 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 69 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 69 (expresion -> MENOS expresion .)
    LOOP            reduce using rule 69 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 69 (expresion -> MENOS expresion .)
    FN              reduce using rule 69 (expresion -> MENOS expresion .)
    $end            reduce using rule 69 (expresion -> MENOS expresion .)
    PARC            reduce using rule 69 (expresion -> MENOS expresion .)
    LLAVA           reduce using rule 69 (expresion -> MENOS expresion .)
    PT_COMA         reduce using rule 69 (expresion -> MENOS expresion .)
    COMA            reduce using rule 69 (expresion -> MENOS expresion .)
    LLAVC           reduce using rule 69 (expresion -> MENOS expresion .)
    ARROW           reduce using rule 69 (expresion -> MENOS expresion .)
    SEP_MATCH       reduce using rule 69 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! MULTI           [ shift and go to state 42 ]
  ! DIV             [ shift and go to state 43 ]
  ! MODULO          [ shift and go to state 44 ]
  ! IGUAL_IGUAL     [ shift and go to state 45 ]
  ! NO_IGUAL        [ shift and go to state 46 ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_IGUAL     [ shift and go to state 49 ]
  ! MENOR_IGUAL     [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! PUNTO           [ shift and go to state 53 ]
  ! AS              [ shift and go to state 54 ]


state 69

    (75) expresion -> I64 DOS_PT . DOS_PT POW PARA expresion COMA expresion PARC

    DOS_PT          shift and go to state 111


state 70

    (47) return -> RETURN expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    PT_COMA         reduce using rule 47 (return -> RETURN expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44
    IGUAL_IGUAL     shift and go to state 45
    NO_IGUAL        shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_IGUAL     shift and go to state 49
    MENOR_IGUAL     shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    PUNTO           shift and go to state 53
    AS              shift and go to state 54


state 71

    (49) break -> BREAK expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    PT_COMA         reduce using rule 49 (break -> BREAK expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44
    IGUAL_IGUAL     shift and go to state 45
    NO_IGUAL        shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_IGUAL     shift and go to state 49
    MENOR_IGUAL     shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    PUNTO           shift and go to state 53
    AS              shift and go to state 54


state 72

    (51) loop -> LOOP statement .

    PRINTLN         reduce using rule 51 (loop -> LOOP statement .)
    LET             reduce using rule 51 (loop -> LOOP statement .)
    ID              reduce using rule 51 (loop -> LOOP statement .)
    IF              reduce using rule 51 (loop -> LOOP statement .)
    MATCH           reduce using rule 51 (loop -> LOOP statement .)
    MENOS           reduce using rule 51 (loop -> LOOP statement .)
    I64             reduce using rule 51 (loop -> LOOP statement .)
    PARA            reduce using rule 51 (loop -> LOOP statement .)
    NOT             reduce using rule 51 (loop -> LOOP statement .)
    ENTERO          reduce using rule 51 (loop -> LOOP statement .)
    DECIMAL         reduce using rule 51 (loop -> LOOP statement .)
    CADENA          reduce using rule 51 (loop -> LOOP statement .)
    CARACTER        reduce using rule 51 (loop -> LOOP statement .)
    TRUE            reduce using rule 51 (loop -> LOOP statement .)
    FALSE           reduce using rule 51 (loop -> LOOP statement .)
    RETURN          reduce using rule 51 (loop -> LOOP statement .)
    BREAK           reduce using rule 51 (loop -> LOOP statement .)
    CONTINUE        reduce using rule 51 (loop -> LOOP statement .)
    LOOP            reduce using rule 51 (loop -> LOOP statement .)
    WHILE           reduce using rule 51 (loop -> LOOP statement .)
    FN              reduce using rule 51 (loop -> LOOP statement .)
    $end            reduce using rule 51 (loop -> LOOP statement .)
    PT_COMA         reduce using rule 51 (loop -> LOOP statement .)
    LLAVC           reduce using rule 51 (loop -> LOOP statement .)
    COMA            reduce using rule 51 (loop -> LOOP statement .)


state 73

    (61) statement -> LLAVA . instrucciones LLAVC
    (62) statement -> LLAVA . LLAVC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) instruccion -> . loop
    (13) instruccion -> . while
    (14) instruccion -> . funcion
    (15) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (16) prints -> . PRINTLN NOT PARA CADENA PARC
    (19) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (20) declaracion -> . LET MUT ID DOS_PT tipo
    (21) declaracion -> . LET MUT ID IGUAL valores
    (22) declaracion -> . LET MUT ID
    (23) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (24) declaracion -> . LET ID DOS_PT tipo
    (25) declaracion -> . LET ID IGUAL valores
    (26) declaracion -> . LET ID
    (27) declaracion -> . ID IGUAL valores
    (32) sent_if -> . IF expresion statement sent_else
    (36) match -> . MATCH expresion casos_match
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (46) return -> . RETURN
    (47) return -> . RETURN expresion
    (48) break -> . BREAK
    (49) break -> . BREAK expresion
    (50) continue -> . CONTINUE
    (51) loop -> . LOOP statement
    (52) while -> . WHILE expresion statement
    (53) funcion -> . FN ID PARA lista_parametros PARC statement
    (54) funcion -> . FN ID PARA lista_parametros PARC ARRFUNC tipo statement
    (55) funcion -> . FN ID PARA PARC statement
    (56) funcion -> . FN ID PARA PARC ARRFUNC statement
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    LLAVC           shift and go to state 113
    PRINTLN         shift and go to state 15
    LET             shift and go to state 19
    ID              shift and go to state 20
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    RETURN          shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    LOOP            shift and go to state 34
    WHILE           shift and go to state 35
    FN              shift and go to state 36

    instrucciones                  shift and go to state 112
    instruccion                    shift and go to state 3
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    funcion                        shift and go to state 14
    llamado                        shift and go to state 25

state 74

    (52) while -> WHILE expresion . statement
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64
    (61) statement -> . LLAVA instrucciones LLAVC
    (62) statement -> . LLAVA LLAVC

    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44
    IGUAL_IGUAL     shift and go to state 45
    NO_IGUAL        shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_IGUAL     shift and go to state 49
    MENOR_IGUAL     shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    PUNTO           shift and go to state 53
    AS              shift and go to state 54
    LLAVA           shift and go to state 73

    statement                      shift and go to state 114

state 75

    (53) funcion -> FN ID . PARA lista_parametros PARC statement
    (54) funcion -> FN ID . PARA lista_parametros PARC ARRFUNC tipo statement
    (55) funcion -> FN ID . PARA PARC statement
    (56) funcion -> FN ID . PARA PARC ARRFUNC statement

    PARA            shift and go to state 115


state 76

    (70) expresion -> expresion MAS expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    MAS             reduce using rule 70 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 70 (expresion -> expresion MAS expresion .)
    IGUAL_IGUAL     reduce using rule 70 (expresion -> expresion MAS expresion .)
    NO_IGUAL        reduce using rule 70 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 70 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 70 (expresion -> expresion MAS expresion .)
    MAYOR_IGUAL     reduce using rule 70 (expresion -> expresion MAS expresion .)
    MENOR_IGUAL     reduce using rule 70 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 70 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 70 (expresion -> expresion MAS expresion .)
    PUNTO           reduce using rule 70 (expresion -> expresion MAS expresion .)
    AS              reduce using rule 70 (expresion -> expresion MAS expresion .)
    PRINTLN         reduce using rule 70 (expresion -> expresion MAS expresion .)
    LET             reduce using rule 70 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 70 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 70 (expresion -> expresion MAS expresion .)
    MATCH           reduce using rule 70 (expresion -> expresion MAS expresion .)
    I64             reduce using rule 70 (expresion -> expresion MAS expresion .)
    PARA            reduce using rule 70 (expresion -> expresion MAS expresion .)
    NOT             reduce using rule 70 (expresion -> expresion MAS expresion .)
    ENTERO          reduce using rule 70 (expresion -> expresion MAS expresion .)
    DECIMAL         reduce using rule 70 (expresion -> expresion MAS expresion .)
    CADENA          reduce using rule 70 (expresion -> expresion MAS expresion .)
    CARACTER        reduce using rule 70 (expresion -> expresion MAS expresion .)
    TRUE            reduce using rule 70 (expresion -> expresion MAS expresion .)
    FALSE           reduce using rule 70 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 70 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 70 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 70 (expresion -> expresion MAS expresion .)
    LOOP            reduce using rule 70 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 70 (expresion -> expresion MAS expresion .)
    FN              reduce using rule 70 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 70 (expresion -> expresion MAS expresion .)
    PARC            reduce using rule 70 (expresion -> expresion MAS expresion .)
    LLAVA           reduce using rule 70 (expresion -> expresion MAS expresion .)
    PT_COMA         reduce using rule 70 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 70 (expresion -> expresion MAS expresion .)
    LLAVC           reduce using rule 70 (expresion -> expresion MAS expresion .)
    ARROW           reduce using rule 70 (expresion -> expresion MAS expresion .)
    SEP_MATCH       reduce using rule 70 (expresion -> expresion MAS expresion .)
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44

  ! MULTI           [ reduce using rule 70 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 70 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 70 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! IGUAL_IGUAL     [ shift and go to state 45 ]
  ! NO_IGUAL        [ shift and go to state 46 ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_IGUAL     [ shift and go to state 49 ]
  ! MENOR_IGUAL     [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! PUNTO           [ shift and go to state 53 ]
  ! AS              [ shift and go to state 54 ]


state 77

    (71) expresion -> expresion MENOS expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    MAS             reduce using rule 71 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 71 (expresion -> expresion MENOS expresion .)
    IGUAL_IGUAL     reduce using rule 71 (expresion -> expresion MENOS expresion .)
    NO_IGUAL        reduce using rule 71 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 71 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 71 (expresion -> expresion MENOS expresion .)
    MAYOR_IGUAL     reduce using rule 71 (expresion -> expresion MENOS expresion .)
    MENOR_IGUAL     reduce using rule 71 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 71 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 71 (expresion -> expresion MENOS expresion .)
    PUNTO           reduce using rule 71 (expresion -> expresion MENOS expresion .)
    AS              reduce using rule 71 (expresion -> expresion MENOS expresion .)
    PRINTLN         reduce using rule 71 (expresion -> expresion MENOS expresion .)
    LET             reduce using rule 71 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 71 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 71 (expresion -> expresion MENOS expresion .)
    MATCH           reduce using rule 71 (expresion -> expresion MENOS expresion .)
    I64             reduce using rule 71 (expresion -> expresion MENOS expresion .)
    PARA            reduce using rule 71 (expresion -> expresion MENOS expresion .)
    NOT             reduce using rule 71 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 71 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 71 (expresion -> expresion MENOS expresion .)
    CADENA          reduce using rule 71 (expresion -> expresion MENOS expresion .)
    CARACTER        reduce using rule 71 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 71 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 71 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 71 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 71 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 71 (expresion -> expresion MENOS expresion .)
    LOOP            reduce using rule 71 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 71 (expresion -> expresion MENOS expresion .)
    FN              reduce using rule 71 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 71 (expresion -> expresion MENOS expresion .)
    PARC            reduce using rule 71 (expresion -> expresion MENOS expresion .)
    LLAVA           reduce using rule 71 (expresion -> expresion MENOS expresion .)
    PT_COMA         reduce using rule 71 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 71 (expresion -> expresion MENOS expresion .)
    LLAVC           reduce using rule 71 (expresion -> expresion MENOS expresion .)
    ARROW           reduce using rule 71 (expresion -> expresion MENOS expresion .)
    SEP_MATCH       reduce using rule 71 (expresion -> expresion MENOS expresion .)
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44

  ! MULTI           [ reduce using rule 71 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 71 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 71 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! IGUAL_IGUAL     [ shift and go to state 45 ]
  ! NO_IGUAL        [ shift and go to state 46 ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_IGUAL     [ shift and go to state 49 ]
  ! MENOR_IGUAL     [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! PUNTO           [ shift and go to state 53 ]
  ! AS              [ shift and go to state 54 ]


state 78

    (72) expresion -> expresion MULTI expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    MAS             reduce using rule 72 (expresion -> expresion MULTI expresion .)
    MENOS           reduce using rule 72 (expresion -> expresion MULTI expresion .)
    MULTI           reduce using rule 72 (expresion -> expresion MULTI expresion .)
    DIV             reduce using rule 72 (expresion -> expresion MULTI expresion .)
    MODULO          reduce using rule 72 (expresion -> expresion MULTI expresion .)
    IGUAL_IGUAL     reduce using rule 72 (expresion -> expresion MULTI expresion .)
    NO_IGUAL        reduce using rule 72 (expresion -> expresion MULTI expresion .)
    MAYOR           reduce using rule 72 (expresion -> expresion MULTI expresion .)
    MENOR           reduce using rule 72 (expresion -> expresion MULTI expresion .)
    MAYOR_IGUAL     reduce using rule 72 (expresion -> expresion MULTI expresion .)
    MENOR_IGUAL     reduce using rule 72 (expresion -> expresion MULTI expresion .)
    AND             reduce using rule 72 (expresion -> expresion MULTI expresion .)
    OR              reduce using rule 72 (expresion -> expresion MULTI expresion .)
    PUNTO           reduce using rule 72 (expresion -> expresion MULTI expresion .)
    AS              reduce using rule 72 (expresion -> expresion MULTI expresion .)
    PRINTLN         reduce using rule 72 (expresion -> expresion MULTI expresion .)
    LET             reduce using rule 72 (expresion -> expresion MULTI expresion .)
    ID              reduce using rule 72 (expresion -> expresion MULTI expresion .)
    IF              reduce using rule 72 (expresion -> expresion MULTI expresion .)
    MATCH           reduce using rule 72 (expresion -> expresion MULTI expresion .)
    I64             reduce using rule 72 (expresion -> expresion MULTI expresion .)
    PARA            reduce using rule 72 (expresion -> expresion MULTI expresion .)
    NOT             reduce using rule 72 (expresion -> expresion MULTI expresion .)
    ENTERO          reduce using rule 72 (expresion -> expresion MULTI expresion .)
    DECIMAL         reduce using rule 72 (expresion -> expresion MULTI expresion .)
    CADENA          reduce using rule 72 (expresion -> expresion MULTI expresion .)
    CARACTER        reduce using rule 72 (expresion -> expresion MULTI expresion .)
    TRUE            reduce using rule 72 (expresion -> expresion MULTI expresion .)
    FALSE           reduce using rule 72 (expresion -> expresion MULTI expresion .)
    RETURN          reduce using rule 72 (expresion -> expresion MULTI expresion .)
    BREAK           reduce using rule 72 (expresion -> expresion MULTI expresion .)
    CONTINUE        reduce using rule 72 (expresion -> expresion MULTI expresion .)
    LOOP            reduce using rule 72 (expresion -> expresion MULTI expresion .)
    WHILE           reduce using rule 72 (expresion -> expresion MULTI expresion .)
    FN              reduce using rule 72 (expresion -> expresion MULTI expresion .)
    $end            reduce using rule 72 (expresion -> expresion MULTI expresion .)
    PARC            reduce using rule 72 (expresion -> expresion MULTI expresion .)
    LLAVA           reduce using rule 72 (expresion -> expresion MULTI expresion .)
    PT_COMA         reduce using rule 72 (expresion -> expresion MULTI expresion .)
    COMA            reduce using rule 72 (expresion -> expresion MULTI expresion .)
    LLAVC           reduce using rule 72 (expresion -> expresion MULTI expresion .)
    ARROW           reduce using rule 72 (expresion -> expresion MULTI expresion .)
    SEP_MATCH       reduce using rule 72 (expresion -> expresion MULTI expresion .)

  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! MULTI           [ shift and go to state 42 ]
  ! DIV             [ shift and go to state 43 ]
  ! MODULO          [ shift and go to state 44 ]
  ! IGUAL_IGUAL     [ shift and go to state 45 ]
  ! NO_IGUAL        [ shift and go to state 46 ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_IGUAL     [ shift and go to state 49 ]
  ! MENOR_IGUAL     [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! PUNTO           [ shift and go to state 53 ]
  ! AS              [ shift and go to state 54 ]


state 79

    (73) expresion -> expresion DIV expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    MAS             reduce using rule 73 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 73 (expresion -> expresion DIV expresion .)
    MULTI           reduce using rule 73 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 73 (expresion -> expresion DIV expresion .)
    MODULO          reduce using rule 73 (expresion -> expresion DIV expresion .)
    IGUAL_IGUAL     reduce using rule 73 (expresion -> expresion DIV expresion .)
    NO_IGUAL        reduce using rule 73 (expresion -> expresion DIV expresion .)
    MAYOR           reduce using rule 73 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 73 (expresion -> expresion DIV expresion .)
    MAYOR_IGUAL     reduce using rule 73 (expresion -> expresion DIV expresion .)
    MENOR_IGUAL     reduce using rule 73 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 73 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 73 (expresion -> expresion DIV expresion .)
    PUNTO           reduce using rule 73 (expresion -> expresion DIV expresion .)
    AS              reduce using rule 73 (expresion -> expresion DIV expresion .)
    PRINTLN         reduce using rule 73 (expresion -> expresion DIV expresion .)
    LET             reduce using rule 73 (expresion -> expresion DIV expresion .)
    ID              reduce using rule 73 (expresion -> expresion DIV expresion .)
    IF              reduce using rule 73 (expresion -> expresion DIV expresion .)
    MATCH           reduce using rule 73 (expresion -> expresion DIV expresion .)
    I64             reduce using rule 73 (expresion -> expresion DIV expresion .)
    PARA            reduce using rule 73 (expresion -> expresion DIV expresion .)
    NOT             reduce using rule 73 (expresion -> expresion DIV expresion .)
    ENTERO          reduce using rule 73 (expresion -> expresion DIV expresion .)
    DECIMAL         reduce using rule 73 (expresion -> expresion DIV expresion .)
    CADENA          reduce using rule 73 (expresion -> expresion DIV expresion .)
    CARACTER        reduce using rule 73 (expresion -> expresion DIV expresion .)
    TRUE            reduce using rule 73 (expresion -> expresion DIV expresion .)
    FALSE           reduce using rule 73 (expresion -> expresion DIV expresion .)
    RETURN          reduce using rule 73 (expresion -> expresion DIV expresion .)
    BREAK           reduce using rule 73 (expresion -> expresion DIV expresion .)
    CONTINUE        reduce using rule 73 (expresion -> expresion DIV expresion .)
    LOOP            reduce using rule 73 (expresion -> expresion DIV expresion .)
    WHILE           reduce using rule 73 (expresion -> expresion DIV expresion .)
    FN              reduce using rule 73 (expresion -> expresion DIV expresion .)
    $end            reduce using rule 73 (expresion -> expresion DIV expresion .)
    PARC            reduce using rule 73 (expresion -> expresion DIV expresion .)
    LLAVA           reduce using rule 73 (expresion -> expresion DIV expresion .)
    PT_COMA         reduce using rule 73 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 73 (expresion -> expresion DIV expresion .)
    LLAVC           reduce using rule 73 (expresion -> expresion DIV expresion .)
    ARROW           reduce using rule 73 (expresion -> expresion DIV expresion .)
    SEP_MATCH       reduce using rule 73 (expresion -> expresion DIV expresion .)

  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! MULTI           [ shift and go to state 42 ]
  ! DIV             [ shift and go to state 43 ]
  ! MODULO          [ shift and go to state 44 ]
  ! IGUAL_IGUAL     [ shift and go to state 45 ]
  ! NO_IGUAL        [ shift and go to state 46 ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_IGUAL     [ shift and go to state 49 ]
  ! MENOR_IGUAL     [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! PUNTO           [ shift and go to state 53 ]
  ! AS              [ shift and go to state 54 ]


state 80

    (74) expresion -> expresion MODULO expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    MAS             reduce using rule 74 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 74 (expresion -> expresion MODULO expresion .)
    MULTI           reduce using rule 74 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 74 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 74 (expresion -> expresion MODULO expresion .)
    IGUAL_IGUAL     reduce using rule 74 (expresion -> expresion MODULO expresion .)
    NO_IGUAL        reduce using rule 74 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 74 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 74 (expresion -> expresion MODULO expresion .)
    MAYOR_IGUAL     reduce using rule 74 (expresion -> expresion MODULO expresion .)
    MENOR_IGUAL     reduce using rule 74 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 74 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 74 (expresion -> expresion MODULO expresion .)
    PUNTO           reduce using rule 74 (expresion -> expresion MODULO expresion .)
    AS              reduce using rule 74 (expresion -> expresion MODULO expresion .)
    PRINTLN         reduce using rule 74 (expresion -> expresion MODULO expresion .)
    LET             reduce using rule 74 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 74 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 74 (expresion -> expresion MODULO expresion .)
    MATCH           reduce using rule 74 (expresion -> expresion MODULO expresion .)
    I64             reduce using rule 74 (expresion -> expresion MODULO expresion .)
    PARA            reduce using rule 74 (expresion -> expresion MODULO expresion .)
    NOT             reduce using rule 74 (expresion -> expresion MODULO expresion .)
    ENTERO          reduce using rule 74 (expresion -> expresion MODULO expresion .)
    DECIMAL         reduce using rule 74 (expresion -> expresion MODULO expresion .)
    CADENA          reduce using rule 74 (expresion -> expresion MODULO expresion .)
    CARACTER        reduce using rule 74 (expresion -> expresion MODULO expresion .)
    TRUE            reduce using rule 74 (expresion -> expresion MODULO expresion .)
    FALSE           reduce using rule 74 (expresion -> expresion MODULO expresion .)
    RETURN          reduce using rule 74 (expresion -> expresion MODULO expresion .)
    BREAK           reduce using rule 74 (expresion -> expresion MODULO expresion .)
    CONTINUE        reduce using rule 74 (expresion -> expresion MODULO expresion .)
    LOOP            reduce using rule 74 (expresion -> expresion MODULO expresion .)
    WHILE           reduce using rule 74 (expresion -> expresion MODULO expresion .)
    FN              reduce using rule 74 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 74 (expresion -> expresion MODULO expresion .)
    PARC            reduce using rule 74 (expresion -> expresion MODULO expresion .)
    LLAVA           reduce using rule 74 (expresion -> expresion MODULO expresion .)
    PT_COMA         reduce using rule 74 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 74 (expresion -> expresion MODULO expresion .)
    LLAVC           reduce using rule 74 (expresion -> expresion MODULO expresion .)
    ARROW           reduce using rule 74 (expresion -> expresion MODULO expresion .)
    SEP_MATCH       reduce using rule 74 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 40 ]
  ! MENOS           [ shift and go to state 41 ]
  ! MULTI           [ shift and go to state 42 ]
  ! DIV             [ shift and go to state 43 ]
  ! MODULO          [ shift and go to state 44 ]
  ! IGUAL_IGUAL     [ shift and go to state 45 ]
  ! NO_IGUAL        [ shift and go to state 46 ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_IGUAL     [ shift and go to state 49 ]
  ! MENOR_IGUAL     [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! PUNTO           [ shift and go to state 53 ]
  ! AS              [ shift and go to state 54 ]


state 81

    (78) expresion -> expresion IGUAL_IGUAL expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    IGUAL_IGUAL     reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    NO_IGUAL        reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    MAYOR           reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    MENOR           reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    MAYOR_IGUAL     reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    MENOR_IGUAL     reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    AND             reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    OR              reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    PUNTO           reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    AS              reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    PRINTLN         reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    LET             reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    ID              reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    IF              reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    MATCH           reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    I64             reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    PARA            reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    NOT             reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    ENTERO          reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    DECIMAL         reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    CADENA          reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    CARACTER        reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    TRUE            reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    FALSE           reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    RETURN          reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    BREAK           reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    CONTINUE        reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    LOOP            reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    WHILE           reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    FN              reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    $end            reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    PARC            reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    LLAVA           reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    PT_COMA         reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    COMA            reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    LLAVC           reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    ARROW           reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    SEP_MATCH       reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44

  ! MAS             [ reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 78 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 45 ]
  ! NO_IGUAL        [ shift and go to state 46 ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_IGUAL     [ shift and go to state 49 ]
  ! MENOR_IGUAL     [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! PUNTO           [ shift and go to state 53 ]
  ! AS              [ shift and go to state 54 ]


state 82

    (79) expresion -> expresion NO_IGUAL expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    IGUAL_IGUAL     reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    NO_IGUAL        reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    MAYOR           reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    MENOR           reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    MAYOR_IGUAL     reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    MENOR_IGUAL     reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    AND             reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    OR              reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    PUNTO           reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    AS              reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    PRINTLN         reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    LET             reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    ID              reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    IF              reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    MATCH           reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    I64             reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    PARA            reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    NOT             reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    ENTERO          reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    DECIMAL         reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    CADENA          reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    CARACTER        reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    TRUE            reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    FALSE           reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    RETURN          reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    BREAK           reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    CONTINUE        reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    LOOP            reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    WHILE           reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    FN              reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    $end            reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    PARC            reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    LLAVA           reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    PT_COMA         reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    COMA            reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    LLAVC           reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    ARROW           reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    SEP_MATCH       reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44

  ! MAS             [ reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 79 (expresion -> expresion NO_IGUAL expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 45 ]
  ! NO_IGUAL        [ shift and go to state 46 ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_IGUAL     [ shift and go to state 49 ]
  ! MENOR_IGUAL     [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! PUNTO           [ shift and go to state 53 ]
  ! AS              [ shift and go to state 54 ]


state 83

    (80) expresion -> expresion MAYOR expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    IGUAL_IGUAL     reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    NO_IGUAL        reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    MAYOR           reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    MAYOR_IGUAL     reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    MENOR_IGUAL     reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    PUNTO           reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    AS              reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    PRINTLN         reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    LET             reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    MATCH           reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    I64             reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    PARA            reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    NOT             reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    ENTERO          reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    DECIMAL         reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    CADENA          reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    CARACTER        reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    TRUE            reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    FALSE           reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    RETURN          reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    BREAK           reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    CONTINUE        reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    LOOP            reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    WHILE           reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    FN              reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    $end            reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    PARC            reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    LLAVA           reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    PT_COMA         reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    LLAVC           reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    ARROW           reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    SEP_MATCH       reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44

  ! MAS             [ reduce using rule 80 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 80 (expresion -> expresion MAYOR expresion .) ]
  ! MULTI           [ reduce using rule 80 (expresion -> expresion MAYOR expresion .) ]
  ! DIV             [ reduce using rule 80 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 80 (expresion -> expresion MAYOR expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 45 ]
  ! NO_IGUAL        [ shift and go to state 46 ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_IGUAL     [ shift and go to state 49 ]
  ! MENOR_IGUAL     [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! PUNTO           [ shift and go to state 53 ]
  ! AS              [ shift and go to state 54 ]


state 84

    (81) expresion -> expresion MENOR expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    IGUAL_IGUAL     reduce using rule 81 (expresion -> expresion MENOR expresion .)
    NO_IGUAL        reduce using rule 81 (expresion -> expresion MENOR expresion .)
    MAYOR           reduce using rule 81 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 81 (expresion -> expresion MENOR expresion .)
    MAYOR_IGUAL     reduce using rule 81 (expresion -> expresion MENOR expresion .)
    MENOR_IGUAL     reduce using rule 81 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 81 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 81 (expresion -> expresion MENOR expresion .)
    PUNTO           reduce using rule 81 (expresion -> expresion MENOR expresion .)
    AS              reduce using rule 81 (expresion -> expresion MENOR expresion .)
    PRINTLN         reduce using rule 81 (expresion -> expresion MENOR expresion .)
    LET             reduce using rule 81 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 81 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 81 (expresion -> expresion MENOR expresion .)
    MATCH           reduce using rule 81 (expresion -> expresion MENOR expresion .)
    I64             reduce using rule 81 (expresion -> expresion MENOR expresion .)
    PARA            reduce using rule 81 (expresion -> expresion MENOR expresion .)
    NOT             reduce using rule 81 (expresion -> expresion MENOR expresion .)
    ENTERO          reduce using rule 81 (expresion -> expresion MENOR expresion .)
    DECIMAL         reduce using rule 81 (expresion -> expresion MENOR expresion .)
    CADENA          reduce using rule 81 (expresion -> expresion MENOR expresion .)
    CARACTER        reduce using rule 81 (expresion -> expresion MENOR expresion .)
    TRUE            reduce using rule 81 (expresion -> expresion MENOR expresion .)
    FALSE           reduce using rule 81 (expresion -> expresion MENOR expresion .)
    RETURN          reduce using rule 81 (expresion -> expresion MENOR expresion .)
    BREAK           reduce using rule 81 (expresion -> expresion MENOR expresion .)
    CONTINUE        reduce using rule 81 (expresion -> expresion MENOR expresion .)
    LOOP            reduce using rule 81 (expresion -> expresion MENOR expresion .)
    WHILE           reduce using rule 81 (expresion -> expresion MENOR expresion .)
    FN              reduce using rule 81 (expresion -> expresion MENOR expresion .)
    $end            reduce using rule 81 (expresion -> expresion MENOR expresion .)
    PARC            reduce using rule 81 (expresion -> expresion MENOR expresion .)
    LLAVA           reduce using rule 81 (expresion -> expresion MENOR expresion .)
    PT_COMA         reduce using rule 81 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 81 (expresion -> expresion MENOR expresion .)
    LLAVC           reduce using rule 81 (expresion -> expresion MENOR expresion .)
    ARROW           reduce using rule 81 (expresion -> expresion MENOR expresion .)
    SEP_MATCH       reduce using rule 81 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44

  ! MAS             [ reduce using rule 81 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 81 (expresion -> expresion MENOR expresion .) ]
  ! MULTI           [ reduce using rule 81 (expresion -> expresion MENOR expresion .) ]
  ! DIV             [ reduce using rule 81 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 81 (expresion -> expresion MENOR expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 45 ]
  ! NO_IGUAL        [ shift and go to state 46 ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_IGUAL     [ shift and go to state 49 ]
  ! MENOR_IGUAL     [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! PUNTO           [ shift and go to state 53 ]
  ! AS              [ shift and go to state 54 ]


state 85

    (82) expresion -> expresion MAYOR_IGUAL expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    IGUAL_IGUAL     reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    NO_IGUAL        reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    MAYOR           reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    MENOR           reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    MAYOR_IGUAL     reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    MENOR_IGUAL     reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    AND             reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    OR              reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    PUNTO           reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    AS              reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    PRINTLN         reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    LET             reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    ID              reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    IF              reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    MATCH           reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    I64             reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    PARA            reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    NOT             reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    ENTERO          reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    DECIMAL         reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    CADENA          reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    CARACTER        reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    TRUE            reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    FALSE           reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    RETURN          reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    BREAK           reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    CONTINUE        reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    LOOP            reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    WHILE           reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    FN              reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    $end            reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    PARC            reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    LLAVA           reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    PT_COMA         reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    COMA            reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    LLAVC           reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    ARROW           reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    SEP_MATCH       reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44

  ! MAS             [ reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 82 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 45 ]
  ! NO_IGUAL        [ shift and go to state 46 ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_IGUAL     [ shift and go to state 49 ]
  ! MENOR_IGUAL     [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! PUNTO           [ shift and go to state 53 ]
  ! AS              [ shift and go to state 54 ]


state 86

    (83) expresion -> expresion MENOR_IGUAL expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    IGUAL_IGUAL     reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    NO_IGUAL        reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    MAYOR           reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    MENOR           reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    MAYOR_IGUAL     reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    MENOR_IGUAL     reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    AND             reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    OR              reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    PUNTO           reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    AS              reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    PRINTLN         reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    LET             reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    ID              reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    IF              reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    MATCH           reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    I64             reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    PARA            reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    NOT             reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    ENTERO          reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    DECIMAL         reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    CADENA          reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    CARACTER        reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    TRUE            reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    FALSE           reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    RETURN          reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    BREAK           reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    CONTINUE        reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    LOOP            reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    WHILE           reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    FN              reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    $end            reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    PARC            reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    LLAVA           reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    PT_COMA         reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    COMA            reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    LLAVC           reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    ARROW           reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    SEP_MATCH       reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44

  ! MAS             [ reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 83 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 45 ]
  ! NO_IGUAL        [ shift and go to state 46 ]
  ! MAYOR           [ shift and go to state 47 ]
  ! MENOR           [ shift and go to state 48 ]
  ! MAYOR_IGUAL     [ shift and go to state 49 ]
  ! MENOR_IGUAL     [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! PUNTO           [ shift and go to state 53 ]
  ! AS              [ shift and go to state 54 ]


state 87

    (84) expresion -> expresion AND expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    AND             reduce using rule 84 (expresion -> expresion AND expresion .)
    OR              reduce using rule 84 (expresion -> expresion AND expresion .)
    PUNTO           reduce using rule 84 (expresion -> expresion AND expresion .)
    AS              reduce using rule 84 (expresion -> expresion AND expresion .)
    PRINTLN         reduce using rule 84 (expresion -> expresion AND expresion .)
    LET             reduce using rule 84 (expresion -> expresion AND expresion .)
    ID              reduce using rule 84 (expresion -> expresion AND expresion .)
    IF              reduce using rule 84 (expresion -> expresion AND expresion .)
    MATCH           reduce using rule 84 (expresion -> expresion AND expresion .)
    I64             reduce using rule 84 (expresion -> expresion AND expresion .)
    PARA            reduce using rule 84 (expresion -> expresion AND expresion .)
    NOT             reduce using rule 84 (expresion -> expresion AND expresion .)
    ENTERO          reduce using rule 84 (expresion -> expresion AND expresion .)
    DECIMAL         reduce using rule 84 (expresion -> expresion AND expresion .)
    CADENA          reduce using rule 84 (expresion -> expresion AND expresion .)
    CARACTER        reduce using rule 84 (expresion -> expresion AND expresion .)
    TRUE            reduce using rule 84 (expresion -> expresion AND expresion .)
    FALSE           reduce using rule 84 (expresion -> expresion AND expresion .)
    RETURN          reduce using rule 84 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 84 (expresion -> expresion AND expresion .)
    CONTINUE        reduce using rule 84 (expresion -> expresion AND expresion .)
    LOOP            reduce using rule 84 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 84 (expresion -> expresion AND expresion .)
    FN              reduce using rule 84 (expresion -> expresion AND expresion .)
    $end            reduce using rule 84 (expresion -> expresion AND expresion .)
    PARC            reduce using rule 84 (expresion -> expresion AND expresion .)
    LLAVA           reduce using rule 84 (expresion -> expresion AND expresion .)
    PT_COMA         reduce using rule 84 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 84 (expresion -> expresion AND expresion .)
    LLAVC           reduce using rule 84 (expresion -> expresion AND expresion .)
    ARROW           reduce using rule 84 (expresion -> expresion AND expresion .)
    SEP_MATCH       reduce using rule 84 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44
    IGUAL_IGUAL     shift and go to state 45
    NO_IGUAL        shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_IGUAL     shift and go to state 49
    MENOR_IGUAL     shift and go to state 50

  ! MAS             [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! MULTI           [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! IGUAL_IGUAL     [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! NO_IGUAL        [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! MAYOR_IGUAL     [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! MENOR_IGUAL     [ reduce using rule 84 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! PUNTO           [ shift and go to state 53 ]
  ! AS              [ shift and go to state 54 ]


state 88

    (85) expresion -> expresion OR expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    OR              reduce using rule 85 (expresion -> expresion OR expresion .)
    PUNTO           reduce using rule 85 (expresion -> expresion OR expresion .)
    AS              reduce using rule 85 (expresion -> expresion OR expresion .)
    PRINTLN         reduce using rule 85 (expresion -> expresion OR expresion .)
    LET             reduce using rule 85 (expresion -> expresion OR expresion .)
    ID              reduce using rule 85 (expresion -> expresion OR expresion .)
    IF              reduce using rule 85 (expresion -> expresion OR expresion .)
    MATCH           reduce using rule 85 (expresion -> expresion OR expresion .)
    I64             reduce using rule 85 (expresion -> expresion OR expresion .)
    PARA            reduce using rule 85 (expresion -> expresion OR expresion .)
    NOT             reduce using rule 85 (expresion -> expresion OR expresion .)
    ENTERO          reduce using rule 85 (expresion -> expresion OR expresion .)
    DECIMAL         reduce using rule 85 (expresion -> expresion OR expresion .)
    CADENA          reduce using rule 85 (expresion -> expresion OR expresion .)
    CARACTER        reduce using rule 85 (expresion -> expresion OR expresion .)
    TRUE            reduce using rule 85 (expresion -> expresion OR expresion .)
    FALSE           reduce using rule 85 (expresion -> expresion OR expresion .)
    RETURN          reduce using rule 85 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 85 (expresion -> expresion OR expresion .)
    CONTINUE        reduce using rule 85 (expresion -> expresion OR expresion .)
    LOOP            reduce using rule 85 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 85 (expresion -> expresion OR expresion .)
    FN              reduce using rule 85 (expresion -> expresion OR expresion .)
    $end            reduce using rule 85 (expresion -> expresion OR expresion .)
    PARC            reduce using rule 85 (expresion -> expresion OR expresion .)
    LLAVA           reduce using rule 85 (expresion -> expresion OR expresion .)
    PT_COMA         reduce using rule 85 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 85 (expresion -> expresion OR expresion .)
    LLAVC           reduce using rule 85 (expresion -> expresion OR expresion .)
    ARROW           reduce using rule 85 (expresion -> expresion OR expresion .)
    SEP_MATCH       reduce using rule 85 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44
    IGUAL_IGUAL     shift and go to state 45
    NO_IGUAL        shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_IGUAL     shift and go to state 49
    MENOR_IGUAL     shift and go to state 50
    AND             shift and go to state 51

  ! MAS             [ reduce using rule 85 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 85 (expresion -> expresion OR expresion .) ]
  ! MULTI           [ reduce using rule 85 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 85 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 85 (expresion -> expresion OR expresion .) ]
  ! IGUAL_IGUAL     [ reduce using rule 85 (expresion -> expresion OR expresion .) ]
  ! NO_IGUAL        [ reduce using rule 85 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 85 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 85 (expresion -> expresion OR expresion .) ]
  ! MAYOR_IGUAL     [ reduce using rule 85 (expresion -> expresion OR expresion .) ]
  ! MENOR_IGUAL     [ reduce using rule 85 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 85 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 52 ]
  ! PUNTO           [ shift and go to state 53 ]
  ! AS              [ shift and go to state 54 ]


state 89

    (94) expresion -> expresion PUNTO TO_OWNED . PARA PARC

    PARA            shift and go to state 116


state 90

    (95) expresion -> expresion PUNTO TO_STRING . PARA PARC

    PARA            shift and go to state 117


state 91

    (96) expresion -> expresion PUNTO ABSOLUTO . PARA PARC

    PARA            shift and go to state 118


state 92

    (97) expresion -> expresion PUNTO RAIZ . PARA PARC

    PARA            shift and go to state 119


state 93

    (98) expresion -> expresion AS F64 .

    MAS             reduce using rule 98 (expresion -> expresion AS F64 .)
    MENOS           reduce using rule 98 (expresion -> expresion AS F64 .)
    MULTI           reduce using rule 98 (expresion -> expresion AS F64 .)
    DIV             reduce using rule 98 (expresion -> expresion AS F64 .)
    MODULO          reduce using rule 98 (expresion -> expresion AS F64 .)
    IGUAL_IGUAL     reduce using rule 98 (expresion -> expresion AS F64 .)
    NO_IGUAL        reduce using rule 98 (expresion -> expresion AS F64 .)
    MAYOR           reduce using rule 98 (expresion -> expresion AS F64 .)
    MENOR           reduce using rule 98 (expresion -> expresion AS F64 .)
    MAYOR_IGUAL     reduce using rule 98 (expresion -> expresion AS F64 .)
    MENOR_IGUAL     reduce using rule 98 (expresion -> expresion AS F64 .)
    AND             reduce using rule 98 (expresion -> expresion AS F64 .)
    OR              reduce using rule 98 (expresion -> expresion AS F64 .)
    PUNTO           reduce using rule 98 (expresion -> expresion AS F64 .)
    AS              reduce using rule 98 (expresion -> expresion AS F64 .)
    PRINTLN         reduce using rule 98 (expresion -> expresion AS F64 .)
    LET             reduce using rule 98 (expresion -> expresion AS F64 .)
    ID              reduce using rule 98 (expresion -> expresion AS F64 .)
    IF              reduce using rule 98 (expresion -> expresion AS F64 .)
    MATCH           reduce using rule 98 (expresion -> expresion AS F64 .)
    I64             reduce using rule 98 (expresion -> expresion AS F64 .)
    PARA            reduce using rule 98 (expresion -> expresion AS F64 .)
    NOT             reduce using rule 98 (expresion -> expresion AS F64 .)
    ENTERO          reduce using rule 98 (expresion -> expresion AS F64 .)
    DECIMAL         reduce using rule 98 (expresion -> expresion AS F64 .)
    CADENA          reduce using rule 98 (expresion -> expresion AS F64 .)
    CARACTER        reduce using rule 98 (expresion -> expresion AS F64 .)
    TRUE            reduce using rule 98 (expresion -> expresion AS F64 .)
    FALSE           reduce using rule 98 (expresion -> expresion AS F64 .)
    RETURN          reduce using rule 98 (expresion -> expresion AS F64 .)
    BREAK           reduce using rule 98 (expresion -> expresion AS F64 .)
    CONTINUE        reduce using rule 98 (expresion -> expresion AS F64 .)
    LOOP            reduce using rule 98 (expresion -> expresion AS F64 .)
    WHILE           reduce using rule 98 (expresion -> expresion AS F64 .)
    FN              reduce using rule 98 (expresion -> expresion AS F64 .)
    $end            reduce using rule 98 (expresion -> expresion AS F64 .)
    PARC            reduce using rule 98 (expresion -> expresion AS F64 .)
    LLAVA           reduce using rule 98 (expresion -> expresion AS F64 .)
    PT_COMA         reduce using rule 98 (expresion -> expresion AS F64 .)
    COMA            reduce using rule 98 (expresion -> expresion AS F64 .)
    LLAVC           reduce using rule 98 (expresion -> expresion AS F64 .)
    ARROW           reduce using rule 98 (expresion -> expresion AS F64 .)
    SEP_MATCH       reduce using rule 98 (expresion -> expresion AS F64 .)


state 94

    (99) expresion -> expresion AS I64 .

    MAS             reduce using rule 99 (expresion -> expresion AS I64 .)
    MENOS           reduce using rule 99 (expresion -> expresion AS I64 .)
    MULTI           reduce using rule 99 (expresion -> expresion AS I64 .)
    DIV             reduce using rule 99 (expresion -> expresion AS I64 .)
    MODULO          reduce using rule 99 (expresion -> expresion AS I64 .)
    IGUAL_IGUAL     reduce using rule 99 (expresion -> expresion AS I64 .)
    NO_IGUAL        reduce using rule 99 (expresion -> expresion AS I64 .)
    MAYOR           reduce using rule 99 (expresion -> expresion AS I64 .)
    MENOR           reduce using rule 99 (expresion -> expresion AS I64 .)
    MAYOR_IGUAL     reduce using rule 99 (expresion -> expresion AS I64 .)
    MENOR_IGUAL     reduce using rule 99 (expresion -> expresion AS I64 .)
    AND             reduce using rule 99 (expresion -> expresion AS I64 .)
    OR              reduce using rule 99 (expresion -> expresion AS I64 .)
    PUNTO           reduce using rule 99 (expresion -> expresion AS I64 .)
    AS              reduce using rule 99 (expresion -> expresion AS I64 .)
    PRINTLN         reduce using rule 99 (expresion -> expresion AS I64 .)
    LET             reduce using rule 99 (expresion -> expresion AS I64 .)
    ID              reduce using rule 99 (expresion -> expresion AS I64 .)
    IF              reduce using rule 99 (expresion -> expresion AS I64 .)
    MATCH           reduce using rule 99 (expresion -> expresion AS I64 .)
    I64             reduce using rule 99 (expresion -> expresion AS I64 .)
    PARA            reduce using rule 99 (expresion -> expresion AS I64 .)
    NOT             reduce using rule 99 (expresion -> expresion AS I64 .)
    ENTERO          reduce using rule 99 (expresion -> expresion AS I64 .)
    DECIMAL         reduce using rule 99 (expresion -> expresion AS I64 .)
    CADENA          reduce using rule 99 (expresion -> expresion AS I64 .)
    CARACTER        reduce using rule 99 (expresion -> expresion AS I64 .)
    TRUE            reduce using rule 99 (expresion -> expresion AS I64 .)
    FALSE           reduce using rule 99 (expresion -> expresion AS I64 .)
    RETURN          reduce using rule 99 (expresion -> expresion AS I64 .)
    BREAK           reduce using rule 99 (expresion -> expresion AS I64 .)
    CONTINUE        reduce using rule 99 (expresion -> expresion AS I64 .)
    LOOP            reduce using rule 99 (expresion -> expresion AS I64 .)
    WHILE           reduce using rule 99 (expresion -> expresion AS I64 .)
    FN              reduce using rule 99 (expresion -> expresion AS I64 .)
    $end            reduce using rule 99 (expresion -> expresion AS I64 .)
    PARC            reduce using rule 99 (expresion -> expresion AS I64 .)
    LLAVA           reduce using rule 99 (expresion -> expresion AS I64 .)
    PT_COMA         reduce using rule 99 (expresion -> expresion AS I64 .)
    COMA            reduce using rule 99 (expresion -> expresion AS I64 .)
    LLAVC           reduce using rule 99 (expresion -> expresion AS I64 .)
    ARROW           reduce using rule 99 (expresion -> expresion AS I64 .)
    SEP_MATCH       reduce using rule 99 (expresion -> expresion AS I64 .)


state 95

    (15) prints -> PRINTLN NOT PARA . CADENA COMA list_exp PARC
    (16) prints -> PRINTLN NOT PARA . CADENA PARC

    CADENA          shift and go to state 120


state 96

    (76) expresion -> PARA expresion PARC .

    MAS             reduce using rule 76 (expresion -> PARA expresion PARC .)
    MENOS           reduce using rule 76 (expresion -> PARA expresion PARC .)
    MULTI           reduce using rule 76 (expresion -> PARA expresion PARC .)
    DIV             reduce using rule 76 (expresion -> PARA expresion PARC .)
    MODULO          reduce using rule 76 (expresion -> PARA expresion PARC .)
    IGUAL_IGUAL     reduce using rule 76 (expresion -> PARA expresion PARC .)
    NO_IGUAL        reduce using rule 76 (expresion -> PARA expresion PARC .)
    MAYOR           reduce using rule 76 (expresion -> PARA expresion PARC .)
    MENOR           reduce using rule 76 (expresion -> PARA expresion PARC .)
    MAYOR_IGUAL     reduce using rule 76 (expresion -> PARA expresion PARC .)
    MENOR_IGUAL     reduce using rule 76 (expresion -> PARA expresion PARC .)
    AND             reduce using rule 76 (expresion -> PARA expresion PARC .)
    OR              reduce using rule 76 (expresion -> PARA expresion PARC .)
    PUNTO           reduce using rule 76 (expresion -> PARA expresion PARC .)
    AS              reduce using rule 76 (expresion -> PARA expresion PARC .)
    PRINTLN         reduce using rule 76 (expresion -> PARA expresion PARC .)
    LET             reduce using rule 76 (expresion -> PARA expresion PARC .)
    ID              reduce using rule 76 (expresion -> PARA expresion PARC .)
    IF              reduce using rule 76 (expresion -> PARA expresion PARC .)
    MATCH           reduce using rule 76 (expresion -> PARA expresion PARC .)
    I64             reduce using rule 76 (expresion -> PARA expresion PARC .)
    PARA            reduce using rule 76 (expresion -> PARA expresion PARC .)
    NOT             reduce using rule 76 (expresion -> PARA expresion PARC .)
    ENTERO          reduce using rule 76 (expresion -> PARA expresion PARC .)
    DECIMAL         reduce using rule 76 (expresion -> PARA expresion PARC .)
    CADENA          reduce using rule 76 (expresion -> PARA expresion PARC .)
    CARACTER        reduce using rule 76 (expresion -> PARA expresion PARC .)
    TRUE            reduce using rule 76 (expresion -> PARA expresion PARC .)
    FALSE           reduce using rule 76 (expresion -> PARA expresion PARC .)
    RETURN          reduce using rule 76 (expresion -> PARA expresion PARC .)
    BREAK           reduce using rule 76 (expresion -> PARA expresion PARC .)
    CONTINUE        reduce using rule 76 (expresion -> PARA expresion PARC .)
    LOOP            reduce using rule 76 (expresion -> PARA expresion PARC .)
    WHILE           reduce using rule 76 (expresion -> PARA expresion PARC .)
    FN              reduce using rule 76 (expresion -> PARA expresion PARC .)
    $end            reduce using rule 76 (expresion -> PARA expresion PARC .)
    PARC            reduce using rule 76 (expresion -> PARA expresion PARC .)
    LLAVA           reduce using rule 76 (expresion -> PARA expresion PARC .)
    PT_COMA         reduce using rule 76 (expresion -> PARA expresion PARC .)
    COMA            reduce using rule 76 (expresion -> PARA expresion PARC .)
    LLAVC           reduce using rule 76 (expresion -> PARA expresion PARC .)
    ARROW           reduce using rule 76 (expresion -> PARA expresion PARC .)
    SEP_MATCH       reduce using rule 76 (expresion -> PARA expresion PARC .)


state 97

    (19) declaracion -> LET MUT ID . DOS_PT tipo IGUAL valores
    (20) declaracion -> LET MUT ID . DOS_PT tipo
    (21) declaracion -> LET MUT ID . IGUAL valores
    (22) declaracion -> LET MUT ID .

    DOS_PT          shift and go to state 121
    IGUAL           shift and go to state 122
    PT_COMA         reduce using rule 22 (declaracion -> LET MUT ID .)


state 98

    (23) declaracion -> LET ID DOS_PT . tipo IGUAL valores
    (24) declaracion -> LET ID DOS_PT . tipo
    (63) tipo -> . I64
    (64) tipo -> . F64
    (65) tipo -> . BOOL
    (66) tipo -> . STRING
    (67) tipo -> . STR
    (68) tipo -> . CHAR

    I64             shift and go to state 124
    F64             shift and go to state 125
    BOOL            shift and go to state 126
    STRING          shift and go to state 127
    STR             shift and go to state 128
    CHAR            shift and go to state 129

    tipo                           shift and go to state 123

state 99

    (25) declaracion -> LET ID IGUAL . valores
    (28) valores -> . expresion
    (29) valores -> . sent_if
    (30) valores -> . match
    (31) valores -> . loop
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (32) sent_if -> . IF expresion statement sent_else
    (36) match -> . MATCH expresion casos_match
    (51) loop -> . LOOP statement
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 34

    valores                        shift and go to state 130
    expresion                      shift and go to state 101
    sent_if                        shift and go to state 102
    match                          shift and go to state 103
    loop                           shift and go to state 104
    llamado                        shift and go to state 25

state 100

    (27) declaracion -> ID IGUAL valores .

    PT_COMA         reduce using rule 27 (declaracion -> ID IGUAL valores .)


state 101

    (28) valores -> expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    PT_COMA         reduce using rule 28 (valores -> expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44
    IGUAL_IGUAL     shift and go to state 45
    NO_IGUAL        shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_IGUAL     shift and go to state 49
    MENOR_IGUAL     shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    PUNTO           shift and go to state 53
    AS              shift and go to state 54


state 102

    (29) valores -> sent_if .

    PT_COMA         reduce using rule 29 (valores -> sent_if .)


state 103

    (30) valores -> match .

    PT_COMA         reduce using rule 30 (valores -> match .)


state 104

    (31) valores -> loop .

    PT_COMA         reduce using rule 31 (valores -> loop .)


state 105

    (59) llamado -> ID PARA list_exp . PARC
    (17) list_exp -> list_exp . COMA expresion

    PARC            shift and go to state 131
    COMA            shift and go to state 132


state 106

    (60) llamado -> ID PARA PARC .

    MAS             reduce using rule 60 (llamado -> ID PARA PARC .)
    MENOS           reduce using rule 60 (llamado -> ID PARA PARC .)
    MULTI           reduce using rule 60 (llamado -> ID PARA PARC .)
    DIV             reduce using rule 60 (llamado -> ID PARA PARC .)
    MODULO          reduce using rule 60 (llamado -> ID PARA PARC .)
    IGUAL_IGUAL     reduce using rule 60 (llamado -> ID PARA PARC .)
    NO_IGUAL        reduce using rule 60 (llamado -> ID PARA PARC .)
    MAYOR           reduce using rule 60 (llamado -> ID PARA PARC .)
    MENOR           reduce using rule 60 (llamado -> ID PARA PARC .)
    MAYOR_IGUAL     reduce using rule 60 (llamado -> ID PARA PARC .)
    MENOR_IGUAL     reduce using rule 60 (llamado -> ID PARA PARC .)
    AND             reduce using rule 60 (llamado -> ID PARA PARC .)
    OR              reduce using rule 60 (llamado -> ID PARA PARC .)
    PUNTO           reduce using rule 60 (llamado -> ID PARA PARC .)
    AS              reduce using rule 60 (llamado -> ID PARA PARC .)
    PRINTLN         reduce using rule 60 (llamado -> ID PARA PARC .)
    LET             reduce using rule 60 (llamado -> ID PARA PARC .)
    ID              reduce using rule 60 (llamado -> ID PARA PARC .)
    IF              reduce using rule 60 (llamado -> ID PARA PARC .)
    MATCH           reduce using rule 60 (llamado -> ID PARA PARC .)
    I64             reduce using rule 60 (llamado -> ID PARA PARC .)
    PARA            reduce using rule 60 (llamado -> ID PARA PARC .)
    NOT             reduce using rule 60 (llamado -> ID PARA PARC .)
    ENTERO          reduce using rule 60 (llamado -> ID PARA PARC .)
    DECIMAL         reduce using rule 60 (llamado -> ID PARA PARC .)
    CADENA          reduce using rule 60 (llamado -> ID PARA PARC .)
    CARACTER        reduce using rule 60 (llamado -> ID PARA PARC .)
    TRUE            reduce using rule 60 (llamado -> ID PARA PARC .)
    FALSE           reduce using rule 60 (llamado -> ID PARA PARC .)
    RETURN          reduce using rule 60 (llamado -> ID PARA PARC .)
    BREAK           reduce using rule 60 (llamado -> ID PARA PARC .)
    CONTINUE        reduce using rule 60 (llamado -> ID PARA PARC .)
    LOOP            reduce using rule 60 (llamado -> ID PARA PARC .)
    WHILE           reduce using rule 60 (llamado -> ID PARA PARC .)
    FN              reduce using rule 60 (llamado -> ID PARA PARC .)
    $end            reduce using rule 60 (llamado -> ID PARA PARC .)
    PARC            reduce using rule 60 (llamado -> ID PARA PARC .)
    LLAVA           reduce using rule 60 (llamado -> ID PARA PARC .)
    PT_COMA         reduce using rule 60 (llamado -> ID PARA PARC .)
    COMA            reduce using rule 60 (llamado -> ID PARA PARC .)
    LLAVC           reduce using rule 60 (llamado -> ID PARA PARC .)
    ARROW           reduce using rule 60 (llamado -> ID PARA PARC .)
    SEP_MATCH       reduce using rule 60 (llamado -> ID PARA PARC .)


state 107

    (18) list_exp -> expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    PARC            reduce using rule 18 (list_exp -> expresion .)
    COMA            reduce using rule 18 (list_exp -> expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44
    IGUAL_IGUAL     shift and go to state 45
    NO_IGUAL        shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_IGUAL     shift and go to state 49
    MENOR_IGUAL     shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    PUNTO           shift and go to state 53
    AS              shift and go to state 54


state 108

    (32) sent_if -> IF expresion statement . sent_else
    (33) sent_else -> . ELSE statement
    (34) sent_else -> . ELSE sent_if
    (35) sent_else -> .

    ELSE            shift and go to state 134
    PRINTLN         reduce using rule 35 (sent_else -> .)
    LET             reduce using rule 35 (sent_else -> .)
    ID              reduce using rule 35 (sent_else -> .)
    IF              reduce using rule 35 (sent_else -> .)
    MATCH           reduce using rule 35 (sent_else -> .)
    MENOS           reduce using rule 35 (sent_else -> .)
    I64             reduce using rule 35 (sent_else -> .)
    PARA            reduce using rule 35 (sent_else -> .)
    NOT             reduce using rule 35 (sent_else -> .)
    ENTERO          reduce using rule 35 (sent_else -> .)
    DECIMAL         reduce using rule 35 (sent_else -> .)
    CADENA          reduce using rule 35 (sent_else -> .)
    CARACTER        reduce using rule 35 (sent_else -> .)
    TRUE            reduce using rule 35 (sent_else -> .)
    FALSE           reduce using rule 35 (sent_else -> .)
    RETURN          reduce using rule 35 (sent_else -> .)
    BREAK           reduce using rule 35 (sent_else -> .)
    CONTINUE        reduce using rule 35 (sent_else -> .)
    LOOP            reduce using rule 35 (sent_else -> .)
    WHILE           reduce using rule 35 (sent_else -> .)
    FN              reduce using rule 35 (sent_else -> .)
    $end            reduce using rule 35 (sent_else -> .)
    PT_COMA         reduce using rule 35 (sent_else -> .)
    LLAVC           reduce using rule 35 (sent_else -> .)
    COMA            reduce using rule 35 (sent_else -> .)

    sent_else                      shift and go to state 133

state 109

    (36) match -> MATCH expresion casos_match .

    PRINTLN         reduce using rule 36 (match -> MATCH expresion casos_match .)
    LET             reduce using rule 36 (match -> MATCH expresion casos_match .)
    ID              reduce using rule 36 (match -> MATCH expresion casos_match .)
    IF              reduce using rule 36 (match -> MATCH expresion casos_match .)
    MATCH           reduce using rule 36 (match -> MATCH expresion casos_match .)
    MENOS           reduce using rule 36 (match -> MATCH expresion casos_match .)
    I64             reduce using rule 36 (match -> MATCH expresion casos_match .)
    PARA            reduce using rule 36 (match -> MATCH expresion casos_match .)
    NOT             reduce using rule 36 (match -> MATCH expresion casos_match .)
    ENTERO          reduce using rule 36 (match -> MATCH expresion casos_match .)
    DECIMAL         reduce using rule 36 (match -> MATCH expresion casos_match .)
    CADENA          reduce using rule 36 (match -> MATCH expresion casos_match .)
    CARACTER        reduce using rule 36 (match -> MATCH expresion casos_match .)
    TRUE            reduce using rule 36 (match -> MATCH expresion casos_match .)
    FALSE           reduce using rule 36 (match -> MATCH expresion casos_match .)
    RETURN          reduce using rule 36 (match -> MATCH expresion casos_match .)
    BREAK           reduce using rule 36 (match -> MATCH expresion casos_match .)
    CONTINUE        reduce using rule 36 (match -> MATCH expresion casos_match .)
    LOOP            reduce using rule 36 (match -> MATCH expresion casos_match .)
    WHILE           reduce using rule 36 (match -> MATCH expresion casos_match .)
    FN              reduce using rule 36 (match -> MATCH expresion casos_match .)
    $end            reduce using rule 36 (match -> MATCH expresion casos_match .)
    PT_COMA         reduce using rule 36 (match -> MATCH expresion casos_match .)
    LLAVC           reduce using rule 36 (match -> MATCH expresion casos_match .)
    COMA            reduce using rule 36 (match -> MATCH expresion casos_match .)


state 110

    (37) casos_match -> LLAVA . lista_casos default LLAVC
    (38) lista_casos -> . lista_casos lista_expresiones ARROW statement COMA
    (39) lista_casos -> . lista_casos lista_expresiones ARROW instruccion COMA
    (40) lista_casos -> . lista_expresiones ARROW statement COMA
    (41) lista_casos -> . lista_expresiones ARROW instruccion COMA
    (42) lista_expresiones -> . lista_expresiones SEP_MATCH expresion
    (43) lista_expresiones -> . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    lista_casos                    shift and go to state 135
    lista_expresiones              shift and go to state 136
    expresion                      shift and go to state 137
    llamado                        shift and go to state 25

state 111

    (75) expresion -> I64 DOS_PT DOS_PT . POW PARA expresion COMA expresion PARC

    POW             shift and go to state 138


state 112

    (61) statement -> LLAVA instrucciones . LLAVC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) instruccion -> . loop
    (13) instruccion -> . while
    (14) instruccion -> . funcion
    (15) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (16) prints -> . PRINTLN NOT PARA CADENA PARC
    (19) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (20) declaracion -> . LET MUT ID DOS_PT tipo
    (21) declaracion -> . LET MUT ID IGUAL valores
    (22) declaracion -> . LET MUT ID
    (23) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (24) declaracion -> . LET ID DOS_PT tipo
    (25) declaracion -> . LET ID IGUAL valores
    (26) declaracion -> . LET ID
    (27) declaracion -> . ID IGUAL valores
    (32) sent_if -> . IF expresion statement sent_else
    (36) match -> . MATCH expresion casos_match
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (46) return -> . RETURN
    (47) return -> . RETURN expresion
    (48) break -> . BREAK
    (49) break -> . BREAK expresion
    (50) continue -> . CONTINUE
    (51) loop -> . LOOP statement
    (52) while -> . WHILE expresion statement
    (53) funcion -> . FN ID PARA lista_parametros PARC statement
    (54) funcion -> . FN ID PARA lista_parametros PARC ARRFUNC tipo statement
    (55) funcion -> . FN ID PARA PARC statement
    (56) funcion -> . FN ID PARA PARC ARRFUNC statement
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    LLAVC           shift and go to state 139
    PRINTLN         shift and go to state 15
    LET             shift and go to state 19
    ID              shift and go to state 20
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    RETURN          shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    LOOP            shift and go to state 34
    WHILE           shift and go to state 35
    FN              shift and go to state 36

    instruccion                    shift and go to state 37
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    funcion                        shift and go to state 14
    llamado                        shift and go to state 25

state 113

    (62) statement -> LLAVA LLAVC .

    PRINTLN         reduce using rule 62 (statement -> LLAVA LLAVC .)
    LET             reduce using rule 62 (statement -> LLAVA LLAVC .)
    ID              reduce using rule 62 (statement -> LLAVA LLAVC .)
    IF              reduce using rule 62 (statement -> LLAVA LLAVC .)
    MATCH           reduce using rule 62 (statement -> LLAVA LLAVC .)
    MENOS           reduce using rule 62 (statement -> LLAVA LLAVC .)
    I64             reduce using rule 62 (statement -> LLAVA LLAVC .)
    PARA            reduce using rule 62 (statement -> LLAVA LLAVC .)
    NOT             reduce using rule 62 (statement -> LLAVA LLAVC .)
    ENTERO          reduce using rule 62 (statement -> LLAVA LLAVC .)
    DECIMAL         reduce using rule 62 (statement -> LLAVA LLAVC .)
    CADENA          reduce using rule 62 (statement -> LLAVA LLAVC .)
    CARACTER        reduce using rule 62 (statement -> LLAVA LLAVC .)
    TRUE            reduce using rule 62 (statement -> LLAVA LLAVC .)
    FALSE           reduce using rule 62 (statement -> LLAVA LLAVC .)
    RETURN          reduce using rule 62 (statement -> LLAVA LLAVC .)
    BREAK           reduce using rule 62 (statement -> LLAVA LLAVC .)
    CONTINUE        reduce using rule 62 (statement -> LLAVA LLAVC .)
    LOOP            reduce using rule 62 (statement -> LLAVA LLAVC .)
    WHILE           reduce using rule 62 (statement -> LLAVA LLAVC .)
    FN              reduce using rule 62 (statement -> LLAVA LLAVC .)
    $end            reduce using rule 62 (statement -> LLAVA LLAVC .)
    PT_COMA         reduce using rule 62 (statement -> LLAVA LLAVC .)
    LLAVC           reduce using rule 62 (statement -> LLAVA LLAVC .)
    COMA            reduce using rule 62 (statement -> LLAVA LLAVC .)
    ELSE            reduce using rule 62 (statement -> LLAVA LLAVC .)


state 114

    (52) while -> WHILE expresion statement .

    PRINTLN         reduce using rule 52 (while -> WHILE expresion statement .)
    LET             reduce using rule 52 (while -> WHILE expresion statement .)
    ID              reduce using rule 52 (while -> WHILE expresion statement .)
    IF              reduce using rule 52 (while -> WHILE expresion statement .)
    MATCH           reduce using rule 52 (while -> WHILE expresion statement .)
    MENOS           reduce using rule 52 (while -> WHILE expresion statement .)
    I64             reduce using rule 52 (while -> WHILE expresion statement .)
    PARA            reduce using rule 52 (while -> WHILE expresion statement .)
    NOT             reduce using rule 52 (while -> WHILE expresion statement .)
    ENTERO          reduce using rule 52 (while -> WHILE expresion statement .)
    DECIMAL         reduce using rule 52 (while -> WHILE expresion statement .)
    CADENA          reduce using rule 52 (while -> WHILE expresion statement .)
    CARACTER        reduce using rule 52 (while -> WHILE expresion statement .)
    TRUE            reduce using rule 52 (while -> WHILE expresion statement .)
    FALSE           reduce using rule 52 (while -> WHILE expresion statement .)
    RETURN          reduce using rule 52 (while -> WHILE expresion statement .)
    BREAK           reduce using rule 52 (while -> WHILE expresion statement .)
    CONTINUE        reduce using rule 52 (while -> WHILE expresion statement .)
    LOOP            reduce using rule 52 (while -> WHILE expresion statement .)
    WHILE           reduce using rule 52 (while -> WHILE expresion statement .)
    FN              reduce using rule 52 (while -> WHILE expresion statement .)
    $end            reduce using rule 52 (while -> WHILE expresion statement .)
    LLAVC           reduce using rule 52 (while -> WHILE expresion statement .)
    COMA            reduce using rule 52 (while -> WHILE expresion statement .)


state 115

    (53) funcion -> FN ID PARA . lista_parametros PARC statement
    (54) funcion -> FN ID PARA . lista_parametros PARC ARRFUNC tipo statement
    (55) funcion -> FN ID PARA . PARC statement
    (56) funcion -> FN ID PARA . PARC ARRFUNC statement
    (57) lista_parametros -> . lista_parametros COMA ID DOS_PT tipo
    (58) lista_parametros -> . ID DOS_PT tipo

    PARC            shift and go to state 142
    ID              shift and go to state 140

    lista_parametros               shift and go to state 141

state 116

    (94) expresion -> expresion PUNTO TO_OWNED PARA . PARC

    PARC            shift and go to state 143


state 117

    (95) expresion -> expresion PUNTO TO_STRING PARA . PARC

    PARC            shift and go to state 144


state 118

    (96) expresion -> expresion PUNTO ABSOLUTO PARA . PARC

    PARC            shift and go to state 145


state 119

    (97) expresion -> expresion PUNTO RAIZ PARA . PARC

    PARC            shift and go to state 146


state 120

    (15) prints -> PRINTLN NOT PARA CADENA . COMA list_exp PARC
    (16) prints -> PRINTLN NOT PARA CADENA . PARC

    COMA            shift and go to state 147
    PARC            shift and go to state 148


state 121

    (19) declaracion -> LET MUT ID DOS_PT . tipo IGUAL valores
    (20) declaracion -> LET MUT ID DOS_PT . tipo
    (63) tipo -> . I64
    (64) tipo -> . F64
    (65) tipo -> . BOOL
    (66) tipo -> . STRING
    (67) tipo -> . STR
    (68) tipo -> . CHAR

    I64             shift and go to state 124
    F64             shift and go to state 125
    BOOL            shift and go to state 126
    STRING          shift and go to state 127
    STR             shift and go to state 128
    CHAR            shift and go to state 129

    tipo                           shift and go to state 149

state 122

    (21) declaracion -> LET MUT ID IGUAL . valores
    (28) valores -> . expresion
    (29) valores -> . sent_if
    (30) valores -> . match
    (31) valores -> . loop
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (32) sent_if -> . IF expresion statement sent_else
    (36) match -> . MATCH expresion casos_match
    (51) loop -> . LOOP statement
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 34

    valores                        shift and go to state 150
    expresion                      shift and go to state 101
    sent_if                        shift and go to state 102
    match                          shift and go to state 103
    loop                           shift and go to state 104
    llamado                        shift and go to state 25

state 123

    (23) declaracion -> LET ID DOS_PT tipo . IGUAL valores
    (24) declaracion -> LET ID DOS_PT tipo .

    IGUAL           shift and go to state 151
    PT_COMA         reduce using rule 24 (declaracion -> LET ID DOS_PT tipo .)


state 124

    (63) tipo -> I64 .

    IGUAL           reduce using rule 63 (tipo -> I64 .)
    PT_COMA         reduce using rule 63 (tipo -> I64 .)
    PARC            reduce using rule 63 (tipo -> I64 .)
    COMA            reduce using rule 63 (tipo -> I64 .)
    LLAVA           reduce using rule 63 (tipo -> I64 .)


state 125

    (64) tipo -> F64 .

    IGUAL           reduce using rule 64 (tipo -> F64 .)
    PT_COMA         reduce using rule 64 (tipo -> F64 .)
    PARC            reduce using rule 64 (tipo -> F64 .)
    COMA            reduce using rule 64 (tipo -> F64 .)
    LLAVA           reduce using rule 64 (tipo -> F64 .)


state 126

    (65) tipo -> BOOL .

    IGUAL           reduce using rule 65 (tipo -> BOOL .)
    PT_COMA         reduce using rule 65 (tipo -> BOOL .)
    PARC            reduce using rule 65 (tipo -> BOOL .)
    COMA            reduce using rule 65 (tipo -> BOOL .)
    LLAVA           reduce using rule 65 (tipo -> BOOL .)


state 127

    (66) tipo -> STRING .

    IGUAL           reduce using rule 66 (tipo -> STRING .)
    PT_COMA         reduce using rule 66 (tipo -> STRING .)
    PARC            reduce using rule 66 (tipo -> STRING .)
    COMA            reduce using rule 66 (tipo -> STRING .)
    LLAVA           reduce using rule 66 (tipo -> STRING .)


state 128

    (67) tipo -> STR .

    IGUAL           reduce using rule 67 (tipo -> STR .)
    PT_COMA         reduce using rule 67 (tipo -> STR .)
    PARC            reduce using rule 67 (tipo -> STR .)
    COMA            reduce using rule 67 (tipo -> STR .)
    LLAVA           reduce using rule 67 (tipo -> STR .)


state 129

    (68) tipo -> CHAR .

    IGUAL           reduce using rule 68 (tipo -> CHAR .)
    PT_COMA         reduce using rule 68 (tipo -> CHAR .)
    PARC            reduce using rule 68 (tipo -> CHAR .)
    COMA            reduce using rule 68 (tipo -> CHAR .)
    LLAVA           reduce using rule 68 (tipo -> CHAR .)


state 130

    (25) declaracion -> LET ID IGUAL valores .

    PT_COMA         reduce using rule 25 (declaracion -> LET ID IGUAL valores .)


state 131

    (59) llamado -> ID PARA list_exp PARC .

    MAS             reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    MENOS           reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    MULTI           reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    DIV             reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    MODULO          reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    IGUAL_IGUAL     reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    NO_IGUAL        reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    MAYOR           reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    MENOR           reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    MAYOR_IGUAL     reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    MENOR_IGUAL     reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    AND             reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    OR              reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    PUNTO           reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    AS              reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    PRINTLN         reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    LET             reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    ID              reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    IF              reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    MATCH           reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    I64             reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    PARA            reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    NOT             reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    ENTERO          reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    DECIMAL         reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    CADENA          reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    CARACTER        reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    TRUE            reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    FALSE           reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    RETURN          reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    BREAK           reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    CONTINUE        reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    LOOP            reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    WHILE           reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    FN              reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    $end            reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    PARC            reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    LLAVA           reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    PT_COMA         reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    COMA            reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    LLAVC           reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    ARROW           reduce using rule 59 (llamado -> ID PARA list_exp PARC .)
    SEP_MATCH       reduce using rule 59 (llamado -> ID PARA list_exp PARC .)


state 132

    (17) list_exp -> list_exp COMA . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 152
    llamado                        shift and go to state 25

state 133

    (32) sent_if -> IF expresion statement sent_else .

    PRINTLN         reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    LET             reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    ID              reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    IF              reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    MATCH           reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    MENOS           reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    I64             reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    PARA            reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    NOT             reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    ENTERO          reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    DECIMAL         reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    CADENA          reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    CARACTER        reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    TRUE            reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    FALSE           reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    RETURN          reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    BREAK           reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    CONTINUE        reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    LOOP            reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    WHILE           reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    FN              reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    $end            reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    PT_COMA         reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    LLAVC           reduce using rule 32 (sent_if -> IF expresion statement sent_else .)
    COMA            reduce using rule 32 (sent_if -> IF expresion statement sent_else .)


state 134

    (33) sent_else -> ELSE . statement
    (34) sent_else -> ELSE . sent_if
    (61) statement -> . LLAVA instrucciones LLAVC
    (62) statement -> . LLAVA LLAVC
    (32) sent_if -> . IF expresion statement sent_else

    LLAVA           shift and go to state 73
    IF              shift and go to state 21

    statement                      shift and go to state 153
    sent_if                        shift and go to state 154

state 135

    (37) casos_match -> LLAVA lista_casos . default LLAVC
    (38) lista_casos -> lista_casos . lista_expresiones ARROW statement COMA
    (39) lista_casos -> lista_casos . lista_expresiones ARROW instruccion COMA
    (44) default -> . GUION_B ARROW statement COMA
    (45) default -> . GUION_B ARROW instruccion COMA
    (42) lista_expresiones -> . lista_expresiones SEP_MATCH expresion
    (43) lista_expresiones -> . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    GUION_B         shift and go to state 157
    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    default                        shift and go to state 155
    lista_expresiones              shift and go to state 156
    expresion                      shift and go to state 137
    llamado                        shift and go to state 25

state 136

    (40) lista_casos -> lista_expresiones . ARROW statement COMA
    (41) lista_casos -> lista_expresiones . ARROW instruccion COMA
    (42) lista_expresiones -> lista_expresiones . SEP_MATCH expresion

    ARROW           shift and go to state 158
    SEP_MATCH       shift and go to state 159


state 137

    (43) lista_expresiones -> expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    ARROW           reduce using rule 43 (lista_expresiones -> expresion .)
    SEP_MATCH       reduce using rule 43 (lista_expresiones -> expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44
    IGUAL_IGUAL     shift and go to state 45
    NO_IGUAL        shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_IGUAL     shift and go to state 49
    MENOR_IGUAL     shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    PUNTO           shift and go to state 53
    AS              shift and go to state 54


state 138

    (75) expresion -> I64 DOS_PT DOS_PT POW . PARA expresion COMA expresion PARC

    PARA            shift and go to state 160


state 139

    (61) statement -> LLAVA instrucciones LLAVC .

    PRINTLN         reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    LET             reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    ID              reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    IF              reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    MATCH           reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    MENOS           reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    I64             reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    PARA            reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    NOT             reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    ENTERO          reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    DECIMAL         reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    CADENA          reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    CARACTER        reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    TRUE            reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    FALSE           reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    RETURN          reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    BREAK           reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    CONTINUE        reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    LOOP            reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    WHILE           reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    FN              reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    $end            reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    PT_COMA         reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    LLAVC           reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    COMA            reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)
    ELSE            reduce using rule 61 (statement -> LLAVA instrucciones LLAVC .)


state 140

    (58) lista_parametros -> ID . DOS_PT tipo

    DOS_PT          shift and go to state 161


state 141

    (53) funcion -> FN ID PARA lista_parametros . PARC statement
    (54) funcion -> FN ID PARA lista_parametros . PARC ARRFUNC tipo statement
    (57) lista_parametros -> lista_parametros . COMA ID DOS_PT tipo

    PARC            shift and go to state 162
    COMA            shift and go to state 163


state 142

    (55) funcion -> FN ID PARA PARC . statement
    (56) funcion -> FN ID PARA PARC . ARRFUNC statement
    (61) statement -> . LLAVA instrucciones LLAVC
    (62) statement -> . LLAVA LLAVC

    ARRFUNC         shift and go to state 165
    LLAVA           shift and go to state 73

    statement                      shift and go to state 164

state 143

    (94) expresion -> expresion PUNTO TO_OWNED PARA PARC .

    MAS             reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MENOS           reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MULTI           reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    DIV             reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MODULO          reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    IGUAL_IGUAL     reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    NO_IGUAL        reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MAYOR           reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MENOR           reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MAYOR_IGUAL     reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MENOR_IGUAL     reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    AND             reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    OR              reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PUNTO           reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    AS              reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PRINTLN         reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    LET             reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    ID              reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    IF              reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MATCH           reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    I64             reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PARA            reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    NOT             reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    ENTERO          reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    DECIMAL         reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    CADENA          reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    CARACTER        reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    TRUE            reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    FALSE           reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    RETURN          reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    BREAK           reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    CONTINUE        reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    LOOP            reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    WHILE           reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    FN              reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    $end            reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PARC            reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    LLAVA           reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PT_COMA         reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    COMA            reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    LLAVC           reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    ARROW           reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    SEP_MATCH       reduce using rule 94 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)


state 144

    (95) expresion -> expresion PUNTO TO_STRING PARA PARC .

    MAS             reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MENOS           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MULTI           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    DIV             reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MODULO          reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    IGUAL_IGUAL     reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    NO_IGUAL        reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MAYOR           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MENOR           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MAYOR_IGUAL     reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MENOR_IGUAL     reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    AND             reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    OR              reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PUNTO           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    AS              reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PRINTLN         reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    LET             reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    ID              reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    IF              reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MATCH           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    I64             reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PARA            reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    NOT             reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    ENTERO          reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    DECIMAL         reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    CADENA          reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    CARACTER        reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    TRUE            reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    FALSE           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    RETURN          reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    BREAK           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    CONTINUE        reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    LOOP            reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    WHILE           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    FN              reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    $end            reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PARC            reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    LLAVA           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PT_COMA         reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    COMA            reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    LLAVC           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    ARROW           reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    SEP_MATCH       reduce using rule 95 (expresion -> expresion PUNTO TO_STRING PARA PARC .)


state 145

    (96) expresion -> expresion PUNTO ABSOLUTO PARA PARC .

    MAS             reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MENOS           reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MULTI           reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    DIV             reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MODULO          reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    IGUAL_IGUAL     reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    NO_IGUAL        reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MAYOR           reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MENOR           reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MAYOR_IGUAL     reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MENOR_IGUAL     reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    AND             reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    OR              reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    PUNTO           reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    AS              reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    PRINTLN         reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    LET             reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    ID              reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    IF              reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MATCH           reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    I64             reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    PARA            reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    NOT             reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    ENTERO          reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    DECIMAL         reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    CADENA          reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    CARACTER        reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    TRUE            reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    FALSE           reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    RETURN          reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    BREAK           reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    CONTINUE        reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    LOOP            reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    WHILE           reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    FN              reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    $end            reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    PARC            reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    LLAVA           reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    PT_COMA         reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    COMA            reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    LLAVC           reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    ARROW           reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    SEP_MATCH       reduce using rule 96 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)


state 146

    (97) expresion -> expresion PUNTO RAIZ PARA PARC .

    MAS             reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MENOS           reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MULTI           reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    DIV             reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MODULO          reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    IGUAL_IGUAL     reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    NO_IGUAL        reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MAYOR           reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MENOR           reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MAYOR_IGUAL     reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MENOR_IGUAL     reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    AND             reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    OR              reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    PUNTO           reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    AS              reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    PRINTLN         reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    LET             reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    ID              reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    IF              reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MATCH           reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    I64             reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    PARA            reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    NOT             reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    ENTERO          reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    DECIMAL         reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    CADENA          reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    CARACTER        reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    TRUE            reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    FALSE           reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    RETURN          reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    BREAK           reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    CONTINUE        reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    LOOP            reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    WHILE           reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    FN              reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    $end            reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    PARC            reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    LLAVA           reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    PT_COMA         reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    COMA            reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    LLAVC           reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    ARROW           reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    SEP_MATCH       reduce using rule 97 (expresion -> expresion PUNTO RAIZ PARA PARC .)


state 147

    (15) prints -> PRINTLN NOT PARA CADENA COMA . list_exp PARC
    (17) list_exp -> . list_exp COMA expresion
    (18) list_exp -> . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    list_exp                       shift and go to state 166
    expresion                      shift and go to state 107
    llamado                        shift and go to state 25

state 148

    (16) prints -> PRINTLN NOT PARA CADENA PARC .

    PT_COMA         reduce using rule 16 (prints -> PRINTLN NOT PARA CADENA PARC .)


state 149

    (19) declaracion -> LET MUT ID DOS_PT tipo . IGUAL valores
    (20) declaracion -> LET MUT ID DOS_PT tipo .

    IGUAL           shift and go to state 167
    PT_COMA         reduce using rule 20 (declaracion -> LET MUT ID DOS_PT tipo .)


state 150

    (21) declaracion -> LET MUT ID IGUAL valores .

    PT_COMA         reduce using rule 21 (declaracion -> LET MUT ID IGUAL valores .)


state 151

    (23) declaracion -> LET ID DOS_PT tipo IGUAL . valores
    (28) valores -> . expresion
    (29) valores -> . sent_if
    (30) valores -> . match
    (31) valores -> . loop
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (32) sent_if -> . IF expresion statement sent_else
    (36) match -> . MATCH expresion casos_match
    (51) loop -> . LOOP statement
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 34

    valores                        shift and go to state 168
    expresion                      shift and go to state 101
    sent_if                        shift and go to state 102
    match                          shift and go to state 103
    loop                           shift and go to state 104
    llamado                        shift and go to state 25

state 152

    (17) list_exp -> list_exp COMA expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    PARC            reduce using rule 17 (list_exp -> list_exp COMA expresion .)
    COMA            reduce using rule 17 (list_exp -> list_exp COMA expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44
    IGUAL_IGUAL     shift and go to state 45
    NO_IGUAL        shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_IGUAL     shift and go to state 49
    MENOR_IGUAL     shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    PUNTO           shift and go to state 53
    AS              shift and go to state 54


state 153

    (33) sent_else -> ELSE statement .

    PRINTLN         reduce using rule 33 (sent_else -> ELSE statement .)
    LET             reduce using rule 33 (sent_else -> ELSE statement .)
    ID              reduce using rule 33 (sent_else -> ELSE statement .)
    IF              reduce using rule 33 (sent_else -> ELSE statement .)
    MATCH           reduce using rule 33 (sent_else -> ELSE statement .)
    MENOS           reduce using rule 33 (sent_else -> ELSE statement .)
    I64             reduce using rule 33 (sent_else -> ELSE statement .)
    PARA            reduce using rule 33 (sent_else -> ELSE statement .)
    NOT             reduce using rule 33 (sent_else -> ELSE statement .)
    ENTERO          reduce using rule 33 (sent_else -> ELSE statement .)
    DECIMAL         reduce using rule 33 (sent_else -> ELSE statement .)
    CADENA          reduce using rule 33 (sent_else -> ELSE statement .)
    CARACTER        reduce using rule 33 (sent_else -> ELSE statement .)
    TRUE            reduce using rule 33 (sent_else -> ELSE statement .)
    FALSE           reduce using rule 33 (sent_else -> ELSE statement .)
    RETURN          reduce using rule 33 (sent_else -> ELSE statement .)
    BREAK           reduce using rule 33 (sent_else -> ELSE statement .)
    CONTINUE        reduce using rule 33 (sent_else -> ELSE statement .)
    LOOP            reduce using rule 33 (sent_else -> ELSE statement .)
    WHILE           reduce using rule 33 (sent_else -> ELSE statement .)
    FN              reduce using rule 33 (sent_else -> ELSE statement .)
    $end            reduce using rule 33 (sent_else -> ELSE statement .)
    PT_COMA         reduce using rule 33 (sent_else -> ELSE statement .)
    LLAVC           reduce using rule 33 (sent_else -> ELSE statement .)
    COMA            reduce using rule 33 (sent_else -> ELSE statement .)


state 154

    (34) sent_else -> ELSE sent_if .

    PRINTLN         reduce using rule 34 (sent_else -> ELSE sent_if .)
    LET             reduce using rule 34 (sent_else -> ELSE sent_if .)
    ID              reduce using rule 34 (sent_else -> ELSE sent_if .)
    IF              reduce using rule 34 (sent_else -> ELSE sent_if .)
    MATCH           reduce using rule 34 (sent_else -> ELSE sent_if .)
    MENOS           reduce using rule 34 (sent_else -> ELSE sent_if .)
    I64             reduce using rule 34 (sent_else -> ELSE sent_if .)
    PARA            reduce using rule 34 (sent_else -> ELSE sent_if .)
    NOT             reduce using rule 34 (sent_else -> ELSE sent_if .)
    ENTERO          reduce using rule 34 (sent_else -> ELSE sent_if .)
    DECIMAL         reduce using rule 34 (sent_else -> ELSE sent_if .)
    CADENA          reduce using rule 34 (sent_else -> ELSE sent_if .)
    CARACTER        reduce using rule 34 (sent_else -> ELSE sent_if .)
    TRUE            reduce using rule 34 (sent_else -> ELSE sent_if .)
    FALSE           reduce using rule 34 (sent_else -> ELSE sent_if .)
    RETURN          reduce using rule 34 (sent_else -> ELSE sent_if .)
    BREAK           reduce using rule 34 (sent_else -> ELSE sent_if .)
    CONTINUE        reduce using rule 34 (sent_else -> ELSE sent_if .)
    LOOP            reduce using rule 34 (sent_else -> ELSE sent_if .)
    WHILE           reduce using rule 34 (sent_else -> ELSE sent_if .)
    FN              reduce using rule 34 (sent_else -> ELSE sent_if .)
    $end            reduce using rule 34 (sent_else -> ELSE sent_if .)
    PT_COMA         reduce using rule 34 (sent_else -> ELSE sent_if .)
    LLAVC           reduce using rule 34 (sent_else -> ELSE sent_if .)
    COMA            reduce using rule 34 (sent_else -> ELSE sent_if .)


state 155

    (37) casos_match -> LLAVA lista_casos default . LLAVC

    LLAVC           shift and go to state 169


state 156

    (38) lista_casos -> lista_casos lista_expresiones . ARROW statement COMA
    (39) lista_casos -> lista_casos lista_expresiones . ARROW instruccion COMA
    (42) lista_expresiones -> lista_expresiones . SEP_MATCH expresion

    ARROW           shift and go to state 170
    SEP_MATCH       shift and go to state 159


state 157

    (44) default -> GUION_B . ARROW statement COMA
    (45) default -> GUION_B . ARROW instruccion COMA

    ARROW           shift and go to state 171


state 158

    (40) lista_casos -> lista_expresiones ARROW . statement COMA
    (41) lista_casos -> lista_expresiones ARROW . instruccion COMA
    (61) statement -> . LLAVA instrucciones LLAVC
    (62) statement -> . LLAVA LLAVC
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) instruccion -> . loop
    (13) instruccion -> . while
    (14) instruccion -> . funcion
    (15) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (16) prints -> . PRINTLN NOT PARA CADENA PARC
    (19) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (20) declaracion -> . LET MUT ID DOS_PT tipo
    (21) declaracion -> . LET MUT ID IGUAL valores
    (22) declaracion -> . LET MUT ID
    (23) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (24) declaracion -> . LET ID DOS_PT tipo
    (25) declaracion -> . LET ID IGUAL valores
    (26) declaracion -> . LET ID
    (27) declaracion -> . ID IGUAL valores
    (32) sent_if -> . IF expresion statement sent_else
    (36) match -> . MATCH expresion casos_match
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (46) return -> . RETURN
    (47) return -> . RETURN expresion
    (48) break -> . BREAK
    (49) break -> . BREAK expresion
    (50) continue -> . CONTINUE
    (51) loop -> . LOOP statement
    (52) while -> . WHILE expresion statement
    (53) funcion -> . FN ID PARA lista_parametros PARC statement
    (54) funcion -> . FN ID PARA lista_parametros PARC ARRFUNC tipo statement
    (55) funcion -> . FN ID PARA PARC statement
    (56) funcion -> . FN ID PARA PARC ARRFUNC statement
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    LLAVA           shift and go to state 73
    PRINTLN         shift and go to state 15
    LET             shift and go to state 19
    ID              shift and go to state 20
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    RETURN          shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    LOOP            shift and go to state 34
    WHILE           shift and go to state 35
    FN              shift and go to state 36

    statement                      shift and go to state 172
    instruccion                    shift and go to state 173
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    funcion                        shift and go to state 14
    llamado                        shift and go to state 25

state 159

    (42) lista_expresiones -> lista_expresiones SEP_MATCH . expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 174
    llamado                        shift and go to state 25

state 160

    (75) expresion -> I64 DOS_PT DOS_PT POW PARA . expresion COMA expresion PARC
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 175
    llamado                        shift and go to state 25

state 161

    (58) lista_parametros -> ID DOS_PT . tipo
    (63) tipo -> . I64
    (64) tipo -> . F64
    (65) tipo -> . BOOL
    (66) tipo -> . STRING
    (67) tipo -> . STR
    (68) tipo -> . CHAR

    I64             shift and go to state 124
    F64             shift and go to state 125
    BOOL            shift and go to state 126
    STRING          shift and go to state 127
    STR             shift and go to state 128
    CHAR            shift and go to state 129

    tipo                           shift and go to state 176

state 162

    (53) funcion -> FN ID PARA lista_parametros PARC . statement
    (54) funcion -> FN ID PARA lista_parametros PARC . ARRFUNC tipo statement
    (61) statement -> . LLAVA instrucciones LLAVC
    (62) statement -> . LLAVA LLAVC

    ARRFUNC         shift and go to state 178
    LLAVA           shift and go to state 73

    statement                      shift and go to state 177

state 163

    (57) lista_parametros -> lista_parametros COMA . ID DOS_PT tipo

    ID              shift and go to state 179


state 164

    (55) funcion -> FN ID PARA PARC statement .

    PRINTLN         reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    LET             reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    ID              reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    IF              reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    MATCH           reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    MENOS           reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    I64             reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    PARA            reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    NOT             reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    ENTERO          reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    DECIMAL         reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    CADENA          reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    CARACTER        reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    TRUE            reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    FALSE           reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    RETURN          reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    BREAK           reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    CONTINUE        reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    LOOP            reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    WHILE           reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    FN              reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    $end            reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    LLAVC           reduce using rule 55 (funcion -> FN ID PARA PARC statement .)
    COMA            reduce using rule 55 (funcion -> FN ID PARA PARC statement .)


state 165

    (56) funcion -> FN ID PARA PARC ARRFUNC . statement
    (61) statement -> . LLAVA instrucciones LLAVC
    (62) statement -> . LLAVA LLAVC

    LLAVA           shift and go to state 73

    statement                      shift and go to state 180

state 166

    (15) prints -> PRINTLN NOT PARA CADENA COMA list_exp . PARC
    (17) list_exp -> list_exp . COMA expresion

    PARC            shift and go to state 181
    COMA            shift and go to state 132


state 167

    (19) declaracion -> LET MUT ID DOS_PT tipo IGUAL . valores
    (28) valores -> . expresion
    (29) valores -> . sent_if
    (30) valores -> . match
    (31) valores -> . loop
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (32) sent_if -> . IF expresion statement sent_else
    (36) match -> . MATCH expresion casos_match
    (51) loop -> . LOOP statement
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    LOOP            shift and go to state 34

    valores                        shift and go to state 182
    expresion                      shift and go to state 101
    sent_if                        shift and go to state 102
    match                          shift and go to state 103
    loop                           shift and go to state 104
    llamado                        shift and go to state 25

state 168

    (23) declaracion -> LET ID DOS_PT tipo IGUAL valores .

    PT_COMA         reduce using rule 23 (declaracion -> LET ID DOS_PT tipo IGUAL valores .)


state 169

    (37) casos_match -> LLAVA lista_casos default LLAVC .

    PRINTLN         reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    LET             reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    ID              reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    IF              reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    MATCH           reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    MENOS           reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    I64             reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    PARA            reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    NOT             reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    ENTERO          reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    DECIMAL         reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    CADENA          reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    CARACTER        reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    TRUE            reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    FALSE           reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    RETURN          reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    BREAK           reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    CONTINUE        reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    LOOP            reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    WHILE           reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    FN              reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    $end            reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    PT_COMA         reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    LLAVC           reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)
    COMA            reduce using rule 37 (casos_match -> LLAVA lista_casos default LLAVC .)


state 170

    (38) lista_casos -> lista_casos lista_expresiones ARROW . statement COMA
    (39) lista_casos -> lista_casos lista_expresiones ARROW . instruccion COMA
    (61) statement -> . LLAVA instrucciones LLAVC
    (62) statement -> . LLAVA LLAVC
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) instruccion -> . loop
    (13) instruccion -> . while
    (14) instruccion -> . funcion
    (15) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (16) prints -> . PRINTLN NOT PARA CADENA PARC
    (19) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (20) declaracion -> . LET MUT ID DOS_PT tipo
    (21) declaracion -> . LET MUT ID IGUAL valores
    (22) declaracion -> . LET MUT ID
    (23) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (24) declaracion -> . LET ID DOS_PT tipo
    (25) declaracion -> . LET ID IGUAL valores
    (26) declaracion -> . LET ID
    (27) declaracion -> . ID IGUAL valores
    (32) sent_if -> . IF expresion statement sent_else
    (36) match -> . MATCH expresion casos_match
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (46) return -> . RETURN
    (47) return -> . RETURN expresion
    (48) break -> . BREAK
    (49) break -> . BREAK expresion
    (50) continue -> . CONTINUE
    (51) loop -> . LOOP statement
    (52) while -> . WHILE expresion statement
    (53) funcion -> . FN ID PARA lista_parametros PARC statement
    (54) funcion -> . FN ID PARA lista_parametros PARC ARRFUNC tipo statement
    (55) funcion -> . FN ID PARA PARC statement
    (56) funcion -> . FN ID PARA PARC ARRFUNC statement
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    LLAVA           shift and go to state 73
    PRINTLN         shift and go to state 15
    LET             shift and go to state 19
    ID              shift and go to state 20
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    RETURN          shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    LOOP            shift and go to state 34
    WHILE           shift and go to state 35
    FN              shift and go to state 36

    statement                      shift and go to state 183
    instruccion                    shift and go to state 184
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    funcion                        shift and go to state 14
    llamado                        shift and go to state 25

state 171

    (44) default -> GUION_B ARROW . statement COMA
    (45) default -> GUION_B ARROW . instruccion COMA
    (61) statement -> . LLAVA instrucciones LLAVC
    (62) statement -> . LLAVA LLAVC
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) instruccion -> . loop
    (13) instruccion -> . while
    (14) instruccion -> . funcion
    (15) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (16) prints -> . PRINTLN NOT PARA CADENA PARC
    (19) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (20) declaracion -> . LET MUT ID DOS_PT tipo
    (21) declaracion -> . LET MUT ID IGUAL valores
    (22) declaracion -> . LET MUT ID
    (23) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (24) declaracion -> . LET ID DOS_PT tipo
    (25) declaracion -> . LET ID IGUAL valores
    (26) declaracion -> . LET ID
    (27) declaracion -> . ID IGUAL valores
    (32) sent_if -> . IF expresion statement sent_else
    (36) match -> . MATCH expresion casos_match
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (46) return -> . RETURN
    (47) return -> . RETURN expresion
    (48) break -> . BREAK
    (49) break -> . BREAK expresion
    (50) continue -> . CONTINUE
    (51) loop -> . LOOP statement
    (52) while -> . WHILE expresion statement
    (53) funcion -> . FN ID PARA lista_parametros PARC statement
    (54) funcion -> . FN ID PARA lista_parametros PARC ARRFUNC tipo statement
    (55) funcion -> . FN ID PARA PARC statement
    (56) funcion -> . FN ID PARA PARC ARRFUNC statement
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    LLAVA           shift and go to state 73
    PRINTLN         shift and go to state 15
    LET             shift and go to state 19
    ID              shift and go to state 20
    IF              shift and go to state 21
    MATCH           shift and go to state 22
    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    RETURN          shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    LOOP            shift and go to state 34
    WHILE           shift and go to state 35
    FN              shift and go to state 36

    statement                      shift and go to state 185
    instruccion                    shift and go to state 186
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13
    funcion                        shift and go to state 14
    llamado                        shift and go to state 25

state 172

    (40) lista_casos -> lista_expresiones ARROW statement . COMA

    COMA            shift and go to state 187


state 173

    (41) lista_casos -> lista_expresiones ARROW instruccion . COMA

    COMA            shift and go to state 188


state 174

    (42) lista_expresiones -> lista_expresiones SEP_MATCH expresion .
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    ARROW           reduce using rule 42 (lista_expresiones -> lista_expresiones SEP_MATCH expresion .)
    SEP_MATCH       reduce using rule 42 (lista_expresiones -> lista_expresiones SEP_MATCH expresion .)
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44
    IGUAL_IGUAL     shift and go to state 45
    NO_IGUAL        shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_IGUAL     shift and go to state 49
    MENOR_IGUAL     shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    PUNTO           shift and go to state 53
    AS              shift and go to state 54


state 175

    (75) expresion -> I64 DOS_PT DOS_PT POW PARA expresion . COMA expresion PARC
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    COMA            shift and go to state 189
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44
    IGUAL_IGUAL     shift and go to state 45
    NO_IGUAL        shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_IGUAL     shift and go to state 49
    MENOR_IGUAL     shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    PUNTO           shift and go to state 53
    AS              shift and go to state 54


state 176

    (58) lista_parametros -> ID DOS_PT tipo .

    PARC            reduce using rule 58 (lista_parametros -> ID DOS_PT tipo .)
    COMA            reduce using rule 58 (lista_parametros -> ID DOS_PT tipo .)


state 177

    (53) funcion -> FN ID PARA lista_parametros PARC statement .

    PRINTLN         reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    LET             reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    ID              reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    IF              reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    MATCH           reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    MENOS           reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    I64             reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    PARA            reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    NOT             reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    ENTERO          reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    DECIMAL         reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    CADENA          reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    CARACTER        reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    TRUE            reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    FALSE           reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    RETURN          reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    BREAK           reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    CONTINUE        reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    LOOP            reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    WHILE           reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    FN              reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    $end            reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    LLAVC           reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)
    COMA            reduce using rule 53 (funcion -> FN ID PARA lista_parametros PARC statement .)


state 178

    (54) funcion -> FN ID PARA lista_parametros PARC ARRFUNC . tipo statement
    (63) tipo -> . I64
    (64) tipo -> . F64
    (65) tipo -> . BOOL
    (66) tipo -> . STRING
    (67) tipo -> . STR
    (68) tipo -> . CHAR

    I64             shift and go to state 124
    F64             shift and go to state 125
    BOOL            shift and go to state 126
    STRING          shift and go to state 127
    STR             shift and go to state 128
    CHAR            shift and go to state 129

    tipo                           shift and go to state 190

state 179

    (57) lista_parametros -> lista_parametros COMA ID . DOS_PT tipo

    DOS_PT          shift and go to state 191


state 180

    (56) funcion -> FN ID PARA PARC ARRFUNC statement .

    PRINTLN         reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    LET             reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    ID              reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    IF              reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    MATCH           reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    MENOS           reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    I64             reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    PARA            reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    NOT             reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    ENTERO          reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    DECIMAL         reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    CADENA          reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    CARACTER        reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    TRUE            reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    FALSE           reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    RETURN          reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    BREAK           reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    CONTINUE        reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    LOOP            reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    WHILE           reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    FN              reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    $end            reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    LLAVC           reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)
    COMA            reduce using rule 56 (funcion -> FN ID PARA PARC ARRFUNC statement .)


state 181

    (15) prints -> PRINTLN NOT PARA CADENA COMA list_exp PARC .

    PT_COMA         reduce using rule 15 (prints -> PRINTLN NOT PARA CADENA COMA list_exp PARC .)


state 182

    (19) declaracion -> LET MUT ID DOS_PT tipo IGUAL valores .

    PT_COMA         reduce using rule 19 (declaracion -> LET MUT ID DOS_PT tipo IGUAL valores .)


state 183

    (38) lista_casos -> lista_casos lista_expresiones ARROW statement . COMA

    COMA            shift and go to state 192


state 184

    (39) lista_casos -> lista_casos lista_expresiones ARROW instruccion . COMA

    COMA            shift and go to state 193


state 185

    (44) default -> GUION_B ARROW statement . COMA

    COMA            shift and go to state 194


state 186

    (45) default -> GUION_B ARROW instruccion . COMA

    COMA            shift and go to state 195


state 187

    (40) lista_casos -> lista_expresiones ARROW statement COMA .

    GUION_B         reduce using rule 40 (lista_casos -> lista_expresiones ARROW statement COMA .)
    MENOS           reduce using rule 40 (lista_casos -> lista_expresiones ARROW statement COMA .)
    I64             reduce using rule 40 (lista_casos -> lista_expresiones ARROW statement COMA .)
    PARA            reduce using rule 40 (lista_casos -> lista_expresiones ARROW statement COMA .)
    NOT             reduce using rule 40 (lista_casos -> lista_expresiones ARROW statement COMA .)
    ENTERO          reduce using rule 40 (lista_casos -> lista_expresiones ARROW statement COMA .)
    DECIMAL         reduce using rule 40 (lista_casos -> lista_expresiones ARROW statement COMA .)
    ID              reduce using rule 40 (lista_casos -> lista_expresiones ARROW statement COMA .)
    CADENA          reduce using rule 40 (lista_casos -> lista_expresiones ARROW statement COMA .)
    CARACTER        reduce using rule 40 (lista_casos -> lista_expresiones ARROW statement COMA .)
    TRUE            reduce using rule 40 (lista_casos -> lista_expresiones ARROW statement COMA .)
    FALSE           reduce using rule 40 (lista_casos -> lista_expresiones ARROW statement COMA .)


state 188

    (41) lista_casos -> lista_expresiones ARROW instruccion COMA .

    GUION_B         reduce using rule 41 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    MENOS           reduce using rule 41 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    I64             reduce using rule 41 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    PARA            reduce using rule 41 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    NOT             reduce using rule 41 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    ENTERO          reduce using rule 41 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    DECIMAL         reduce using rule 41 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    ID              reduce using rule 41 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    CADENA          reduce using rule 41 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    CARACTER        reduce using rule 41 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    TRUE            reduce using rule 41 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    FALSE           reduce using rule 41 (lista_casos -> lista_expresiones ARROW instruccion COMA .)


state 189

    (75) expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA . expresion PARC
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAS expresion
    (71) expresion -> . expresion MENOS expresion
    (72) expresion -> . expresion MULTI expresion
    (73) expresion -> . expresion DIV expresion
    (74) expresion -> . expresion MODULO expresion
    (75) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (76) expresion -> . PARA expresion PARC
    (77) expresion -> . llamado
    (78) expresion -> . expresion IGUAL_IGUAL expresion
    (79) expresion -> . expresion NO_IGUAL expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYOR_IGUAL expresion
    (83) expresion -> . expresion MENOR_IGUAL expresion
    (84) expresion -> . expresion AND expresion
    (85) expresion -> . expresion OR expresion
    (86) expresion -> . NOT expresion
    (87) expresion -> . ENTERO
    (88) expresion -> . DECIMAL
    (89) expresion -> . ID
    (90) expresion -> . CADENA
    (91) expresion -> . CARACTER
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE
    (94) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (95) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (96) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (97) expresion -> . expresion PUNTO RAIZ PARA PARC
    (98) expresion -> . expresion AS F64
    (99) expresion -> . expresion AS I64
    (59) llamado -> . ID PARA list_exp PARC
    (60) llamado -> . ID PARA PARC

    MENOS           shift and go to state 23
    I64             shift and go to state 24
    PARA            shift and go to state 17
    NOT             shift and go to state 16
    ENTERO          shift and go to state 26
    DECIMAL         shift and go to state 27
    ID              shift and go to state 60
    CADENA          shift and go to state 18
    CARACTER        shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expresion                      shift and go to state 196
    llamado                        shift and go to state 25

state 190

    (54) funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo . statement
    (61) statement -> . LLAVA instrucciones LLAVC
    (62) statement -> . LLAVA LLAVC

    LLAVA           shift and go to state 73

    statement                      shift and go to state 197

state 191

    (57) lista_parametros -> lista_parametros COMA ID DOS_PT . tipo
    (63) tipo -> . I64
    (64) tipo -> . F64
    (65) tipo -> . BOOL
    (66) tipo -> . STRING
    (67) tipo -> . STR
    (68) tipo -> . CHAR

    I64             shift and go to state 124
    F64             shift and go to state 125
    BOOL            shift and go to state 126
    STRING          shift and go to state 127
    STR             shift and go to state 128
    CHAR            shift and go to state 129

    tipo                           shift and go to state 198

state 192

    (38) lista_casos -> lista_casos lista_expresiones ARROW statement COMA .

    GUION_B         reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    MENOS           reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    I64             reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    PARA            reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    NOT             reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    ENTERO          reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    DECIMAL         reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    ID              reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    CADENA          reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    CARACTER        reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    TRUE            reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    FALSE           reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)


state 193

    (39) lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .

    GUION_B         reduce using rule 39 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    MENOS           reduce using rule 39 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    I64             reduce using rule 39 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    PARA            reduce using rule 39 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    NOT             reduce using rule 39 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    ENTERO          reduce using rule 39 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    DECIMAL         reduce using rule 39 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    ID              reduce using rule 39 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    CADENA          reduce using rule 39 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    CARACTER        reduce using rule 39 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    TRUE            reduce using rule 39 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    FALSE           reduce using rule 39 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)


state 194

    (44) default -> GUION_B ARROW statement COMA .

    LLAVC           reduce using rule 44 (default -> GUION_B ARROW statement COMA .)


state 195

    (45) default -> GUION_B ARROW instruccion COMA .

    LLAVC           reduce using rule 45 (default -> GUION_B ARROW instruccion COMA .)


state 196

    (75) expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion . PARC
    (70) expresion -> expresion . MAS expresion
    (71) expresion -> expresion . MENOS expresion
    (72) expresion -> expresion . MULTI expresion
    (73) expresion -> expresion . DIV expresion
    (74) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . IGUAL_IGUAL expresion
    (79) expresion -> expresion . NO_IGUAL expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYOR_IGUAL expresion
    (83) expresion -> expresion . MENOR_IGUAL expresion
    (84) expresion -> expresion . AND expresion
    (85) expresion -> expresion . OR expresion
    (94) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (95) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (96) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (97) expresion -> expresion . PUNTO RAIZ PARA PARC
    (98) expresion -> expresion . AS F64
    (99) expresion -> expresion . AS I64

    PARC            shift and go to state 199
    MAS             shift and go to state 40
    MENOS           shift and go to state 41
    MULTI           shift and go to state 42
    DIV             shift and go to state 43
    MODULO          shift and go to state 44
    IGUAL_IGUAL     shift and go to state 45
    NO_IGUAL        shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYOR_IGUAL     shift and go to state 49
    MENOR_IGUAL     shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    PUNTO           shift and go to state 53
    AS              shift and go to state 54


state 197

    (54) funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .

    PRINTLN         reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    LET             reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    ID              reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    IF              reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    MATCH           reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    MENOS           reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    I64             reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    PARA            reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    NOT             reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    ENTERO          reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    DECIMAL         reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    CADENA          reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    CARACTER        reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    TRUE            reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    FALSE           reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    RETURN          reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    BREAK           reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    CONTINUE        reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    LOOP            reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    WHILE           reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    FN              reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    $end            reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    LLAVC           reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)
    COMA            reduce using rule 54 (funcion -> FN ID PARA lista_parametros PARC ARRFUNC tipo statement .)


state 198

    (57) lista_parametros -> lista_parametros COMA ID DOS_PT tipo .

    PARC            reduce using rule 57 (lista_parametros -> lista_parametros COMA ID DOS_PT tipo .)
    COMA            reduce using rule 57 (lista_parametros -> lista_parametros COMA ID DOS_PT tipo .)


state 199

    (75) expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .

    MAS             reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MENOS           reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MULTI           reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    DIV             reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MODULO          reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    IGUAL_IGUAL     reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    NO_IGUAL        reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MAYOR           reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MENOR           reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MAYOR_IGUAL     reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MENOR_IGUAL     reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    AND             reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    OR              reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PUNTO           reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    AS              reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PRINTLN         reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    LET             reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    ID              reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    IF              reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MATCH           reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    I64             reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PARA            reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    NOT             reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    ENTERO          reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    DECIMAL         reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    CADENA          reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    CARACTER        reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    TRUE            reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    FALSE           reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    RETURN          reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    BREAK           reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    CONTINUE        reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    LOOP            reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    WHILE           reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    FN              reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    $end            reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PARC            reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    LLAVA           reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PT_COMA         reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    COMA            reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    LLAVC           reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    ARROW           reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    SEP_MATCH       reduce using rule 75 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MENOS in state 8 resolved as shift
WARNING: shift/reduce conflict for PARA in state 20 resolved as shift
WARNING: shift/reduce conflict for PARA in state 60 resolved as shift
