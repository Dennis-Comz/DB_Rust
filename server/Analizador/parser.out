Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> prints PT_COMA
Rule 5     instruccion -> declaracion PT_COMA
Rule 6     instruccion -> sent_if
Rule 7     instruccion -> match
Rule 8     instruccion -> expresion
Rule 9     prints -> PRINTLN ADMIRACION PARA CADENA COMA list_exp PARC
Rule 10    prints -> PRINTLN ADMIRACION PARA CADENA PARC
Rule 11    list_exp -> list_exp COMA expresion
Rule 12    list_exp -> expresion
Rule 13    declaracion -> LET MUT ID DOS_PT tipo IGUAL expresion
Rule 14    declaracion -> LET MUT ID DOS_PT tipo
Rule 15    declaracion -> LET MUT ID IGUAL expresion
Rule 16    declaracion -> LET MUT ID
Rule 17    declaracion -> LET ID DOS_PT tipo IGUAL expresion
Rule 18    declaracion -> LET ID DOS_PT tipo
Rule 19    declaracion -> LET ID IGUAL expresion
Rule 20    declaracion -> LET ID
Rule 21    declaracion -> ID IGUAL expresion
Rule 22    sent_if -> IF expresion statement sent_else
Rule 23    sent_else -> ELSE statement
Rule 24    sent_else -> ELSE sent_if
Rule 25    sent_else -> <empty>
Rule 26    exp_if -> IF expresion exp_statement exp_else
Rule 27    exp_else -> ELSE exp_statement
Rule 28    exp_else -> ELSE exp_if
Rule 29    exp_statement -> LLAVA instrucciones LLAVC
Rule 30    match -> MATCH expresion casos_match
Rule 31    casos_match -> LLAVA lista_casos default LLAVC
Rule 32    lista_casos -> lista_casos lista_expresiones ARROW statement COMA
Rule 33    lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA
Rule 34    lista_casos -> lista_expresiones ARROW statement COMA
Rule 35    lista_casos -> lista_expresiones ARROW instruccion COMA
Rule 36    lista_expresiones -> lista_expresiones SEP_MATCH expresion
Rule 37    lista_expresiones -> expresion
Rule 38    default -> GUION_B ARROW statement COMA
Rule 39    default -> GUION_B ARROW instruccion COMA
Rule 40    statement -> LLAVA instrucciones LLAVC
Rule 41    statement -> LLAVA LLAVC
Rule 42    tipo -> I64
Rule 43    tipo -> F64
Rule 44    tipo -> BOOL
Rule 45    tipo -> STRING
Rule 46    tipo -> STR
Rule 47    tipo -> CHAR
Rule 48    expresion -> expresion MAS expresion
Rule 49    expresion -> expresion MENOS expresion
Rule 50    expresion -> expresion MULTI expresion
Rule 51    expresion -> expresion DIV expresion
Rule 52    expresion -> expresion MODULO expresion
Rule 53    expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
Rule 54    expresion -> PARA expresion PARC
Rule 55    expresion -> MENOS expresion
Rule 56    expresion -> expresion IGUAL_IGUAL expresion
Rule 57    expresion -> expresion NO_IGUAL expresion
Rule 58    expresion -> expresion MAYOR expresion
Rule 59    expresion -> expresion MENOR expresion
Rule 60    expresion -> expresion MAYOR_IGUAL expresion
Rule 61    expresion -> expresion MENOR_IGUAL expresion
Rule 62    expresion -> expresion AND expresion
Rule 63    expresion -> expresion OR expresion
Rule 64    expresion -> NOT expresion
Rule 65    expresion -> exp_if
Rule 66    expresion -> expresion PUNTO TO_OWNED PARA PARC
Rule 67    expresion -> expresion PUNTO TO_STRING PARA PARC
Rule 68    expresion -> CADENA
Rule 69    expresion -> ENTERO
Rule 70    expresion -> DECIMAL
Rule 71    expresion -> CARACTER
Rule 72    expresion -> TRUE
Rule 73    expresion -> FALSE
Rule 74    expresion -> ID

Terminals, with rules where they appear

ADMIRACION           : 9 10
AND                  : 62
ARROW                : 32 33 34 35 38 39
BOOL                 : 44
CADENA               : 9 10 68
CARACTER             : 71
CHAR                 : 47
COMA                 : 9 11 32 33 34 35 38 39 53
DECIMAL              : 70
DIV                  : 51
DOS_PT               : 13 14 17 18 53 53
ELSE                 : 23 24 27 28
ENTERO               : 69
F64                  : 43
FALSE                : 73
GUION_B              : 38 39
I64                  : 42 53
ID                   : 13 14 15 16 17 18 19 20 21 74
IF                   : 22 26
IGUAL                : 13 15 17 19 21
IGUAL_IGUAL          : 56
LET                  : 13 14 15 16 17 18 19 20
LLAVA                : 29 31 40 41
LLAVC                : 29 31 40 41
MAS                  : 48
MATCH                : 30
MAYOR                : 58
MAYOR_IGUAL          : 60
MENOR                : 59
MENOR_IGUAL          : 61
MENOS                : 49 55
MODULO               : 52
MULTI                : 50
MUT                  : 13 14 15 16
NOT                  : 64
NO_IGUAL             : 57
OR                   : 63
PARA                 : 9 10 53 54 66 67
PARC                 : 9 10 53 54 66 67
POW                  : 53
PRINTLN              : 9 10
PT_COMA              : 4 5
PUNTO                : 66 67
SEP_MATCH            : 36
STR                  : 46
STRING               : 45
TO_OWNED             : 66
TO_STRING            : 67
TRUE                 : 72
error                : 

Nonterminals, with rules where they appear

casos_match          : 30
declaracion          : 5
default              : 31
exp_else             : 26
exp_if               : 28 65
exp_statement        : 26 27
expresion            : 8 11 12 13 15 17 19 21 22 26 30 36 37 48 48 49 49 50 50 51 51 52 52 53 53 54 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 66 67
inicio               : 0
instruccion          : 2 3 33 35 39
instrucciones        : 1 2 29 40
list_exp             : 9 11
lista_casos          : 31 32 33
lista_expresiones    : 32 33 34 35 36
match                : 7
prints               : 4
sent_else            : 22
sent_if              : 6 24
statement            : 22 23 32 34 38
tipo                 : 13 14 17 18

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) prints -> . PRINTLN ADMIRACION PARA CADENA COMA list_exp PARC
    (10) prints -> . PRINTLN ADMIRACION PARA CADENA PARC
    (13) declaracion -> . LET MUT ID DOS_PT tipo IGUAL expresion
    (14) declaracion -> . LET MUT ID DOS_PT tipo
    (15) declaracion -> . LET MUT ID IGUAL expresion
    (16) declaracion -> . LET MUT ID
    (17) declaracion -> . LET ID DOS_PT tipo IGUAL expresion
    (18) declaracion -> . LET ID DOS_PT tipo
    (19) declaracion -> . LET ID IGUAL expresion
    (20) declaracion -> . LET ID
    (21) declaracion -> . ID IGUAL expresion
    (22) sent_if -> . IF expresion statement sent_else
    (30) match -> . MATCH expresion casos_match
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    PRINTLN         shift and go to state 9
    LET             shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    MATCH           shift and go to state 15
    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    exp_if                         shift and go to state 19

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) prints -> . PRINTLN ADMIRACION PARA CADENA COMA list_exp PARC
    (10) prints -> . PRINTLN ADMIRACION PARA CADENA PARC
    (13) declaracion -> . LET MUT ID DOS_PT tipo IGUAL expresion
    (14) declaracion -> . LET MUT ID DOS_PT tipo
    (15) declaracion -> . LET MUT ID IGUAL expresion
    (16) declaracion -> . LET MUT ID
    (17) declaracion -> . LET ID DOS_PT tipo IGUAL expresion
    (18) declaracion -> . LET ID DOS_PT tipo
    (19) declaracion -> . LET ID IGUAL expresion
    (20) declaracion -> . LET ID
    (21) declaracion -> . ID IGUAL expresion
    (22) sent_if -> . IF expresion statement sent_else
    (30) match -> . MATCH expresion casos_match
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    $end            reduce using rule 1 (inicio -> instrucciones .)
    PRINTLN         shift and go to state 9
    LET             shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    MATCH           shift and go to state 15
    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    instruccion                    shift and go to state 25
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    exp_if                         shift and go to state 19

state 3

    (3) instrucciones -> instruccion .

    PRINTLN         reduce using rule 3 (instrucciones -> instruccion .)
    LET             reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    MATCH           reduce using rule 3 (instrucciones -> instruccion .)
    I64             reduce using rule 3 (instrucciones -> instruccion .)
    PARA            reduce using rule 3 (instrucciones -> instruccion .)
    MENOS           reduce using rule 3 (instrucciones -> instruccion .)
    NOT             reduce using rule 3 (instrucciones -> instruccion .)
    CADENA          reduce using rule 3 (instrucciones -> instruccion .)
    ENTERO          reduce using rule 3 (instrucciones -> instruccion .)
    DECIMAL         reduce using rule 3 (instrucciones -> instruccion .)
    CARACTER        reduce using rule 3 (instrucciones -> instruccion .)
    TRUE            reduce using rule 3 (instrucciones -> instruccion .)
    FALSE           reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVC           reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> prints . PT_COMA

    PT_COMA         shift and go to state 26


state 5

    (5) instruccion -> declaracion . PT_COMA

    PT_COMA         shift and go to state 27


state 6

    (6) instruccion -> sent_if .

    PRINTLN         reduce using rule 6 (instruccion -> sent_if .)
    LET             reduce using rule 6 (instruccion -> sent_if .)
    ID              reduce using rule 6 (instruccion -> sent_if .)
    IF              reduce using rule 6 (instruccion -> sent_if .)
    MATCH           reduce using rule 6 (instruccion -> sent_if .)
    I64             reduce using rule 6 (instruccion -> sent_if .)
    PARA            reduce using rule 6 (instruccion -> sent_if .)
    MENOS           reduce using rule 6 (instruccion -> sent_if .)
    NOT             reduce using rule 6 (instruccion -> sent_if .)
    CADENA          reduce using rule 6 (instruccion -> sent_if .)
    ENTERO          reduce using rule 6 (instruccion -> sent_if .)
    DECIMAL         reduce using rule 6 (instruccion -> sent_if .)
    CARACTER        reduce using rule 6 (instruccion -> sent_if .)
    TRUE            reduce using rule 6 (instruccion -> sent_if .)
    FALSE           reduce using rule 6 (instruccion -> sent_if .)
    $end            reduce using rule 6 (instruccion -> sent_if .)
    LLAVC           reduce using rule 6 (instruccion -> sent_if .)
    COMA            reduce using rule 6 (instruccion -> sent_if .)


state 7

    (7) instruccion -> match .

    PRINTLN         reduce using rule 7 (instruccion -> match .)
    LET             reduce using rule 7 (instruccion -> match .)
    ID              reduce using rule 7 (instruccion -> match .)
    IF              reduce using rule 7 (instruccion -> match .)
    MATCH           reduce using rule 7 (instruccion -> match .)
    I64             reduce using rule 7 (instruccion -> match .)
    PARA            reduce using rule 7 (instruccion -> match .)
    MENOS           reduce using rule 7 (instruccion -> match .)
    NOT             reduce using rule 7 (instruccion -> match .)
    CADENA          reduce using rule 7 (instruccion -> match .)
    ENTERO          reduce using rule 7 (instruccion -> match .)
    DECIMAL         reduce using rule 7 (instruccion -> match .)
    CARACTER        reduce using rule 7 (instruccion -> match .)
    TRUE            reduce using rule 7 (instruccion -> match .)
    FALSE           reduce using rule 7 (instruccion -> match .)
    $end            reduce using rule 7 (instruccion -> match .)
    LLAVC           reduce using rule 7 (instruccion -> match .)
    COMA            reduce using rule 7 (instruccion -> match .)


state 8

    (8) instruccion -> expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

  ! shift/reduce conflict for MENOS resolved as shift
    PRINTLN         reduce using rule 8 (instruccion -> expresion .)
    LET             reduce using rule 8 (instruccion -> expresion .)
    ID              reduce using rule 8 (instruccion -> expresion .)
    IF              reduce using rule 8 (instruccion -> expresion .)
    MATCH           reduce using rule 8 (instruccion -> expresion .)
    I64             reduce using rule 8 (instruccion -> expresion .)
    PARA            reduce using rule 8 (instruccion -> expresion .)
    NOT             reduce using rule 8 (instruccion -> expresion .)
    CADENA          reduce using rule 8 (instruccion -> expresion .)
    ENTERO          reduce using rule 8 (instruccion -> expresion .)
    DECIMAL         reduce using rule 8 (instruccion -> expresion .)
    CARACTER        reduce using rule 8 (instruccion -> expresion .)
    TRUE            reduce using rule 8 (instruccion -> expresion .)
    FALSE           reduce using rule 8 (instruccion -> expresion .)
    $end            reduce using rule 8 (instruccion -> expresion .)
    LLAVC           reduce using rule 8 (instruccion -> expresion .)
    COMA            reduce using rule 8 (instruccion -> expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    PUNTO           shift and go to state 41

  ! MENOS           [ reduce using rule 8 (instruccion -> expresion .) ]


state 9

    (9) prints -> PRINTLN . ADMIRACION PARA CADENA COMA list_exp PARC
    (10) prints -> PRINTLN . ADMIRACION PARA CADENA PARC

    ADMIRACION      shift and go to state 42


state 10

    (54) expresion -> PARA . expresion PARC
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 43
    exp_if                         shift and go to state 19

state 11

    (68) expresion -> CADENA .

    MAS             reduce using rule 68 (expresion -> CADENA .)
    MENOS           reduce using rule 68 (expresion -> CADENA .)
    MULTI           reduce using rule 68 (expresion -> CADENA .)
    DIV             reduce using rule 68 (expresion -> CADENA .)
    MODULO          reduce using rule 68 (expresion -> CADENA .)
    IGUAL_IGUAL     reduce using rule 68 (expresion -> CADENA .)
    NO_IGUAL        reduce using rule 68 (expresion -> CADENA .)
    MAYOR           reduce using rule 68 (expresion -> CADENA .)
    MENOR           reduce using rule 68 (expresion -> CADENA .)
    MAYOR_IGUAL     reduce using rule 68 (expresion -> CADENA .)
    MENOR_IGUAL     reduce using rule 68 (expresion -> CADENA .)
    AND             reduce using rule 68 (expresion -> CADENA .)
    OR              reduce using rule 68 (expresion -> CADENA .)
    PUNTO           reduce using rule 68 (expresion -> CADENA .)
    PRINTLN         reduce using rule 68 (expresion -> CADENA .)
    LET             reduce using rule 68 (expresion -> CADENA .)
    ID              reduce using rule 68 (expresion -> CADENA .)
    IF              reduce using rule 68 (expresion -> CADENA .)
    MATCH           reduce using rule 68 (expresion -> CADENA .)
    I64             reduce using rule 68 (expresion -> CADENA .)
    PARA            reduce using rule 68 (expresion -> CADENA .)
    NOT             reduce using rule 68 (expresion -> CADENA .)
    CADENA          reduce using rule 68 (expresion -> CADENA .)
    ENTERO          reduce using rule 68 (expresion -> CADENA .)
    DECIMAL         reduce using rule 68 (expresion -> CADENA .)
    CARACTER        reduce using rule 68 (expresion -> CADENA .)
    TRUE            reduce using rule 68 (expresion -> CADENA .)
    FALSE           reduce using rule 68 (expresion -> CADENA .)
    $end            reduce using rule 68 (expresion -> CADENA .)
    PARC            reduce using rule 68 (expresion -> CADENA .)
    LLAVA           reduce using rule 68 (expresion -> CADENA .)
    PT_COMA         reduce using rule 68 (expresion -> CADENA .)
    LLAVC           reduce using rule 68 (expresion -> CADENA .)
    ARROW           reduce using rule 68 (expresion -> CADENA .)
    SEP_MATCH       reduce using rule 68 (expresion -> CADENA .)
    COMA            reduce using rule 68 (expresion -> CADENA .)


state 12

    (13) declaracion -> LET . MUT ID DOS_PT tipo IGUAL expresion
    (14) declaracion -> LET . MUT ID DOS_PT tipo
    (15) declaracion -> LET . MUT ID IGUAL expresion
    (16) declaracion -> LET . MUT ID
    (17) declaracion -> LET . ID DOS_PT tipo IGUAL expresion
    (18) declaracion -> LET . ID DOS_PT tipo
    (19) declaracion -> LET . ID IGUAL expresion
    (20) declaracion -> LET . ID

    MUT             shift and go to state 46
    ID              shift and go to state 47


state 13

    (21) declaracion -> ID . IGUAL expresion
    (74) expresion -> ID .

    IGUAL           shift and go to state 48
    MAS             reduce using rule 74 (expresion -> ID .)
    MENOS           reduce using rule 74 (expresion -> ID .)
    MULTI           reduce using rule 74 (expresion -> ID .)
    DIV             reduce using rule 74 (expresion -> ID .)
    MODULO          reduce using rule 74 (expresion -> ID .)
    IGUAL_IGUAL     reduce using rule 74 (expresion -> ID .)
    NO_IGUAL        reduce using rule 74 (expresion -> ID .)
    MAYOR           reduce using rule 74 (expresion -> ID .)
    MENOR           reduce using rule 74 (expresion -> ID .)
    MAYOR_IGUAL     reduce using rule 74 (expresion -> ID .)
    MENOR_IGUAL     reduce using rule 74 (expresion -> ID .)
    AND             reduce using rule 74 (expresion -> ID .)
    OR              reduce using rule 74 (expresion -> ID .)
    PUNTO           reduce using rule 74 (expresion -> ID .)
    PRINTLN         reduce using rule 74 (expresion -> ID .)
    LET             reduce using rule 74 (expresion -> ID .)
    ID              reduce using rule 74 (expresion -> ID .)
    IF              reduce using rule 74 (expresion -> ID .)
    MATCH           reduce using rule 74 (expresion -> ID .)
    I64             reduce using rule 74 (expresion -> ID .)
    PARA            reduce using rule 74 (expresion -> ID .)
    NOT             reduce using rule 74 (expresion -> ID .)
    CADENA          reduce using rule 74 (expresion -> ID .)
    ENTERO          reduce using rule 74 (expresion -> ID .)
    DECIMAL         reduce using rule 74 (expresion -> ID .)
    CARACTER        reduce using rule 74 (expresion -> ID .)
    TRUE            reduce using rule 74 (expresion -> ID .)
    FALSE           reduce using rule 74 (expresion -> ID .)
    $end            reduce using rule 74 (expresion -> ID .)
    LLAVC           reduce using rule 74 (expresion -> ID .)
    COMA            reduce using rule 74 (expresion -> ID .)


state 14

    (22) sent_if -> IF . expresion statement sent_else
    (26) exp_if -> IF . expresion exp_statement exp_else
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 49
    exp_if                         shift and go to state 19

state 15

    (30) match -> MATCH . expresion casos_match
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 50
    exp_if                         shift and go to state 19

state 16

    (55) expresion -> MENOS . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 51
    exp_if                         shift and go to state 19

state 17

    (53) expresion -> I64 . DOS_PT DOS_PT POW PARA expresion COMA expresion PARC

    DOS_PT          shift and go to state 52


state 18

    (64) expresion -> NOT . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 53
    exp_if                         shift and go to state 19

state 19

    (65) expresion -> exp_if .

    MAS             reduce using rule 65 (expresion -> exp_if .)
    MENOS           reduce using rule 65 (expresion -> exp_if .)
    MULTI           reduce using rule 65 (expresion -> exp_if .)
    DIV             reduce using rule 65 (expresion -> exp_if .)
    MODULO          reduce using rule 65 (expresion -> exp_if .)
    IGUAL_IGUAL     reduce using rule 65 (expresion -> exp_if .)
    NO_IGUAL        reduce using rule 65 (expresion -> exp_if .)
    MAYOR           reduce using rule 65 (expresion -> exp_if .)
    MENOR           reduce using rule 65 (expresion -> exp_if .)
    MAYOR_IGUAL     reduce using rule 65 (expresion -> exp_if .)
    MENOR_IGUAL     reduce using rule 65 (expresion -> exp_if .)
    AND             reduce using rule 65 (expresion -> exp_if .)
    OR              reduce using rule 65 (expresion -> exp_if .)
    PUNTO           reduce using rule 65 (expresion -> exp_if .)
    PRINTLN         reduce using rule 65 (expresion -> exp_if .)
    LET             reduce using rule 65 (expresion -> exp_if .)
    ID              reduce using rule 65 (expresion -> exp_if .)
    IF              reduce using rule 65 (expresion -> exp_if .)
    MATCH           reduce using rule 65 (expresion -> exp_if .)
    I64             reduce using rule 65 (expresion -> exp_if .)
    PARA            reduce using rule 65 (expresion -> exp_if .)
    NOT             reduce using rule 65 (expresion -> exp_if .)
    CADENA          reduce using rule 65 (expresion -> exp_if .)
    ENTERO          reduce using rule 65 (expresion -> exp_if .)
    DECIMAL         reduce using rule 65 (expresion -> exp_if .)
    CARACTER        reduce using rule 65 (expresion -> exp_if .)
    TRUE            reduce using rule 65 (expresion -> exp_if .)
    FALSE           reduce using rule 65 (expresion -> exp_if .)
    $end            reduce using rule 65 (expresion -> exp_if .)
    PARC            reduce using rule 65 (expresion -> exp_if .)
    LLAVA           reduce using rule 65 (expresion -> exp_if .)
    PT_COMA         reduce using rule 65 (expresion -> exp_if .)
    LLAVC           reduce using rule 65 (expresion -> exp_if .)
    ARROW           reduce using rule 65 (expresion -> exp_if .)
    SEP_MATCH       reduce using rule 65 (expresion -> exp_if .)
    COMA            reduce using rule 65 (expresion -> exp_if .)


state 20

    (69) expresion -> ENTERO .

    MAS             reduce using rule 69 (expresion -> ENTERO .)
    MENOS           reduce using rule 69 (expresion -> ENTERO .)
    MULTI           reduce using rule 69 (expresion -> ENTERO .)
    DIV             reduce using rule 69 (expresion -> ENTERO .)
    MODULO          reduce using rule 69 (expresion -> ENTERO .)
    IGUAL_IGUAL     reduce using rule 69 (expresion -> ENTERO .)
    NO_IGUAL        reduce using rule 69 (expresion -> ENTERO .)
    MAYOR           reduce using rule 69 (expresion -> ENTERO .)
    MENOR           reduce using rule 69 (expresion -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 69 (expresion -> ENTERO .)
    MENOR_IGUAL     reduce using rule 69 (expresion -> ENTERO .)
    AND             reduce using rule 69 (expresion -> ENTERO .)
    OR              reduce using rule 69 (expresion -> ENTERO .)
    PUNTO           reduce using rule 69 (expresion -> ENTERO .)
    PRINTLN         reduce using rule 69 (expresion -> ENTERO .)
    LET             reduce using rule 69 (expresion -> ENTERO .)
    ID              reduce using rule 69 (expresion -> ENTERO .)
    IF              reduce using rule 69 (expresion -> ENTERO .)
    MATCH           reduce using rule 69 (expresion -> ENTERO .)
    I64             reduce using rule 69 (expresion -> ENTERO .)
    PARA            reduce using rule 69 (expresion -> ENTERO .)
    NOT             reduce using rule 69 (expresion -> ENTERO .)
    CADENA          reduce using rule 69 (expresion -> ENTERO .)
    ENTERO          reduce using rule 69 (expresion -> ENTERO .)
    DECIMAL         reduce using rule 69 (expresion -> ENTERO .)
    CARACTER        reduce using rule 69 (expresion -> ENTERO .)
    TRUE            reduce using rule 69 (expresion -> ENTERO .)
    FALSE           reduce using rule 69 (expresion -> ENTERO .)
    $end            reduce using rule 69 (expresion -> ENTERO .)
    PARC            reduce using rule 69 (expresion -> ENTERO .)
    LLAVA           reduce using rule 69 (expresion -> ENTERO .)
    PT_COMA         reduce using rule 69 (expresion -> ENTERO .)
    LLAVC           reduce using rule 69 (expresion -> ENTERO .)
    ARROW           reduce using rule 69 (expresion -> ENTERO .)
    SEP_MATCH       reduce using rule 69 (expresion -> ENTERO .)
    COMA            reduce using rule 69 (expresion -> ENTERO .)


state 21

    (70) expresion -> DECIMAL .

    MAS             reduce using rule 70 (expresion -> DECIMAL .)
    MENOS           reduce using rule 70 (expresion -> DECIMAL .)
    MULTI           reduce using rule 70 (expresion -> DECIMAL .)
    DIV             reduce using rule 70 (expresion -> DECIMAL .)
    MODULO          reduce using rule 70 (expresion -> DECIMAL .)
    IGUAL_IGUAL     reduce using rule 70 (expresion -> DECIMAL .)
    NO_IGUAL        reduce using rule 70 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 70 (expresion -> DECIMAL .)
    MENOR           reduce using rule 70 (expresion -> DECIMAL .)
    MAYOR_IGUAL     reduce using rule 70 (expresion -> DECIMAL .)
    MENOR_IGUAL     reduce using rule 70 (expresion -> DECIMAL .)
    AND             reduce using rule 70 (expresion -> DECIMAL .)
    OR              reduce using rule 70 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 70 (expresion -> DECIMAL .)
    PRINTLN         reduce using rule 70 (expresion -> DECIMAL .)
    LET             reduce using rule 70 (expresion -> DECIMAL .)
    ID              reduce using rule 70 (expresion -> DECIMAL .)
    IF              reduce using rule 70 (expresion -> DECIMAL .)
    MATCH           reduce using rule 70 (expresion -> DECIMAL .)
    I64             reduce using rule 70 (expresion -> DECIMAL .)
    PARA            reduce using rule 70 (expresion -> DECIMAL .)
    NOT             reduce using rule 70 (expresion -> DECIMAL .)
    CADENA          reduce using rule 70 (expresion -> DECIMAL .)
    ENTERO          reduce using rule 70 (expresion -> DECIMAL .)
    DECIMAL         reduce using rule 70 (expresion -> DECIMAL .)
    CARACTER        reduce using rule 70 (expresion -> DECIMAL .)
    TRUE            reduce using rule 70 (expresion -> DECIMAL .)
    FALSE           reduce using rule 70 (expresion -> DECIMAL .)
    $end            reduce using rule 70 (expresion -> DECIMAL .)
    PARC            reduce using rule 70 (expresion -> DECIMAL .)
    LLAVA           reduce using rule 70 (expresion -> DECIMAL .)
    PT_COMA         reduce using rule 70 (expresion -> DECIMAL .)
    LLAVC           reduce using rule 70 (expresion -> DECIMAL .)
    ARROW           reduce using rule 70 (expresion -> DECIMAL .)
    SEP_MATCH       reduce using rule 70 (expresion -> DECIMAL .)
    COMA            reduce using rule 70 (expresion -> DECIMAL .)


state 22

    (71) expresion -> CARACTER .

    MAS             reduce using rule 71 (expresion -> CARACTER .)
    MENOS           reduce using rule 71 (expresion -> CARACTER .)
    MULTI           reduce using rule 71 (expresion -> CARACTER .)
    DIV             reduce using rule 71 (expresion -> CARACTER .)
    MODULO          reduce using rule 71 (expresion -> CARACTER .)
    IGUAL_IGUAL     reduce using rule 71 (expresion -> CARACTER .)
    NO_IGUAL        reduce using rule 71 (expresion -> CARACTER .)
    MAYOR           reduce using rule 71 (expresion -> CARACTER .)
    MENOR           reduce using rule 71 (expresion -> CARACTER .)
    MAYOR_IGUAL     reduce using rule 71 (expresion -> CARACTER .)
    MENOR_IGUAL     reduce using rule 71 (expresion -> CARACTER .)
    AND             reduce using rule 71 (expresion -> CARACTER .)
    OR              reduce using rule 71 (expresion -> CARACTER .)
    PUNTO           reduce using rule 71 (expresion -> CARACTER .)
    PRINTLN         reduce using rule 71 (expresion -> CARACTER .)
    LET             reduce using rule 71 (expresion -> CARACTER .)
    ID              reduce using rule 71 (expresion -> CARACTER .)
    IF              reduce using rule 71 (expresion -> CARACTER .)
    MATCH           reduce using rule 71 (expresion -> CARACTER .)
    I64             reduce using rule 71 (expresion -> CARACTER .)
    PARA            reduce using rule 71 (expresion -> CARACTER .)
    NOT             reduce using rule 71 (expresion -> CARACTER .)
    CADENA          reduce using rule 71 (expresion -> CARACTER .)
    ENTERO          reduce using rule 71 (expresion -> CARACTER .)
    DECIMAL         reduce using rule 71 (expresion -> CARACTER .)
    CARACTER        reduce using rule 71 (expresion -> CARACTER .)
    TRUE            reduce using rule 71 (expresion -> CARACTER .)
    FALSE           reduce using rule 71 (expresion -> CARACTER .)
    $end            reduce using rule 71 (expresion -> CARACTER .)
    PARC            reduce using rule 71 (expresion -> CARACTER .)
    LLAVA           reduce using rule 71 (expresion -> CARACTER .)
    PT_COMA         reduce using rule 71 (expresion -> CARACTER .)
    LLAVC           reduce using rule 71 (expresion -> CARACTER .)
    ARROW           reduce using rule 71 (expresion -> CARACTER .)
    SEP_MATCH       reduce using rule 71 (expresion -> CARACTER .)
    COMA            reduce using rule 71 (expresion -> CARACTER .)


state 23

    (72) expresion -> TRUE .

    MAS             reduce using rule 72 (expresion -> TRUE .)
    MENOS           reduce using rule 72 (expresion -> TRUE .)
    MULTI           reduce using rule 72 (expresion -> TRUE .)
    DIV             reduce using rule 72 (expresion -> TRUE .)
    MODULO          reduce using rule 72 (expresion -> TRUE .)
    IGUAL_IGUAL     reduce using rule 72 (expresion -> TRUE .)
    NO_IGUAL        reduce using rule 72 (expresion -> TRUE .)
    MAYOR           reduce using rule 72 (expresion -> TRUE .)
    MENOR           reduce using rule 72 (expresion -> TRUE .)
    MAYOR_IGUAL     reduce using rule 72 (expresion -> TRUE .)
    MENOR_IGUAL     reduce using rule 72 (expresion -> TRUE .)
    AND             reduce using rule 72 (expresion -> TRUE .)
    OR              reduce using rule 72 (expresion -> TRUE .)
    PUNTO           reduce using rule 72 (expresion -> TRUE .)
    PRINTLN         reduce using rule 72 (expresion -> TRUE .)
    LET             reduce using rule 72 (expresion -> TRUE .)
    ID              reduce using rule 72 (expresion -> TRUE .)
    IF              reduce using rule 72 (expresion -> TRUE .)
    MATCH           reduce using rule 72 (expresion -> TRUE .)
    I64             reduce using rule 72 (expresion -> TRUE .)
    PARA            reduce using rule 72 (expresion -> TRUE .)
    NOT             reduce using rule 72 (expresion -> TRUE .)
    CADENA          reduce using rule 72 (expresion -> TRUE .)
    ENTERO          reduce using rule 72 (expresion -> TRUE .)
    DECIMAL         reduce using rule 72 (expresion -> TRUE .)
    CARACTER        reduce using rule 72 (expresion -> TRUE .)
    TRUE            reduce using rule 72 (expresion -> TRUE .)
    FALSE           reduce using rule 72 (expresion -> TRUE .)
    $end            reduce using rule 72 (expresion -> TRUE .)
    PARC            reduce using rule 72 (expresion -> TRUE .)
    LLAVA           reduce using rule 72 (expresion -> TRUE .)
    PT_COMA         reduce using rule 72 (expresion -> TRUE .)
    LLAVC           reduce using rule 72 (expresion -> TRUE .)
    ARROW           reduce using rule 72 (expresion -> TRUE .)
    SEP_MATCH       reduce using rule 72 (expresion -> TRUE .)
    COMA            reduce using rule 72 (expresion -> TRUE .)


state 24

    (73) expresion -> FALSE .

    MAS             reduce using rule 73 (expresion -> FALSE .)
    MENOS           reduce using rule 73 (expresion -> FALSE .)
    MULTI           reduce using rule 73 (expresion -> FALSE .)
    DIV             reduce using rule 73 (expresion -> FALSE .)
    MODULO          reduce using rule 73 (expresion -> FALSE .)
    IGUAL_IGUAL     reduce using rule 73 (expresion -> FALSE .)
    NO_IGUAL        reduce using rule 73 (expresion -> FALSE .)
    MAYOR           reduce using rule 73 (expresion -> FALSE .)
    MENOR           reduce using rule 73 (expresion -> FALSE .)
    MAYOR_IGUAL     reduce using rule 73 (expresion -> FALSE .)
    MENOR_IGUAL     reduce using rule 73 (expresion -> FALSE .)
    AND             reduce using rule 73 (expresion -> FALSE .)
    OR              reduce using rule 73 (expresion -> FALSE .)
    PUNTO           reduce using rule 73 (expresion -> FALSE .)
    PRINTLN         reduce using rule 73 (expresion -> FALSE .)
    LET             reduce using rule 73 (expresion -> FALSE .)
    ID              reduce using rule 73 (expresion -> FALSE .)
    IF              reduce using rule 73 (expresion -> FALSE .)
    MATCH           reduce using rule 73 (expresion -> FALSE .)
    I64             reduce using rule 73 (expresion -> FALSE .)
    PARA            reduce using rule 73 (expresion -> FALSE .)
    NOT             reduce using rule 73 (expresion -> FALSE .)
    CADENA          reduce using rule 73 (expresion -> FALSE .)
    ENTERO          reduce using rule 73 (expresion -> FALSE .)
    DECIMAL         reduce using rule 73 (expresion -> FALSE .)
    CARACTER        reduce using rule 73 (expresion -> FALSE .)
    TRUE            reduce using rule 73 (expresion -> FALSE .)
    FALSE           reduce using rule 73 (expresion -> FALSE .)
    $end            reduce using rule 73 (expresion -> FALSE .)
    PARC            reduce using rule 73 (expresion -> FALSE .)
    LLAVA           reduce using rule 73 (expresion -> FALSE .)
    PT_COMA         reduce using rule 73 (expresion -> FALSE .)
    LLAVC           reduce using rule 73 (expresion -> FALSE .)
    ARROW           reduce using rule 73 (expresion -> FALSE .)
    SEP_MATCH       reduce using rule 73 (expresion -> FALSE .)
    COMA            reduce using rule 73 (expresion -> FALSE .)


state 25

    (2) instrucciones -> instrucciones instruccion .

    PRINTLN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    I64             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PARA            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MENOS           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NOT             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CADENA          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ENTERO          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DECIMAL         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CARACTER        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    TRUE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FALSE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVC           reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 26

    (4) instruccion -> prints PT_COMA .

    PRINTLN         reduce using rule 4 (instruccion -> prints PT_COMA .)
    LET             reduce using rule 4 (instruccion -> prints PT_COMA .)
    ID              reduce using rule 4 (instruccion -> prints PT_COMA .)
    IF              reduce using rule 4 (instruccion -> prints PT_COMA .)
    MATCH           reduce using rule 4 (instruccion -> prints PT_COMA .)
    I64             reduce using rule 4 (instruccion -> prints PT_COMA .)
    PARA            reduce using rule 4 (instruccion -> prints PT_COMA .)
    MENOS           reduce using rule 4 (instruccion -> prints PT_COMA .)
    NOT             reduce using rule 4 (instruccion -> prints PT_COMA .)
    CADENA          reduce using rule 4 (instruccion -> prints PT_COMA .)
    ENTERO          reduce using rule 4 (instruccion -> prints PT_COMA .)
    DECIMAL         reduce using rule 4 (instruccion -> prints PT_COMA .)
    CARACTER        reduce using rule 4 (instruccion -> prints PT_COMA .)
    TRUE            reduce using rule 4 (instruccion -> prints PT_COMA .)
    FALSE           reduce using rule 4 (instruccion -> prints PT_COMA .)
    $end            reduce using rule 4 (instruccion -> prints PT_COMA .)
    LLAVC           reduce using rule 4 (instruccion -> prints PT_COMA .)
    COMA            reduce using rule 4 (instruccion -> prints PT_COMA .)


state 27

    (5) instruccion -> declaracion PT_COMA .

    PRINTLN         reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    LET             reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    ID              reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    IF              reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    MATCH           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    I64             reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    PARA            reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    MENOS           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    NOT             reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    CADENA          reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    ENTERO          reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    DECIMAL         reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    CARACTER        reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    TRUE            reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    FALSE           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    $end            reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    LLAVC           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    COMA            reduce using rule 5 (instruccion -> declaracion PT_COMA .)


state 28

    (48) expresion -> expresion MAS . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 54
    exp_if                         shift and go to state 19

state 29

    (49) expresion -> expresion MENOS . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 55
    exp_if                         shift and go to state 19

state 30

    (50) expresion -> expresion MULTI . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 56
    exp_if                         shift and go to state 19

state 31

    (51) expresion -> expresion DIV . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 57
    exp_if                         shift and go to state 19

state 32

    (52) expresion -> expresion MODULO . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 58
    exp_if                         shift and go to state 19

state 33

    (56) expresion -> expresion IGUAL_IGUAL . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 59
    exp_if                         shift and go to state 19

state 34

    (57) expresion -> expresion NO_IGUAL . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 60
    exp_if                         shift and go to state 19

state 35

    (58) expresion -> expresion MAYOR . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 61
    exp_if                         shift and go to state 19

state 36

    (59) expresion -> expresion MENOR . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 62
    exp_if                         shift and go to state 19

state 37

    (60) expresion -> expresion MAYOR_IGUAL . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 63
    exp_if                         shift and go to state 19

state 38

    (61) expresion -> expresion MENOR_IGUAL . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 64
    exp_if                         shift and go to state 19

state 39

    (62) expresion -> expresion AND . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 65
    exp_if                         shift and go to state 19

state 40

    (63) expresion -> expresion OR . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 66
    exp_if                         shift and go to state 19

state 41

    (66) expresion -> expresion PUNTO . TO_OWNED PARA PARC
    (67) expresion -> expresion PUNTO . TO_STRING PARA PARC

    TO_OWNED        shift and go to state 67
    TO_STRING       shift and go to state 68


state 42

    (9) prints -> PRINTLN ADMIRACION . PARA CADENA COMA list_exp PARC
    (10) prints -> PRINTLN ADMIRACION . PARA CADENA PARC

    PARA            shift and go to state 69


state 43

    (54) expresion -> PARA expresion . PARC
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    PARC            shift and go to state 70
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    PUNTO           shift and go to state 41


state 44

    (74) expresion -> ID .

    PARC            reduce using rule 74 (expresion -> ID .)
    MAS             reduce using rule 74 (expresion -> ID .)
    MENOS           reduce using rule 74 (expresion -> ID .)
    MULTI           reduce using rule 74 (expresion -> ID .)
    DIV             reduce using rule 74 (expresion -> ID .)
    MODULO          reduce using rule 74 (expresion -> ID .)
    IGUAL_IGUAL     reduce using rule 74 (expresion -> ID .)
    NO_IGUAL        reduce using rule 74 (expresion -> ID .)
    MAYOR           reduce using rule 74 (expresion -> ID .)
    MENOR           reduce using rule 74 (expresion -> ID .)
    MAYOR_IGUAL     reduce using rule 74 (expresion -> ID .)
    MENOR_IGUAL     reduce using rule 74 (expresion -> ID .)
    AND             reduce using rule 74 (expresion -> ID .)
    OR              reduce using rule 74 (expresion -> ID .)
    PUNTO           reduce using rule 74 (expresion -> ID .)
    LLAVA           reduce using rule 74 (expresion -> ID .)
    PRINTLN         reduce using rule 74 (expresion -> ID .)
    LET             reduce using rule 74 (expresion -> ID .)
    ID              reduce using rule 74 (expresion -> ID .)
    IF              reduce using rule 74 (expresion -> ID .)
    MATCH           reduce using rule 74 (expresion -> ID .)
    I64             reduce using rule 74 (expresion -> ID .)
    PARA            reduce using rule 74 (expresion -> ID .)
    NOT             reduce using rule 74 (expresion -> ID .)
    CADENA          reduce using rule 74 (expresion -> ID .)
    ENTERO          reduce using rule 74 (expresion -> ID .)
    DECIMAL         reduce using rule 74 (expresion -> ID .)
    CARACTER        reduce using rule 74 (expresion -> ID .)
    TRUE            reduce using rule 74 (expresion -> ID .)
    FALSE           reduce using rule 74 (expresion -> ID .)
    $end            reduce using rule 74 (expresion -> ID .)
    PT_COMA         reduce using rule 74 (expresion -> ID .)
    LLAVC           reduce using rule 74 (expresion -> ID .)
    ARROW           reduce using rule 74 (expresion -> ID .)
    SEP_MATCH       reduce using rule 74 (expresion -> ID .)
    COMA            reduce using rule 74 (expresion -> ID .)


state 45

    (26) exp_if -> IF . expresion exp_statement exp_else
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 71
    exp_if                         shift and go to state 19

state 46

    (13) declaracion -> LET MUT . ID DOS_PT tipo IGUAL expresion
    (14) declaracion -> LET MUT . ID DOS_PT tipo
    (15) declaracion -> LET MUT . ID IGUAL expresion
    (16) declaracion -> LET MUT . ID

    ID              shift and go to state 72


state 47

    (17) declaracion -> LET ID . DOS_PT tipo IGUAL expresion
    (18) declaracion -> LET ID . DOS_PT tipo
    (19) declaracion -> LET ID . IGUAL expresion
    (20) declaracion -> LET ID .

    DOS_PT          shift and go to state 73
    IGUAL           shift and go to state 74
    PT_COMA         reduce using rule 20 (declaracion -> LET ID .)


state 48

    (21) declaracion -> ID IGUAL . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 75
    exp_if                         shift and go to state 19

state 49

    (22) sent_if -> IF expresion . statement sent_else
    (26) exp_if -> IF expresion . exp_statement exp_else
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (40) statement -> . LLAVA instrucciones LLAVC
    (41) statement -> . LLAVA LLAVC
    (29) exp_statement -> . LLAVA instrucciones LLAVC

    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    PUNTO           shift and go to state 41
    LLAVA           shift and go to state 78

    statement                      shift and go to state 76
    exp_statement                  shift and go to state 77

state 50

    (30) match -> MATCH expresion . casos_match
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (31) casos_match -> . LLAVA lista_casos default LLAVC

    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    PUNTO           shift and go to state 41
    LLAVA           shift and go to state 80

    casos_match                    shift and go to state 79

state 51

    (55) expresion -> MENOS expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    MAS             reduce using rule 55 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 55 (expresion -> MENOS expresion .)
    MULTI           reduce using rule 55 (expresion -> MENOS expresion .)
    DIV             reduce using rule 55 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 55 (expresion -> MENOS expresion .)
    IGUAL_IGUAL     reduce using rule 55 (expresion -> MENOS expresion .)
    NO_IGUAL        reduce using rule 55 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 55 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 55 (expresion -> MENOS expresion .)
    MAYOR_IGUAL     reduce using rule 55 (expresion -> MENOS expresion .)
    MENOR_IGUAL     reduce using rule 55 (expresion -> MENOS expresion .)
    AND             reduce using rule 55 (expresion -> MENOS expresion .)
    OR              reduce using rule 55 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 55 (expresion -> MENOS expresion .)
    PRINTLN         reduce using rule 55 (expresion -> MENOS expresion .)
    LET             reduce using rule 55 (expresion -> MENOS expresion .)
    ID              reduce using rule 55 (expresion -> MENOS expresion .)
    IF              reduce using rule 55 (expresion -> MENOS expresion .)
    MATCH           reduce using rule 55 (expresion -> MENOS expresion .)
    I64             reduce using rule 55 (expresion -> MENOS expresion .)
    PARA            reduce using rule 55 (expresion -> MENOS expresion .)
    NOT             reduce using rule 55 (expresion -> MENOS expresion .)
    CADENA          reduce using rule 55 (expresion -> MENOS expresion .)
    ENTERO          reduce using rule 55 (expresion -> MENOS expresion .)
    DECIMAL         reduce using rule 55 (expresion -> MENOS expresion .)
    CARACTER        reduce using rule 55 (expresion -> MENOS expresion .)
    TRUE            reduce using rule 55 (expresion -> MENOS expresion .)
    FALSE           reduce using rule 55 (expresion -> MENOS expresion .)
    $end            reduce using rule 55 (expresion -> MENOS expresion .)
    PARC            reduce using rule 55 (expresion -> MENOS expresion .)
    LLAVA           reduce using rule 55 (expresion -> MENOS expresion .)
    PT_COMA         reduce using rule 55 (expresion -> MENOS expresion .)
    LLAVC           reduce using rule 55 (expresion -> MENOS expresion .)
    ARROW           reduce using rule 55 (expresion -> MENOS expresion .)
    SEP_MATCH       reduce using rule 55 (expresion -> MENOS expresion .)
    COMA            reduce using rule 55 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 28 ]
  ! MENOS           [ shift and go to state 29 ]
  ! MULTI           [ shift and go to state 30 ]
  ! DIV             [ shift and go to state 31 ]
  ! MODULO          [ shift and go to state 32 ]
  ! IGUAL_IGUAL     [ shift and go to state 33 ]
  ! NO_IGUAL        [ shift and go to state 34 ]
  ! MAYOR           [ shift and go to state 35 ]
  ! MENOR           [ shift and go to state 36 ]
  ! MAYOR_IGUAL     [ shift and go to state 37 ]
  ! MENOR_IGUAL     [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! PUNTO           [ shift and go to state 41 ]


state 52

    (53) expresion -> I64 DOS_PT . DOS_PT POW PARA expresion COMA expresion PARC

    DOS_PT          shift and go to state 81


state 53

    (64) expresion -> NOT expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    AND             reduce using rule 64 (expresion -> NOT expresion .)
    OR              reduce using rule 64 (expresion -> NOT expresion .)
    PUNTO           reduce using rule 64 (expresion -> NOT expresion .)
    PRINTLN         reduce using rule 64 (expresion -> NOT expresion .)
    LET             reduce using rule 64 (expresion -> NOT expresion .)
    ID              reduce using rule 64 (expresion -> NOT expresion .)
    IF              reduce using rule 64 (expresion -> NOT expresion .)
    MATCH           reduce using rule 64 (expresion -> NOT expresion .)
    I64             reduce using rule 64 (expresion -> NOT expresion .)
    PARA            reduce using rule 64 (expresion -> NOT expresion .)
    NOT             reduce using rule 64 (expresion -> NOT expresion .)
    CADENA          reduce using rule 64 (expresion -> NOT expresion .)
    ENTERO          reduce using rule 64 (expresion -> NOT expresion .)
    DECIMAL         reduce using rule 64 (expresion -> NOT expresion .)
    CARACTER        reduce using rule 64 (expresion -> NOT expresion .)
    TRUE            reduce using rule 64 (expresion -> NOT expresion .)
    FALSE           reduce using rule 64 (expresion -> NOT expresion .)
    $end            reduce using rule 64 (expresion -> NOT expresion .)
    PARC            reduce using rule 64 (expresion -> NOT expresion .)
    LLAVA           reduce using rule 64 (expresion -> NOT expresion .)
    PT_COMA         reduce using rule 64 (expresion -> NOT expresion .)
    LLAVC           reduce using rule 64 (expresion -> NOT expresion .)
    ARROW           reduce using rule 64 (expresion -> NOT expresion .)
    SEP_MATCH       reduce using rule 64 (expresion -> NOT expresion .)
    COMA            reduce using rule 64 (expresion -> NOT expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38

  ! MAS             [ reduce using rule 64 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 64 (expresion -> NOT expresion .) ]
  ! MULTI           [ reduce using rule 64 (expresion -> NOT expresion .) ]
  ! DIV             [ reduce using rule 64 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 64 (expresion -> NOT expresion .) ]
  ! IGUAL_IGUAL     [ reduce using rule 64 (expresion -> NOT expresion .) ]
  ! NO_IGUAL        [ reduce using rule 64 (expresion -> NOT expresion .) ]
  ! MAYOR           [ reduce using rule 64 (expresion -> NOT expresion .) ]
  ! MENOR           [ reduce using rule 64 (expresion -> NOT expresion .) ]
  ! MAYOR_IGUAL     [ reduce using rule 64 (expresion -> NOT expresion .) ]
  ! MENOR_IGUAL     [ reduce using rule 64 (expresion -> NOT expresion .) ]
  ! AND             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! PUNTO           [ shift and go to state 41 ]


state 54

    (48) expresion -> expresion MAS expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    MAS             reduce using rule 48 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 48 (expresion -> expresion MAS expresion .)
    IGUAL_IGUAL     reduce using rule 48 (expresion -> expresion MAS expresion .)
    NO_IGUAL        reduce using rule 48 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 48 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 48 (expresion -> expresion MAS expresion .)
    MAYOR_IGUAL     reduce using rule 48 (expresion -> expresion MAS expresion .)
    MENOR_IGUAL     reduce using rule 48 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 48 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 48 (expresion -> expresion MAS expresion .)
    PUNTO           reduce using rule 48 (expresion -> expresion MAS expresion .)
    PRINTLN         reduce using rule 48 (expresion -> expresion MAS expresion .)
    LET             reduce using rule 48 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 48 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 48 (expresion -> expresion MAS expresion .)
    MATCH           reduce using rule 48 (expresion -> expresion MAS expresion .)
    I64             reduce using rule 48 (expresion -> expresion MAS expresion .)
    PARA            reduce using rule 48 (expresion -> expresion MAS expresion .)
    NOT             reduce using rule 48 (expresion -> expresion MAS expresion .)
    CADENA          reduce using rule 48 (expresion -> expresion MAS expresion .)
    ENTERO          reduce using rule 48 (expresion -> expresion MAS expresion .)
    DECIMAL         reduce using rule 48 (expresion -> expresion MAS expresion .)
    CARACTER        reduce using rule 48 (expresion -> expresion MAS expresion .)
    TRUE            reduce using rule 48 (expresion -> expresion MAS expresion .)
    FALSE           reduce using rule 48 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 48 (expresion -> expresion MAS expresion .)
    PARC            reduce using rule 48 (expresion -> expresion MAS expresion .)
    LLAVA           reduce using rule 48 (expresion -> expresion MAS expresion .)
    PT_COMA         reduce using rule 48 (expresion -> expresion MAS expresion .)
    LLAVC           reduce using rule 48 (expresion -> expresion MAS expresion .)
    ARROW           reduce using rule 48 (expresion -> expresion MAS expresion .)
    SEP_MATCH       reduce using rule 48 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 48 (expresion -> expresion MAS expresion .)
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32

  ! MULTI           [ reduce using rule 48 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 48 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 48 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 28 ]
  ! MENOS           [ shift and go to state 29 ]
  ! IGUAL_IGUAL     [ shift and go to state 33 ]
  ! NO_IGUAL        [ shift and go to state 34 ]
  ! MAYOR           [ shift and go to state 35 ]
  ! MENOR           [ shift and go to state 36 ]
  ! MAYOR_IGUAL     [ shift and go to state 37 ]
  ! MENOR_IGUAL     [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! PUNTO           [ shift and go to state 41 ]


state 55

    (49) expresion -> expresion MENOS expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    MAS             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    IGUAL_IGUAL     reduce using rule 49 (expresion -> expresion MENOS expresion .)
    NO_IGUAL        reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MAYOR_IGUAL     reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MENOR_IGUAL     reduce using rule 49 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 49 (expresion -> expresion MENOS expresion .)
    PUNTO           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    PRINTLN         reduce using rule 49 (expresion -> expresion MENOS expresion .)
    LET             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 49 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MATCH           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    I64             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    PARA            reduce using rule 49 (expresion -> expresion MENOS expresion .)
    NOT             reduce using rule 49 (expresion -> expresion MENOS expresion .)
    CADENA          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 49 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 49 (expresion -> expresion MENOS expresion .)
    CARACTER        reduce using rule 49 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 49 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 49 (expresion -> expresion MENOS expresion .)
    PARC            reduce using rule 49 (expresion -> expresion MENOS expresion .)
    LLAVA           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    PT_COMA         reduce using rule 49 (expresion -> expresion MENOS expresion .)
    LLAVC           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    ARROW           reduce using rule 49 (expresion -> expresion MENOS expresion .)
    SEP_MATCH       reduce using rule 49 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 49 (expresion -> expresion MENOS expresion .)
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32

  ! MULTI           [ reduce using rule 49 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 49 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 49 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 28 ]
  ! MENOS           [ shift and go to state 29 ]
  ! IGUAL_IGUAL     [ shift and go to state 33 ]
  ! NO_IGUAL        [ shift and go to state 34 ]
  ! MAYOR           [ shift and go to state 35 ]
  ! MENOR           [ shift and go to state 36 ]
  ! MAYOR_IGUAL     [ shift and go to state 37 ]
  ! MENOR_IGUAL     [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! PUNTO           [ shift and go to state 41 ]


state 56

    (50) expresion -> expresion MULTI expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    MAS             reduce using rule 50 (expresion -> expresion MULTI expresion .)
    MENOS           reduce using rule 50 (expresion -> expresion MULTI expresion .)
    MULTI           reduce using rule 50 (expresion -> expresion MULTI expresion .)
    DIV             reduce using rule 50 (expresion -> expresion MULTI expresion .)
    MODULO          reduce using rule 50 (expresion -> expresion MULTI expresion .)
    IGUAL_IGUAL     reduce using rule 50 (expresion -> expresion MULTI expresion .)
    NO_IGUAL        reduce using rule 50 (expresion -> expresion MULTI expresion .)
    MAYOR           reduce using rule 50 (expresion -> expresion MULTI expresion .)
    MENOR           reduce using rule 50 (expresion -> expresion MULTI expresion .)
    MAYOR_IGUAL     reduce using rule 50 (expresion -> expresion MULTI expresion .)
    MENOR_IGUAL     reduce using rule 50 (expresion -> expresion MULTI expresion .)
    AND             reduce using rule 50 (expresion -> expresion MULTI expresion .)
    OR              reduce using rule 50 (expresion -> expresion MULTI expresion .)
    PUNTO           reduce using rule 50 (expresion -> expresion MULTI expresion .)
    PRINTLN         reduce using rule 50 (expresion -> expresion MULTI expresion .)
    LET             reduce using rule 50 (expresion -> expresion MULTI expresion .)
    ID              reduce using rule 50 (expresion -> expresion MULTI expresion .)
    IF              reduce using rule 50 (expresion -> expresion MULTI expresion .)
    MATCH           reduce using rule 50 (expresion -> expresion MULTI expresion .)
    I64             reduce using rule 50 (expresion -> expresion MULTI expresion .)
    PARA            reduce using rule 50 (expresion -> expresion MULTI expresion .)
    NOT             reduce using rule 50 (expresion -> expresion MULTI expresion .)
    CADENA          reduce using rule 50 (expresion -> expresion MULTI expresion .)
    ENTERO          reduce using rule 50 (expresion -> expresion MULTI expresion .)
    DECIMAL         reduce using rule 50 (expresion -> expresion MULTI expresion .)
    CARACTER        reduce using rule 50 (expresion -> expresion MULTI expresion .)
    TRUE            reduce using rule 50 (expresion -> expresion MULTI expresion .)
    FALSE           reduce using rule 50 (expresion -> expresion MULTI expresion .)
    $end            reduce using rule 50 (expresion -> expresion MULTI expresion .)
    PARC            reduce using rule 50 (expresion -> expresion MULTI expresion .)
    LLAVA           reduce using rule 50 (expresion -> expresion MULTI expresion .)
    PT_COMA         reduce using rule 50 (expresion -> expresion MULTI expresion .)
    LLAVC           reduce using rule 50 (expresion -> expresion MULTI expresion .)
    ARROW           reduce using rule 50 (expresion -> expresion MULTI expresion .)
    SEP_MATCH       reduce using rule 50 (expresion -> expresion MULTI expresion .)
    COMA            reduce using rule 50 (expresion -> expresion MULTI expresion .)

  ! MAS             [ shift and go to state 28 ]
  ! MENOS           [ shift and go to state 29 ]
  ! MULTI           [ shift and go to state 30 ]
  ! DIV             [ shift and go to state 31 ]
  ! MODULO          [ shift and go to state 32 ]
  ! IGUAL_IGUAL     [ shift and go to state 33 ]
  ! NO_IGUAL        [ shift and go to state 34 ]
  ! MAYOR           [ shift and go to state 35 ]
  ! MENOR           [ shift and go to state 36 ]
  ! MAYOR_IGUAL     [ shift and go to state 37 ]
  ! MENOR_IGUAL     [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! PUNTO           [ shift and go to state 41 ]


state 57

    (51) expresion -> expresion DIV expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    MAS             reduce using rule 51 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 51 (expresion -> expresion DIV expresion .)
    MULTI           reduce using rule 51 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 51 (expresion -> expresion DIV expresion .)
    MODULO          reduce using rule 51 (expresion -> expresion DIV expresion .)
    IGUAL_IGUAL     reduce using rule 51 (expresion -> expresion DIV expresion .)
    NO_IGUAL        reduce using rule 51 (expresion -> expresion DIV expresion .)
    MAYOR           reduce using rule 51 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 51 (expresion -> expresion DIV expresion .)
    MAYOR_IGUAL     reduce using rule 51 (expresion -> expresion DIV expresion .)
    MENOR_IGUAL     reduce using rule 51 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 51 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 51 (expresion -> expresion DIV expresion .)
    PUNTO           reduce using rule 51 (expresion -> expresion DIV expresion .)
    PRINTLN         reduce using rule 51 (expresion -> expresion DIV expresion .)
    LET             reduce using rule 51 (expresion -> expresion DIV expresion .)
    ID              reduce using rule 51 (expresion -> expresion DIV expresion .)
    IF              reduce using rule 51 (expresion -> expresion DIV expresion .)
    MATCH           reduce using rule 51 (expresion -> expresion DIV expresion .)
    I64             reduce using rule 51 (expresion -> expresion DIV expresion .)
    PARA            reduce using rule 51 (expresion -> expresion DIV expresion .)
    NOT             reduce using rule 51 (expresion -> expresion DIV expresion .)
    CADENA          reduce using rule 51 (expresion -> expresion DIV expresion .)
    ENTERO          reduce using rule 51 (expresion -> expresion DIV expresion .)
    DECIMAL         reduce using rule 51 (expresion -> expresion DIV expresion .)
    CARACTER        reduce using rule 51 (expresion -> expresion DIV expresion .)
    TRUE            reduce using rule 51 (expresion -> expresion DIV expresion .)
    FALSE           reduce using rule 51 (expresion -> expresion DIV expresion .)
    $end            reduce using rule 51 (expresion -> expresion DIV expresion .)
    PARC            reduce using rule 51 (expresion -> expresion DIV expresion .)
    LLAVA           reduce using rule 51 (expresion -> expresion DIV expresion .)
    PT_COMA         reduce using rule 51 (expresion -> expresion DIV expresion .)
    LLAVC           reduce using rule 51 (expresion -> expresion DIV expresion .)
    ARROW           reduce using rule 51 (expresion -> expresion DIV expresion .)
    SEP_MATCH       reduce using rule 51 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 51 (expresion -> expresion DIV expresion .)

  ! MAS             [ shift and go to state 28 ]
  ! MENOS           [ shift and go to state 29 ]
  ! MULTI           [ shift and go to state 30 ]
  ! DIV             [ shift and go to state 31 ]
  ! MODULO          [ shift and go to state 32 ]
  ! IGUAL_IGUAL     [ shift and go to state 33 ]
  ! NO_IGUAL        [ shift and go to state 34 ]
  ! MAYOR           [ shift and go to state 35 ]
  ! MENOR           [ shift and go to state 36 ]
  ! MAYOR_IGUAL     [ shift and go to state 37 ]
  ! MENOR_IGUAL     [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! PUNTO           [ shift and go to state 41 ]


state 58

    (52) expresion -> expresion MODULO expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    MAS             reduce using rule 52 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 52 (expresion -> expresion MODULO expresion .)
    MULTI           reduce using rule 52 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 52 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 52 (expresion -> expresion MODULO expresion .)
    IGUAL_IGUAL     reduce using rule 52 (expresion -> expresion MODULO expresion .)
    NO_IGUAL        reduce using rule 52 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 52 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 52 (expresion -> expresion MODULO expresion .)
    MAYOR_IGUAL     reduce using rule 52 (expresion -> expresion MODULO expresion .)
    MENOR_IGUAL     reduce using rule 52 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 52 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 52 (expresion -> expresion MODULO expresion .)
    PUNTO           reduce using rule 52 (expresion -> expresion MODULO expresion .)
    PRINTLN         reduce using rule 52 (expresion -> expresion MODULO expresion .)
    LET             reduce using rule 52 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 52 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 52 (expresion -> expresion MODULO expresion .)
    MATCH           reduce using rule 52 (expresion -> expresion MODULO expresion .)
    I64             reduce using rule 52 (expresion -> expresion MODULO expresion .)
    PARA            reduce using rule 52 (expresion -> expresion MODULO expresion .)
    NOT             reduce using rule 52 (expresion -> expresion MODULO expresion .)
    CADENA          reduce using rule 52 (expresion -> expresion MODULO expresion .)
    ENTERO          reduce using rule 52 (expresion -> expresion MODULO expresion .)
    DECIMAL         reduce using rule 52 (expresion -> expresion MODULO expresion .)
    CARACTER        reduce using rule 52 (expresion -> expresion MODULO expresion .)
    TRUE            reduce using rule 52 (expresion -> expresion MODULO expresion .)
    FALSE           reduce using rule 52 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 52 (expresion -> expresion MODULO expresion .)
    PARC            reduce using rule 52 (expresion -> expresion MODULO expresion .)
    LLAVA           reduce using rule 52 (expresion -> expresion MODULO expresion .)
    PT_COMA         reduce using rule 52 (expresion -> expresion MODULO expresion .)
    LLAVC           reduce using rule 52 (expresion -> expresion MODULO expresion .)
    ARROW           reduce using rule 52 (expresion -> expresion MODULO expresion .)
    SEP_MATCH       reduce using rule 52 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 52 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 28 ]
  ! MENOS           [ shift and go to state 29 ]
  ! MULTI           [ shift and go to state 30 ]
  ! DIV             [ shift and go to state 31 ]
  ! MODULO          [ shift and go to state 32 ]
  ! IGUAL_IGUAL     [ shift and go to state 33 ]
  ! NO_IGUAL        [ shift and go to state 34 ]
  ! MAYOR           [ shift and go to state 35 ]
  ! MENOR           [ shift and go to state 36 ]
  ! MAYOR_IGUAL     [ shift and go to state 37 ]
  ! MENOR_IGUAL     [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! PUNTO           [ shift and go to state 41 ]


state 59

    (56) expresion -> expresion IGUAL_IGUAL expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    IGUAL_IGUAL     reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    NO_IGUAL        reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    MAYOR           reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    MENOR           reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    MAYOR_IGUAL     reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    MENOR_IGUAL     reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    AND             reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    OR              reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    PUNTO           reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    PRINTLN         reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    LET             reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    ID              reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    IF              reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    MATCH           reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    I64             reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    PARA            reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    NOT             reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    CADENA          reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    ENTERO          reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    DECIMAL         reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    CARACTER        reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    TRUE            reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    FALSE           reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    $end            reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    PARC            reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    LLAVA           reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    PT_COMA         reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    LLAVC           reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    ARROW           reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    SEP_MATCH       reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    COMA            reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32

  ! MAS             [ reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 56 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 33 ]
  ! NO_IGUAL        [ shift and go to state 34 ]
  ! MAYOR           [ shift and go to state 35 ]
  ! MENOR           [ shift and go to state 36 ]
  ! MAYOR_IGUAL     [ shift and go to state 37 ]
  ! MENOR_IGUAL     [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! PUNTO           [ shift and go to state 41 ]


state 60

    (57) expresion -> expresion NO_IGUAL expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    IGUAL_IGUAL     reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    NO_IGUAL        reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    MAYOR           reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    MENOR           reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    MAYOR_IGUAL     reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    MENOR_IGUAL     reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    AND             reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    OR              reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    PUNTO           reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    PRINTLN         reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    LET             reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    ID              reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    IF              reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    MATCH           reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    I64             reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    PARA            reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    NOT             reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    CADENA          reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    ENTERO          reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    DECIMAL         reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    CARACTER        reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    TRUE            reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    FALSE           reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    $end            reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    PARC            reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    LLAVA           reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    PT_COMA         reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    LLAVC           reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    ARROW           reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    SEP_MATCH       reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    COMA            reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32

  ! MAS             [ reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 57 (expresion -> expresion NO_IGUAL expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 33 ]
  ! NO_IGUAL        [ shift and go to state 34 ]
  ! MAYOR           [ shift and go to state 35 ]
  ! MENOR           [ shift and go to state 36 ]
  ! MAYOR_IGUAL     [ shift and go to state 37 ]
  ! MENOR_IGUAL     [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! PUNTO           [ shift and go to state 41 ]


state 61

    (58) expresion -> expresion MAYOR expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    IGUAL_IGUAL     reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    NO_IGUAL        reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    MAYOR           reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    MAYOR_IGUAL     reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    MENOR_IGUAL     reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    PUNTO           reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    PRINTLN         reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    LET             reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    MATCH           reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    I64             reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    PARA            reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    NOT             reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    CADENA          reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    ENTERO          reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    DECIMAL         reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    CARACTER        reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    TRUE            reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    FALSE           reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    $end            reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    PARC            reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    LLAVA           reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    PT_COMA         reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    LLAVC           reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    ARROW           reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    SEP_MATCH       reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 58 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32

  ! MAS             [ reduce using rule 58 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 58 (expresion -> expresion MAYOR expresion .) ]
  ! MULTI           [ reduce using rule 58 (expresion -> expresion MAYOR expresion .) ]
  ! DIV             [ reduce using rule 58 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 58 (expresion -> expresion MAYOR expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 33 ]
  ! NO_IGUAL        [ shift and go to state 34 ]
  ! MAYOR           [ shift and go to state 35 ]
  ! MENOR           [ shift and go to state 36 ]
  ! MAYOR_IGUAL     [ shift and go to state 37 ]
  ! MENOR_IGUAL     [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! PUNTO           [ shift and go to state 41 ]


state 62

    (59) expresion -> expresion MENOR expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    IGUAL_IGUAL     reduce using rule 59 (expresion -> expresion MENOR expresion .)
    NO_IGUAL        reduce using rule 59 (expresion -> expresion MENOR expresion .)
    MAYOR           reduce using rule 59 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 59 (expresion -> expresion MENOR expresion .)
    MAYOR_IGUAL     reduce using rule 59 (expresion -> expresion MENOR expresion .)
    MENOR_IGUAL     reduce using rule 59 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 59 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 59 (expresion -> expresion MENOR expresion .)
    PUNTO           reduce using rule 59 (expresion -> expresion MENOR expresion .)
    PRINTLN         reduce using rule 59 (expresion -> expresion MENOR expresion .)
    LET             reduce using rule 59 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 59 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 59 (expresion -> expresion MENOR expresion .)
    MATCH           reduce using rule 59 (expresion -> expresion MENOR expresion .)
    I64             reduce using rule 59 (expresion -> expresion MENOR expresion .)
    PARA            reduce using rule 59 (expresion -> expresion MENOR expresion .)
    NOT             reduce using rule 59 (expresion -> expresion MENOR expresion .)
    CADENA          reduce using rule 59 (expresion -> expresion MENOR expresion .)
    ENTERO          reduce using rule 59 (expresion -> expresion MENOR expresion .)
    DECIMAL         reduce using rule 59 (expresion -> expresion MENOR expresion .)
    CARACTER        reduce using rule 59 (expresion -> expresion MENOR expresion .)
    TRUE            reduce using rule 59 (expresion -> expresion MENOR expresion .)
    FALSE           reduce using rule 59 (expresion -> expresion MENOR expresion .)
    $end            reduce using rule 59 (expresion -> expresion MENOR expresion .)
    PARC            reduce using rule 59 (expresion -> expresion MENOR expresion .)
    LLAVA           reduce using rule 59 (expresion -> expresion MENOR expresion .)
    PT_COMA         reduce using rule 59 (expresion -> expresion MENOR expresion .)
    LLAVC           reduce using rule 59 (expresion -> expresion MENOR expresion .)
    ARROW           reduce using rule 59 (expresion -> expresion MENOR expresion .)
    SEP_MATCH       reduce using rule 59 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 59 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32

  ! MAS             [ reduce using rule 59 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 59 (expresion -> expresion MENOR expresion .) ]
  ! MULTI           [ reduce using rule 59 (expresion -> expresion MENOR expresion .) ]
  ! DIV             [ reduce using rule 59 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 59 (expresion -> expresion MENOR expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 33 ]
  ! NO_IGUAL        [ shift and go to state 34 ]
  ! MAYOR           [ shift and go to state 35 ]
  ! MENOR           [ shift and go to state 36 ]
  ! MAYOR_IGUAL     [ shift and go to state 37 ]
  ! MENOR_IGUAL     [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! PUNTO           [ shift and go to state 41 ]


state 63

    (60) expresion -> expresion MAYOR_IGUAL expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    IGUAL_IGUAL     reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    NO_IGUAL        reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    MAYOR           reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    MENOR           reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    MAYOR_IGUAL     reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    MENOR_IGUAL     reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    AND             reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    OR              reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    PUNTO           reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    PRINTLN         reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    LET             reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    ID              reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    IF              reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    MATCH           reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    I64             reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    PARA            reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    NOT             reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    CADENA          reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    ENTERO          reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    DECIMAL         reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    CARACTER        reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    TRUE            reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    FALSE           reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    $end            reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    PARC            reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    LLAVA           reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    PT_COMA         reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    LLAVC           reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    ARROW           reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    SEP_MATCH       reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    COMA            reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32

  ! MAS             [ reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 60 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 33 ]
  ! NO_IGUAL        [ shift and go to state 34 ]
  ! MAYOR           [ shift and go to state 35 ]
  ! MENOR           [ shift and go to state 36 ]
  ! MAYOR_IGUAL     [ shift and go to state 37 ]
  ! MENOR_IGUAL     [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! PUNTO           [ shift and go to state 41 ]


state 64

    (61) expresion -> expresion MENOR_IGUAL expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    IGUAL_IGUAL     reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    NO_IGUAL        reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    MAYOR           reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    MENOR           reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    MAYOR_IGUAL     reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    MENOR_IGUAL     reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    AND             reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    OR              reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    PUNTO           reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    PRINTLN         reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    LET             reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    ID              reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    IF              reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    MATCH           reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    I64             reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    PARA            reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    NOT             reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    CADENA          reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    ENTERO          reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    DECIMAL         reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    CARACTER        reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    TRUE            reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    FALSE           reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    $end            reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    PARC            reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    LLAVA           reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    PT_COMA         reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    LLAVC           reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    ARROW           reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    SEP_MATCH       reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    COMA            reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32

  ! MAS             [ reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 61 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 33 ]
  ! NO_IGUAL        [ shift and go to state 34 ]
  ! MAYOR           [ shift and go to state 35 ]
  ! MENOR           [ shift and go to state 36 ]
  ! MAYOR_IGUAL     [ shift and go to state 37 ]
  ! MENOR_IGUAL     [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! PUNTO           [ shift and go to state 41 ]


state 65

    (62) expresion -> expresion AND expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    AND             reduce using rule 62 (expresion -> expresion AND expresion .)
    OR              reduce using rule 62 (expresion -> expresion AND expresion .)
    PUNTO           reduce using rule 62 (expresion -> expresion AND expresion .)
    PRINTLN         reduce using rule 62 (expresion -> expresion AND expresion .)
    LET             reduce using rule 62 (expresion -> expresion AND expresion .)
    ID              reduce using rule 62 (expresion -> expresion AND expresion .)
    IF              reduce using rule 62 (expresion -> expresion AND expresion .)
    MATCH           reduce using rule 62 (expresion -> expresion AND expresion .)
    I64             reduce using rule 62 (expresion -> expresion AND expresion .)
    PARA            reduce using rule 62 (expresion -> expresion AND expresion .)
    NOT             reduce using rule 62 (expresion -> expresion AND expresion .)
    CADENA          reduce using rule 62 (expresion -> expresion AND expresion .)
    ENTERO          reduce using rule 62 (expresion -> expresion AND expresion .)
    DECIMAL         reduce using rule 62 (expresion -> expresion AND expresion .)
    CARACTER        reduce using rule 62 (expresion -> expresion AND expresion .)
    TRUE            reduce using rule 62 (expresion -> expresion AND expresion .)
    FALSE           reduce using rule 62 (expresion -> expresion AND expresion .)
    $end            reduce using rule 62 (expresion -> expresion AND expresion .)
    PARC            reduce using rule 62 (expresion -> expresion AND expresion .)
    LLAVA           reduce using rule 62 (expresion -> expresion AND expresion .)
    PT_COMA         reduce using rule 62 (expresion -> expresion AND expresion .)
    LLAVC           reduce using rule 62 (expresion -> expresion AND expresion .)
    ARROW           reduce using rule 62 (expresion -> expresion AND expresion .)
    SEP_MATCH       reduce using rule 62 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 62 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38

  ! MAS             [ reduce using rule 62 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 62 (expresion -> expresion AND expresion .) ]
  ! MULTI           [ reduce using rule 62 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 62 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 62 (expresion -> expresion AND expresion .) ]
  ! IGUAL_IGUAL     [ reduce using rule 62 (expresion -> expresion AND expresion .) ]
  ! NO_IGUAL        [ reduce using rule 62 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 62 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 62 (expresion -> expresion AND expresion .) ]
  ! MAYOR_IGUAL     [ reduce using rule 62 (expresion -> expresion AND expresion .) ]
  ! MENOR_IGUAL     [ reduce using rule 62 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! PUNTO           [ shift and go to state 41 ]


state 66

    (63) expresion -> expresion OR expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    OR              reduce using rule 63 (expresion -> expresion OR expresion .)
    PUNTO           reduce using rule 63 (expresion -> expresion OR expresion .)
    PRINTLN         reduce using rule 63 (expresion -> expresion OR expresion .)
    LET             reduce using rule 63 (expresion -> expresion OR expresion .)
    ID              reduce using rule 63 (expresion -> expresion OR expresion .)
    IF              reduce using rule 63 (expresion -> expresion OR expresion .)
    MATCH           reduce using rule 63 (expresion -> expresion OR expresion .)
    I64             reduce using rule 63 (expresion -> expresion OR expresion .)
    PARA            reduce using rule 63 (expresion -> expresion OR expresion .)
    NOT             reduce using rule 63 (expresion -> expresion OR expresion .)
    CADENA          reduce using rule 63 (expresion -> expresion OR expresion .)
    ENTERO          reduce using rule 63 (expresion -> expresion OR expresion .)
    DECIMAL         reduce using rule 63 (expresion -> expresion OR expresion .)
    CARACTER        reduce using rule 63 (expresion -> expresion OR expresion .)
    TRUE            reduce using rule 63 (expresion -> expresion OR expresion .)
    FALSE           reduce using rule 63 (expresion -> expresion OR expresion .)
    $end            reduce using rule 63 (expresion -> expresion OR expresion .)
    PARC            reduce using rule 63 (expresion -> expresion OR expresion .)
    LLAVA           reduce using rule 63 (expresion -> expresion OR expresion .)
    PT_COMA         reduce using rule 63 (expresion -> expresion OR expresion .)
    LLAVC           reduce using rule 63 (expresion -> expresion OR expresion .)
    ARROW           reduce using rule 63 (expresion -> expresion OR expresion .)
    SEP_MATCH       reduce using rule 63 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 63 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38
    AND             shift and go to state 39

  ! MAS             [ reduce using rule 63 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 63 (expresion -> expresion OR expresion .) ]
  ! MULTI           [ reduce using rule 63 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 63 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 63 (expresion -> expresion OR expresion .) ]
  ! IGUAL_IGUAL     [ reduce using rule 63 (expresion -> expresion OR expresion .) ]
  ! NO_IGUAL        [ reduce using rule 63 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 63 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 63 (expresion -> expresion OR expresion .) ]
  ! MAYOR_IGUAL     [ reduce using rule 63 (expresion -> expresion OR expresion .) ]
  ! MENOR_IGUAL     [ reduce using rule 63 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 63 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 40 ]
  ! PUNTO           [ shift and go to state 41 ]


state 67

    (66) expresion -> expresion PUNTO TO_OWNED . PARA PARC

    PARA            shift and go to state 82


state 68

    (67) expresion -> expresion PUNTO TO_STRING . PARA PARC

    PARA            shift and go to state 83


state 69

    (9) prints -> PRINTLN ADMIRACION PARA . CADENA COMA list_exp PARC
    (10) prints -> PRINTLN ADMIRACION PARA . CADENA PARC

    CADENA          shift and go to state 84


state 70

    (54) expresion -> PARA expresion PARC .

    MAS             reduce using rule 54 (expresion -> PARA expresion PARC .)
    MENOS           reduce using rule 54 (expresion -> PARA expresion PARC .)
    MULTI           reduce using rule 54 (expresion -> PARA expresion PARC .)
    DIV             reduce using rule 54 (expresion -> PARA expresion PARC .)
    MODULO          reduce using rule 54 (expresion -> PARA expresion PARC .)
    IGUAL_IGUAL     reduce using rule 54 (expresion -> PARA expresion PARC .)
    NO_IGUAL        reduce using rule 54 (expresion -> PARA expresion PARC .)
    MAYOR           reduce using rule 54 (expresion -> PARA expresion PARC .)
    MENOR           reduce using rule 54 (expresion -> PARA expresion PARC .)
    MAYOR_IGUAL     reduce using rule 54 (expresion -> PARA expresion PARC .)
    MENOR_IGUAL     reduce using rule 54 (expresion -> PARA expresion PARC .)
    AND             reduce using rule 54 (expresion -> PARA expresion PARC .)
    OR              reduce using rule 54 (expresion -> PARA expresion PARC .)
    PUNTO           reduce using rule 54 (expresion -> PARA expresion PARC .)
    PRINTLN         reduce using rule 54 (expresion -> PARA expresion PARC .)
    LET             reduce using rule 54 (expresion -> PARA expresion PARC .)
    ID              reduce using rule 54 (expresion -> PARA expresion PARC .)
    IF              reduce using rule 54 (expresion -> PARA expresion PARC .)
    MATCH           reduce using rule 54 (expresion -> PARA expresion PARC .)
    I64             reduce using rule 54 (expresion -> PARA expresion PARC .)
    PARA            reduce using rule 54 (expresion -> PARA expresion PARC .)
    NOT             reduce using rule 54 (expresion -> PARA expresion PARC .)
    CADENA          reduce using rule 54 (expresion -> PARA expresion PARC .)
    ENTERO          reduce using rule 54 (expresion -> PARA expresion PARC .)
    DECIMAL         reduce using rule 54 (expresion -> PARA expresion PARC .)
    CARACTER        reduce using rule 54 (expresion -> PARA expresion PARC .)
    TRUE            reduce using rule 54 (expresion -> PARA expresion PARC .)
    FALSE           reduce using rule 54 (expresion -> PARA expresion PARC .)
    $end            reduce using rule 54 (expresion -> PARA expresion PARC .)
    PARC            reduce using rule 54 (expresion -> PARA expresion PARC .)
    LLAVA           reduce using rule 54 (expresion -> PARA expresion PARC .)
    PT_COMA         reduce using rule 54 (expresion -> PARA expresion PARC .)
    LLAVC           reduce using rule 54 (expresion -> PARA expresion PARC .)
    ARROW           reduce using rule 54 (expresion -> PARA expresion PARC .)
    SEP_MATCH       reduce using rule 54 (expresion -> PARA expresion PARC .)
    COMA            reduce using rule 54 (expresion -> PARA expresion PARC .)


state 71

    (26) exp_if -> IF expresion . exp_statement exp_else
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (29) exp_statement -> . LLAVA instrucciones LLAVC

    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    PUNTO           shift and go to state 41
    LLAVA           shift and go to state 85

    exp_statement                  shift and go to state 77

state 72

    (13) declaracion -> LET MUT ID . DOS_PT tipo IGUAL expresion
    (14) declaracion -> LET MUT ID . DOS_PT tipo
    (15) declaracion -> LET MUT ID . IGUAL expresion
    (16) declaracion -> LET MUT ID .

    DOS_PT          shift and go to state 86
    IGUAL           shift and go to state 87
    PT_COMA         reduce using rule 16 (declaracion -> LET MUT ID .)


state 73

    (17) declaracion -> LET ID DOS_PT . tipo IGUAL expresion
    (18) declaracion -> LET ID DOS_PT . tipo
    (42) tipo -> . I64
    (43) tipo -> . F64
    (44) tipo -> . BOOL
    (45) tipo -> . STRING
    (46) tipo -> . STR
    (47) tipo -> . CHAR

    I64             shift and go to state 89
    F64             shift and go to state 90
    BOOL            shift and go to state 91
    STRING          shift and go to state 92
    STR             shift and go to state 93
    CHAR            shift and go to state 94

    tipo                           shift and go to state 88

state 74

    (19) declaracion -> LET ID IGUAL . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 95
    exp_if                         shift and go to state 19

state 75

    (21) declaracion -> ID IGUAL expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    PT_COMA         reduce using rule 21 (declaracion -> ID IGUAL expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    PUNTO           shift and go to state 41


state 76

    (22) sent_if -> IF expresion statement . sent_else
    (23) sent_else -> . ELSE statement
    (24) sent_else -> . ELSE sent_if
    (25) sent_else -> .

    ELSE            shift and go to state 97
    PRINTLN         reduce using rule 25 (sent_else -> .)
    LET             reduce using rule 25 (sent_else -> .)
    ID              reduce using rule 25 (sent_else -> .)
    IF              reduce using rule 25 (sent_else -> .)
    MATCH           reduce using rule 25 (sent_else -> .)
    I64             reduce using rule 25 (sent_else -> .)
    PARA            reduce using rule 25 (sent_else -> .)
    MENOS           reduce using rule 25 (sent_else -> .)
    NOT             reduce using rule 25 (sent_else -> .)
    CADENA          reduce using rule 25 (sent_else -> .)
    ENTERO          reduce using rule 25 (sent_else -> .)
    DECIMAL         reduce using rule 25 (sent_else -> .)
    CARACTER        reduce using rule 25 (sent_else -> .)
    TRUE            reduce using rule 25 (sent_else -> .)
    FALSE           reduce using rule 25 (sent_else -> .)
    $end            reduce using rule 25 (sent_else -> .)
    LLAVC           reduce using rule 25 (sent_else -> .)
    COMA            reduce using rule 25 (sent_else -> .)

    sent_else                      shift and go to state 96

state 77

    (26) exp_if -> IF expresion exp_statement . exp_else
    (27) exp_else -> . ELSE exp_statement
    (28) exp_else -> . ELSE exp_if

    ELSE            shift and go to state 99

    exp_else                       shift and go to state 98

state 78

    (40) statement -> LLAVA . instrucciones LLAVC
    (41) statement -> LLAVA . LLAVC
    (29) exp_statement -> LLAVA . instrucciones LLAVC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) prints -> . PRINTLN ADMIRACION PARA CADENA COMA list_exp PARC
    (10) prints -> . PRINTLN ADMIRACION PARA CADENA PARC
    (13) declaracion -> . LET MUT ID DOS_PT tipo IGUAL expresion
    (14) declaracion -> . LET MUT ID DOS_PT tipo
    (15) declaracion -> . LET MUT ID IGUAL expresion
    (16) declaracion -> . LET MUT ID
    (17) declaracion -> . LET ID DOS_PT tipo IGUAL expresion
    (18) declaracion -> . LET ID DOS_PT tipo
    (19) declaracion -> . LET ID IGUAL expresion
    (20) declaracion -> . LET ID
    (21) declaracion -> . ID IGUAL expresion
    (22) sent_if -> . IF expresion statement sent_else
    (30) match -> . MATCH expresion casos_match
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    LLAVC           shift and go to state 101
    PRINTLN         shift and go to state 9
    LET             shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    MATCH           shift and go to state 15
    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    instrucciones                  shift and go to state 100
    instruccion                    shift and go to state 3
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    exp_if                         shift and go to state 19

state 79

    (30) match -> MATCH expresion casos_match .

    PRINTLN         reduce using rule 30 (match -> MATCH expresion casos_match .)
    LET             reduce using rule 30 (match -> MATCH expresion casos_match .)
    ID              reduce using rule 30 (match -> MATCH expresion casos_match .)
    IF              reduce using rule 30 (match -> MATCH expresion casos_match .)
    MATCH           reduce using rule 30 (match -> MATCH expresion casos_match .)
    I64             reduce using rule 30 (match -> MATCH expresion casos_match .)
    PARA            reduce using rule 30 (match -> MATCH expresion casos_match .)
    MENOS           reduce using rule 30 (match -> MATCH expresion casos_match .)
    NOT             reduce using rule 30 (match -> MATCH expresion casos_match .)
    CADENA          reduce using rule 30 (match -> MATCH expresion casos_match .)
    ENTERO          reduce using rule 30 (match -> MATCH expresion casos_match .)
    DECIMAL         reduce using rule 30 (match -> MATCH expresion casos_match .)
    CARACTER        reduce using rule 30 (match -> MATCH expresion casos_match .)
    TRUE            reduce using rule 30 (match -> MATCH expresion casos_match .)
    FALSE           reduce using rule 30 (match -> MATCH expresion casos_match .)
    $end            reduce using rule 30 (match -> MATCH expresion casos_match .)
    LLAVC           reduce using rule 30 (match -> MATCH expresion casos_match .)
    COMA            reduce using rule 30 (match -> MATCH expresion casos_match .)


state 80

    (31) casos_match -> LLAVA . lista_casos default LLAVC
    (32) lista_casos -> . lista_casos lista_expresiones ARROW statement COMA
    (33) lista_casos -> . lista_casos lista_expresiones ARROW instruccion COMA
    (34) lista_casos -> . lista_expresiones ARROW statement COMA
    (35) lista_casos -> . lista_expresiones ARROW instruccion COMA
    (36) lista_expresiones -> . lista_expresiones SEP_MATCH expresion
    (37) lista_expresiones -> . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    lista_casos                    shift and go to state 102
    lista_expresiones              shift and go to state 103
    expresion                      shift and go to state 104
    exp_if                         shift and go to state 19

state 81

    (53) expresion -> I64 DOS_PT DOS_PT . POW PARA expresion COMA expresion PARC

    POW             shift and go to state 105


state 82

    (66) expresion -> expresion PUNTO TO_OWNED PARA . PARC

    PARC            shift and go to state 106


state 83

    (67) expresion -> expresion PUNTO TO_STRING PARA . PARC

    PARC            shift and go to state 107


state 84

    (9) prints -> PRINTLN ADMIRACION PARA CADENA . COMA list_exp PARC
    (10) prints -> PRINTLN ADMIRACION PARA CADENA . PARC

    COMA            shift and go to state 108
    PARC            shift and go to state 109


state 85

    (29) exp_statement -> LLAVA . instrucciones LLAVC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) prints -> . PRINTLN ADMIRACION PARA CADENA COMA list_exp PARC
    (10) prints -> . PRINTLN ADMIRACION PARA CADENA PARC
    (13) declaracion -> . LET MUT ID DOS_PT tipo IGUAL expresion
    (14) declaracion -> . LET MUT ID DOS_PT tipo
    (15) declaracion -> . LET MUT ID IGUAL expresion
    (16) declaracion -> . LET MUT ID
    (17) declaracion -> . LET ID DOS_PT tipo IGUAL expresion
    (18) declaracion -> . LET ID DOS_PT tipo
    (19) declaracion -> . LET ID IGUAL expresion
    (20) declaracion -> . LET ID
    (21) declaracion -> . ID IGUAL expresion
    (22) sent_if -> . IF expresion statement sent_else
    (30) match -> . MATCH expresion casos_match
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    PRINTLN         shift and go to state 9
    LET             shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    MATCH           shift and go to state 15
    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    instrucciones                  shift and go to state 110
    instruccion                    shift and go to state 3
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    exp_if                         shift and go to state 19

state 86

    (13) declaracion -> LET MUT ID DOS_PT . tipo IGUAL expresion
    (14) declaracion -> LET MUT ID DOS_PT . tipo
    (42) tipo -> . I64
    (43) tipo -> . F64
    (44) tipo -> . BOOL
    (45) tipo -> . STRING
    (46) tipo -> . STR
    (47) tipo -> . CHAR

    I64             shift and go to state 89
    F64             shift and go to state 90
    BOOL            shift and go to state 91
    STRING          shift and go to state 92
    STR             shift and go to state 93
    CHAR            shift and go to state 94

    tipo                           shift and go to state 111

state 87

    (15) declaracion -> LET MUT ID IGUAL . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 112
    exp_if                         shift and go to state 19

state 88

    (17) declaracion -> LET ID DOS_PT tipo . IGUAL expresion
    (18) declaracion -> LET ID DOS_PT tipo .

    IGUAL           shift and go to state 113
    PT_COMA         reduce using rule 18 (declaracion -> LET ID DOS_PT tipo .)


state 89

    (42) tipo -> I64 .

    IGUAL           reduce using rule 42 (tipo -> I64 .)
    PT_COMA         reduce using rule 42 (tipo -> I64 .)


state 90

    (43) tipo -> F64 .

    IGUAL           reduce using rule 43 (tipo -> F64 .)
    PT_COMA         reduce using rule 43 (tipo -> F64 .)


state 91

    (44) tipo -> BOOL .

    IGUAL           reduce using rule 44 (tipo -> BOOL .)
    PT_COMA         reduce using rule 44 (tipo -> BOOL .)


state 92

    (45) tipo -> STRING .

    IGUAL           reduce using rule 45 (tipo -> STRING .)
    PT_COMA         reduce using rule 45 (tipo -> STRING .)


state 93

    (46) tipo -> STR .

    IGUAL           reduce using rule 46 (tipo -> STR .)
    PT_COMA         reduce using rule 46 (tipo -> STR .)


state 94

    (47) tipo -> CHAR .

    IGUAL           reduce using rule 47 (tipo -> CHAR .)
    PT_COMA         reduce using rule 47 (tipo -> CHAR .)


state 95

    (19) declaracion -> LET ID IGUAL expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    PT_COMA         reduce using rule 19 (declaracion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    PUNTO           shift and go to state 41


state 96

    (22) sent_if -> IF expresion statement sent_else .

    PRINTLN         reduce using rule 22 (sent_if -> IF expresion statement sent_else .)
    LET             reduce using rule 22 (sent_if -> IF expresion statement sent_else .)
    ID              reduce using rule 22 (sent_if -> IF expresion statement sent_else .)
    IF              reduce using rule 22 (sent_if -> IF expresion statement sent_else .)
    MATCH           reduce using rule 22 (sent_if -> IF expresion statement sent_else .)
    I64             reduce using rule 22 (sent_if -> IF expresion statement sent_else .)
    PARA            reduce using rule 22 (sent_if -> IF expresion statement sent_else .)
    MENOS           reduce using rule 22 (sent_if -> IF expresion statement sent_else .)
    NOT             reduce using rule 22 (sent_if -> IF expresion statement sent_else .)
    CADENA          reduce using rule 22 (sent_if -> IF expresion statement sent_else .)
    ENTERO          reduce using rule 22 (sent_if -> IF expresion statement sent_else .)
    DECIMAL         reduce using rule 22 (sent_if -> IF expresion statement sent_else .)
    CARACTER        reduce using rule 22 (sent_if -> IF expresion statement sent_else .)
    TRUE            reduce using rule 22 (sent_if -> IF expresion statement sent_else .)
    FALSE           reduce using rule 22 (sent_if -> IF expresion statement sent_else .)
    $end            reduce using rule 22 (sent_if -> IF expresion statement sent_else .)
    LLAVC           reduce using rule 22 (sent_if -> IF expresion statement sent_else .)
    COMA            reduce using rule 22 (sent_if -> IF expresion statement sent_else .)


state 97

    (23) sent_else -> ELSE . statement
    (24) sent_else -> ELSE . sent_if
    (40) statement -> . LLAVA instrucciones LLAVC
    (41) statement -> . LLAVA LLAVC
    (22) sent_if -> . IF expresion statement sent_else

    LLAVA           shift and go to state 116
    IF              shift and go to state 117

    statement                      shift and go to state 114
    sent_if                        shift and go to state 115

state 98

    (26) exp_if -> IF expresion exp_statement exp_else .

    MAS             reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    MENOS           reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    MULTI           reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    DIV             reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    MODULO          reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    IGUAL_IGUAL     reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    NO_IGUAL        reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    MAYOR           reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    MENOR           reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    MAYOR_IGUAL     reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    MENOR_IGUAL     reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    AND             reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    OR              reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    PUNTO           reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    PRINTLN         reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    LET             reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    ID              reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    IF              reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    MATCH           reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    I64             reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    PARA            reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    NOT             reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    CADENA          reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    ENTERO          reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    DECIMAL         reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    CARACTER        reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    TRUE            reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    FALSE           reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    $end            reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    PARC            reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    LLAVA           reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    PT_COMA         reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    LLAVC           reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    ARROW           reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    SEP_MATCH       reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)
    COMA            reduce using rule 26 (exp_if -> IF expresion exp_statement exp_else .)


state 99

    (27) exp_else -> ELSE . exp_statement
    (28) exp_else -> ELSE . exp_if
    (29) exp_statement -> . LLAVA instrucciones LLAVC
    (26) exp_if -> . IF expresion exp_statement exp_else

    LLAVA           shift and go to state 85
    IF              shift and go to state 45

    exp_statement                  shift and go to state 118
    exp_if                         shift and go to state 119

state 100

    (40) statement -> LLAVA instrucciones . LLAVC
    (29) exp_statement -> LLAVA instrucciones . LLAVC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) prints -> . PRINTLN ADMIRACION PARA CADENA COMA list_exp PARC
    (10) prints -> . PRINTLN ADMIRACION PARA CADENA PARC
    (13) declaracion -> . LET MUT ID DOS_PT tipo IGUAL expresion
    (14) declaracion -> . LET MUT ID DOS_PT tipo
    (15) declaracion -> . LET MUT ID IGUAL expresion
    (16) declaracion -> . LET MUT ID
    (17) declaracion -> . LET ID DOS_PT tipo IGUAL expresion
    (18) declaracion -> . LET ID DOS_PT tipo
    (19) declaracion -> . LET ID IGUAL expresion
    (20) declaracion -> . LET ID
    (21) declaracion -> . ID IGUAL expresion
    (22) sent_if -> . IF expresion statement sent_else
    (30) match -> . MATCH expresion casos_match
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    LLAVC           shift and go to state 120
    PRINTLN         shift and go to state 9
    LET             shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    MATCH           shift and go to state 15
    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    instruccion                    shift and go to state 25
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    exp_if                         shift and go to state 19

state 101

    (41) statement -> LLAVA LLAVC .

    ELSE            reduce using rule 41 (statement -> LLAVA LLAVC .)
    PRINTLN         reduce using rule 41 (statement -> LLAVA LLAVC .)
    LET             reduce using rule 41 (statement -> LLAVA LLAVC .)
    ID              reduce using rule 41 (statement -> LLAVA LLAVC .)
    IF              reduce using rule 41 (statement -> LLAVA LLAVC .)
    MATCH           reduce using rule 41 (statement -> LLAVA LLAVC .)
    I64             reduce using rule 41 (statement -> LLAVA LLAVC .)
    PARA            reduce using rule 41 (statement -> LLAVA LLAVC .)
    MENOS           reduce using rule 41 (statement -> LLAVA LLAVC .)
    NOT             reduce using rule 41 (statement -> LLAVA LLAVC .)
    CADENA          reduce using rule 41 (statement -> LLAVA LLAVC .)
    ENTERO          reduce using rule 41 (statement -> LLAVA LLAVC .)
    DECIMAL         reduce using rule 41 (statement -> LLAVA LLAVC .)
    CARACTER        reduce using rule 41 (statement -> LLAVA LLAVC .)
    TRUE            reduce using rule 41 (statement -> LLAVA LLAVC .)
    FALSE           reduce using rule 41 (statement -> LLAVA LLAVC .)
    $end            reduce using rule 41 (statement -> LLAVA LLAVC .)
    LLAVC           reduce using rule 41 (statement -> LLAVA LLAVC .)
    COMA            reduce using rule 41 (statement -> LLAVA LLAVC .)


state 102

    (31) casos_match -> LLAVA lista_casos . default LLAVC
    (32) lista_casos -> lista_casos . lista_expresiones ARROW statement COMA
    (33) lista_casos -> lista_casos . lista_expresiones ARROW instruccion COMA
    (38) default -> . GUION_B ARROW statement COMA
    (39) default -> . GUION_B ARROW instruccion COMA
    (36) lista_expresiones -> . lista_expresiones SEP_MATCH expresion
    (37) lista_expresiones -> . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    GUION_B         shift and go to state 123
    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    default                        shift and go to state 121
    lista_expresiones              shift and go to state 122
    expresion                      shift and go to state 104
    exp_if                         shift and go to state 19

state 103

    (34) lista_casos -> lista_expresiones . ARROW statement COMA
    (35) lista_casos -> lista_expresiones . ARROW instruccion COMA
    (36) lista_expresiones -> lista_expresiones . SEP_MATCH expresion

    ARROW           shift and go to state 124
    SEP_MATCH       shift and go to state 125


state 104

    (37) lista_expresiones -> expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    ARROW           reduce using rule 37 (lista_expresiones -> expresion .)
    SEP_MATCH       reduce using rule 37 (lista_expresiones -> expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    PUNTO           shift and go to state 41


state 105

    (53) expresion -> I64 DOS_PT DOS_PT POW . PARA expresion COMA expresion PARC

    PARA            shift and go to state 126


state 106

    (66) expresion -> expresion PUNTO TO_OWNED PARA PARC .

    MAS             reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MENOS           reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MULTI           reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    DIV             reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MODULO          reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    IGUAL_IGUAL     reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    NO_IGUAL        reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MAYOR           reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MENOR           reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MAYOR_IGUAL     reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MENOR_IGUAL     reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    AND             reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    OR              reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PUNTO           reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PRINTLN         reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    LET             reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    ID              reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    IF              reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MATCH           reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    I64             reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PARA            reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    NOT             reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    CADENA          reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    ENTERO          reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    DECIMAL         reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    CARACTER        reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    TRUE            reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    FALSE           reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    $end            reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PARC            reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    LLAVA           reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PT_COMA         reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    LLAVC           reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    ARROW           reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    SEP_MATCH       reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    COMA            reduce using rule 66 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)


state 107

    (67) expresion -> expresion PUNTO TO_STRING PARA PARC .

    MAS             reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MENOS           reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MULTI           reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    DIV             reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MODULO          reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    IGUAL_IGUAL     reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    NO_IGUAL        reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MAYOR           reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MENOR           reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MAYOR_IGUAL     reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MENOR_IGUAL     reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    AND             reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    OR              reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PUNTO           reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PRINTLN         reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    LET             reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    ID              reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    IF              reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MATCH           reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    I64             reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PARA            reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    NOT             reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    CADENA          reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    ENTERO          reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    DECIMAL         reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    CARACTER        reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    TRUE            reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    FALSE           reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    $end            reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PARC            reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    LLAVA           reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PT_COMA         reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    LLAVC           reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    ARROW           reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    SEP_MATCH       reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    COMA            reduce using rule 67 (expresion -> expresion PUNTO TO_STRING PARA PARC .)


state 108

    (9) prints -> PRINTLN ADMIRACION PARA CADENA COMA . list_exp PARC
    (11) list_exp -> . list_exp COMA expresion
    (12) list_exp -> . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    list_exp                       shift and go to state 127
    expresion                      shift and go to state 128
    exp_if                         shift and go to state 19

state 109

    (10) prints -> PRINTLN ADMIRACION PARA CADENA PARC .

    PT_COMA         reduce using rule 10 (prints -> PRINTLN ADMIRACION PARA CADENA PARC .)


state 110

    (29) exp_statement -> LLAVA instrucciones . LLAVC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) prints -> . PRINTLN ADMIRACION PARA CADENA COMA list_exp PARC
    (10) prints -> . PRINTLN ADMIRACION PARA CADENA PARC
    (13) declaracion -> . LET MUT ID DOS_PT tipo IGUAL expresion
    (14) declaracion -> . LET MUT ID DOS_PT tipo
    (15) declaracion -> . LET MUT ID IGUAL expresion
    (16) declaracion -> . LET MUT ID
    (17) declaracion -> . LET ID DOS_PT tipo IGUAL expresion
    (18) declaracion -> . LET ID DOS_PT tipo
    (19) declaracion -> . LET ID IGUAL expresion
    (20) declaracion -> . LET ID
    (21) declaracion -> . ID IGUAL expresion
    (22) sent_if -> . IF expresion statement sent_else
    (30) match -> . MATCH expresion casos_match
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    LLAVC           shift and go to state 129
    PRINTLN         shift and go to state 9
    LET             shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    MATCH           shift and go to state 15
    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    instruccion                    shift and go to state 25
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    exp_if                         shift and go to state 19

state 111

    (13) declaracion -> LET MUT ID DOS_PT tipo . IGUAL expresion
    (14) declaracion -> LET MUT ID DOS_PT tipo .

    IGUAL           shift and go to state 130
    PT_COMA         reduce using rule 14 (declaracion -> LET MUT ID DOS_PT tipo .)


state 112

    (15) declaracion -> LET MUT ID IGUAL expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    PT_COMA         reduce using rule 15 (declaracion -> LET MUT ID IGUAL expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    PUNTO           shift and go to state 41


state 113

    (17) declaracion -> LET ID DOS_PT tipo IGUAL . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 131
    exp_if                         shift and go to state 19

state 114

    (23) sent_else -> ELSE statement .

    PRINTLN         reduce using rule 23 (sent_else -> ELSE statement .)
    LET             reduce using rule 23 (sent_else -> ELSE statement .)
    ID              reduce using rule 23 (sent_else -> ELSE statement .)
    IF              reduce using rule 23 (sent_else -> ELSE statement .)
    MATCH           reduce using rule 23 (sent_else -> ELSE statement .)
    I64             reduce using rule 23 (sent_else -> ELSE statement .)
    PARA            reduce using rule 23 (sent_else -> ELSE statement .)
    MENOS           reduce using rule 23 (sent_else -> ELSE statement .)
    NOT             reduce using rule 23 (sent_else -> ELSE statement .)
    CADENA          reduce using rule 23 (sent_else -> ELSE statement .)
    ENTERO          reduce using rule 23 (sent_else -> ELSE statement .)
    DECIMAL         reduce using rule 23 (sent_else -> ELSE statement .)
    CARACTER        reduce using rule 23 (sent_else -> ELSE statement .)
    TRUE            reduce using rule 23 (sent_else -> ELSE statement .)
    FALSE           reduce using rule 23 (sent_else -> ELSE statement .)
    $end            reduce using rule 23 (sent_else -> ELSE statement .)
    LLAVC           reduce using rule 23 (sent_else -> ELSE statement .)
    COMA            reduce using rule 23 (sent_else -> ELSE statement .)


state 115

    (24) sent_else -> ELSE sent_if .

    PRINTLN         reduce using rule 24 (sent_else -> ELSE sent_if .)
    LET             reduce using rule 24 (sent_else -> ELSE sent_if .)
    ID              reduce using rule 24 (sent_else -> ELSE sent_if .)
    IF              reduce using rule 24 (sent_else -> ELSE sent_if .)
    MATCH           reduce using rule 24 (sent_else -> ELSE sent_if .)
    I64             reduce using rule 24 (sent_else -> ELSE sent_if .)
    PARA            reduce using rule 24 (sent_else -> ELSE sent_if .)
    MENOS           reduce using rule 24 (sent_else -> ELSE sent_if .)
    NOT             reduce using rule 24 (sent_else -> ELSE sent_if .)
    CADENA          reduce using rule 24 (sent_else -> ELSE sent_if .)
    ENTERO          reduce using rule 24 (sent_else -> ELSE sent_if .)
    DECIMAL         reduce using rule 24 (sent_else -> ELSE sent_if .)
    CARACTER        reduce using rule 24 (sent_else -> ELSE sent_if .)
    TRUE            reduce using rule 24 (sent_else -> ELSE sent_if .)
    FALSE           reduce using rule 24 (sent_else -> ELSE sent_if .)
    $end            reduce using rule 24 (sent_else -> ELSE sent_if .)
    LLAVC           reduce using rule 24 (sent_else -> ELSE sent_if .)
    COMA            reduce using rule 24 (sent_else -> ELSE sent_if .)


state 116

    (40) statement -> LLAVA . instrucciones LLAVC
    (41) statement -> LLAVA . LLAVC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) prints -> . PRINTLN ADMIRACION PARA CADENA COMA list_exp PARC
    (10) prints -> . PRINTLN ADMIRACION PARA CADENA PARC
    (13) declaracion -> . LET MUT ID DOS_PT tipo IGUAL expresion
    (14) declaracion -> . LET MUT ID DOS_PT tipo
    (15) declaracion -> . LET MUT ID IGUAL expresion
    (16) declaracion -> . LET MUT ID
    (17) declaracion -> . LET ID DOS_PT tipo IGUAL expresion
    (18) declaracion -> . LET ID DOS_PT tipo
    (19) declaracion -> . LET ID IGUAL expresion
    (20) declaracion -> . LET ID
    (21) declaracion -> . ID IGUAL expresion
    (22) sent_if -> . IF expresion statement sent_else
    (30) match -> . MATCH expresion casos_match
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    LLAVC           shift and go to state 101
    PRINTLN         shift and go to state 9
    LET             shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    MATCH           shift and go to state 15
    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    instrucciones                  shift and go to state 132
    instruccion                    shift and go to state 3
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    exp_if                         shift and go to state 19

state 117

    (22) sent_if -> IF . expresion statement sent_else
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 133
    exp_if                         shift and go to state 19

state 118

    (27) exp_else -> ELSE exp_statement .

    MAS             reduce using rule 27 (exp_else -> ELSE exp_statement .)
    MENOS           reduce using rule 27 (exp_else -> ELSE exp_statement .)
    MULTI           reduce using rule 27 (exp_else -> ELSE exp_statement .)
    DIV             reduce using rule 27 (exp_else -> ELSE exp_statement .)
    MODULO          reduce using rule 27 (exp_else -> ELSE exp_statement .)
    IGUAL_IGUAL     reduce using rule 27 (exp_else -> ELSE exp_statement .)
    NO_IGUAL        reduce using rule 27 (exp_else -> ELSE exp_statement .)
    MAYOR           reduce using rule 27 (exp_else -> ELSE exp_statement .)
    MENOR           reduce using rule 27 (exp_else -> ELSE exp_statement .)
    MAYOR_IGUAL     reduce using rule 27 (exp_else -> ELSE exp_statement .)
    MENOR_IGUAL     reduce using rule 27 (exp_else -> ELSE exp_statement .)
    AND             reduce using rule 27 (exp_else -> ELSE exp_statement .)
    OR              reduce using rule 27 (exp_else -> ELSE exp_statement .)
    PUNTO           reduce using rule 27 (exp_else -> ELSE exp_statement .)
    PRINTLN         reduce using rule 27 (exp_else -> ELSE exp_statement .)
    LET             reduce using rule 27 (exp_else -> ELSE exp_statement .)
    ID              reduce using rule 27 (exp_else -> ELSE exp_statement .)
    IF              reduce using rule 27 (exp_else -> ELSE exp_statement .)
    MATCH           reduce using rule 27 (exp_else -> ELSE exp_statement .)
    I64             reduce using rule 27 (exp_else -> ELSE exp_statement .)
    PARA            reduce using rule 27 (exp_else -> ELSE exp_statement .)
    NOT             reduce using rule 27 (exp_else -> ELSE exp_statement .)
    CADENA          reduce using rule 27 (exp_else -> ELSE exp_statement .)
    ENTERO          reduce using rule 27 (exp_else -> ELSE exp_statement .)
    DECIMAL         reduce using rule 27 (exp_else -> ELSE exp_statement .)
    CARACTER        reduce using rule 27 (exp_else -> ELSE exp_statement .)
    TRUE            reduce using rule 27 (exp_else -> ELSE exp_statement .)
    FALSE           reduce using rule 27 (exp_else -> ELSE exp_statement .)
    $end            reduce using rule 27 (exp_else -> ELSE exp_statement .)
    PARC            reduce using rule 27 (exp_else -> ELSE exp_statement .)
    LLAVA           reduce using rule 27 (exp_else -> ELSE exp_statement .)
    PT_COMA         reduce using rule 27 (exp_else -> ELSE exp_statement .)
    LLAVC           reduce using rule 27 (exp_else -> ELSE exp_statement .)
    ARROW           reduce using rule 27 (exp_else -> ELSE exp_statement .)
    SEP_MATCH       reduce using rule 27 (exp_else -> ELSE exp_statement .)
    COMA            reduce using rule 27 (exp_else -> ELSE exp_statement .)


state 119

    (28) exp_else -> ELSE exp_if .

    MAS             reduce using rule 28 (exp_else -> ELSE exp_if .)
    MENOS           reduce using rule 28 (exp_else -> ELSE exp_if .)
    MULTI           reduce using rule 28 (exp_else -> ELSE exp_if .)
    DIV             reduce using rule 28 (exp_else -> ELSE exp_if .)
    MODULO          reduce using rule 28 (exp_else -> ELSE exp_if .)
    IGUAL_IGUAL     reduce using rule 28 (exp_else -> ELSE exp_if .)
    NO_IGUAL        reduce using rule 28 (exp_else -> ELSE exp_if .)
    MAYOR           reduce using rule 28 (exp_else -> ELSE exp_if .)
    MENOR           reduce using rule 28 (exp_else -> ELSE exp_if .)
    MAYOR_IGUAL     reduce using rule 28 (exp_else -> ELSE exp_if .)
    MENOR_IGUAL     reduce using rule 28 (exp_else -> ELSE exp_if .)
    AND             reduce using rule 28 (exp_else -> ELSE exp_if .)
    OR              reduce using rule 28 (exp_else -> ELSE exp_if .)
    PUNTO           reduce using rule 28 (exp_else -> ELSE exp_if .)
    PRINTLN         reduce using rule 28 (exp_else -> ELSE exp_if .)
    LET             reduce using rule 28 (exp_else -> ELSE exp_if .)
    ID              reduce using rule 28 (exp_else -> ELSE exp_if .)
    IF              reduce using rule 28 (exp_else -> ELSE exp_if .)
    MATCH           reduce using rule 28 (exp_else -> ELSE exp_if .)
    I64             reduce using rule 28 (exp_else -> ELSE exp_if .)
    PARA            reduce using rule 28 (exp_else -> ELSE exp_if .)
    NOT             reduce using rule 28 (exp_else -> ELSE exp_if .)
    CADENA          reduce using rule 28 (exp_else -> ELSE exp_if .)
    ENTERO          reduce using rule 28 (exp_else -> ELSE exp_if .)
    DECIMAL         reduce using rule 28 (exp_else -> ELSE exp_if .)
    CARACTER        reduce using rule 28 (exp_else -> ELSE exp_if .)
    TRUE            reduce using rule 28 (exp_else -> ELSE exp_if .)
    FALSE           reduce using rule 28 (exp_else -> ELSE exp_if .)
    $end            reduce using rule 28 (exp_else -> ELSE exp_if .)
    PARC            reduce using rule 28 (exp_else -> ELSE exp_if .)
    LLAVA           reduce using rule 28 (exp_else -> ELSE exp_if .)
    PT_COMA         reduce using rule 28 (exp_else -> ELSE exp_if .)
    LLAVC           reduce using rule 28 (exp_else -> ELSE exp_if .)
    ARROW           reduce using rule 28 (exp_else -> ELSE exp_if .)
    SEP_MATCH       reduce using rule 28 (exp_else -> ELSE exp_if .)
    COMA            reduce using rule 28 (exp_else -> ELSE exp_if .)


state 120

    (40) statement -> LLAVA instrucciones LLAVC .
    (29) exp_statement -> LLAVA instrucciones LLAVC .

  ! reduce/reduce conflict for ELSE resolved using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    PRINTLN         reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    LET             reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    ID              reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    IF              reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    MATCH           reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    I64             reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    PARA            reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    MENOS           reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    NOT             reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    CADENA          reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    ENTERO          reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    DECIMAL         reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    CARACTER        reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    TRUE            reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    FALSE           reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    $end            reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    LLAVC           reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    COMA            reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    ELSE            reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)

  ! ELSE            [ reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .) ]


state 121

    (31) casos_match -> LLAVA lista_casos default . LLAVC

    LLAVC           shift and go to state 134


state 122

    (32) lista_casos -> lista_casos lista_expresiones . ARROW statement COMA
    (33) lista_casos -> lista_casos lista_expresiones . ARROW instruccion COMA
    (36) lista_expresiones -> lista_expresiones . SEP_MATCH expresion

    ARROW           shift and go to state 135
    SEP_MATCH       shift and go to state 125


state 123

    (38) default -> GUION_B . ARROW statement COMA
    (39) default -> GUION_B . ARROW instruccion COMA

    ARROW           shift and go to state 136


state 124

    (34) lista_casos -> lista_expresiones ARROW . statement COMA
    (35) lista_casos -> lista_expresiones ARROW . instruccion COMA
    (40) statement -> . LLAVA instrucciones LLAVC
    (41) statement -> . LLAVA LLAVC
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) prints -> . PRINTLN ADMIRACION PARA CADENA COMA list_exp PARC
    (10) prints -> . PRINTLN ADMIRACION PARA CADENA PARC
    (13) declaracion -> . LET MUT ID DOS_PT tipo IGUAL expresion
    (14) declaracion -> . LET MUT ID DOS_PT tipo
    (15) declaracion -> . LET MUT ID IGUAL expresion
    (16) declaracion -> . LET MUT ID
    (17) declaracion -> . LET ID DOS_PT tipo IGUAL expresion
    (18) declaracion -> . LET ID DOS_PT tipo
    (19) declaracion -> . LET ID IGUAL expresion
    (20) declaracion -> . LET ID
    (21) declaracion -> . ID IGUAL expresion
    (22) sent_if -> . IF expresion statement sent_else
    (30) match -> . MATCH expresion casos_match
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    LLAVA           shift and go to state 116
    PRINTLN         shift and go to state 9
    LET             shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    MATCH           shift and go to state 15
    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    statement                      shift and go to state 137
    instruccion                    shift and go to state 138
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    exp_if                         shift and go to state 19

state 125

    (36) lista_expresiones -> lista_expresiones SEP_MATCH . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 139
    exp_if                         shift and go to state 19

state 126

    (53) expresion -> I64 DOS_PT DOS_PT POW PARA . expresion COMA expresion PARC
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 140
    exp_if                         shift and go to state 19

state 127

    (9) prints -> PRINTLN ADMIRACION PARA CADENA COMA list_exp . PARC
    (11) list_exp -> list_exp . COMA expresion

    PARC            shift and go to state 142
    COMA            shift and go to state 141


state 128

    (12) list_exp -> expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    PARC            reduce using rule 12 (list_exp -> expresion .)
    COMA            reduce using rule 12 (list_exp -> expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    PUNTO           shift and go to state 41


state 129

    (29) exp_statement -> LLAVA instrucciones LLAVC .

    ELSE            reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    MAS             reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    MENOS           reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    MULTI           reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    DIV             reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    MODULO          reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    IGUAL_IGUAL     reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    NO_IGUAL        reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    MAYOR           reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    MENOR           reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    MAYOR_IGUAL     reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    MENOR_IGUAL     reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    AND             reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    OR              reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    PUNTO           reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    PRINTLN         reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    LET             reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    ID              reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    IF              reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    MATCH           reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    I64             reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    PARA            reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    NOT             reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    CADENA          reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    ENTERO          reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    DECIMAL         reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    CARACTER        reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    TRUE            reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    FALSE           reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    $end            reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    PARC            reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    LLAVA           reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    PT_COMA         reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    LLAVC           reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    ARROW           reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    SEP_MATCH       reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)
    COMA            reduce using rule 29 (exp_statement -> LLAVA instrucciones LLAVC .)


state 130

    (13) declaracion -> LET MUT ID DOS_PT tipo IGUAL . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 143
    exp_if                         shift and go to state 19

state 131

    (17) declaracion -> LET ID DOS_PT tipo IGUAL expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    PT_COMA         reduce using rule 17 (declaracion -> LET ID DOS_PT tipo IGUAL expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    PUNTO           shift and go to state 41


state 132

    (40) statement -> LLAVA instrucciones . LLAVC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) prints -> . PRINTLN ADMIRACION PARA CADENA COMA list_exp PARC
    (10) prints -> . PRINTLN ADMIRACION PARA CADENA PARC
    (13) declaracion -> . LET MUT ID DOS_PT tipo IGUAL expresion
    (14) declaracion -> . LET MUT ID DOS_PT tipo
    (15) declaracion -> . LET MUT ID IGUAL expresion
    (16) declaracion -> . LET MUT ID
    (17) declaracion -> . LET ID DOS_PT tipo IGUAL expresion
    (18) declaracion -> . LET ID DOS_PT tipo
    (19) declaracion -> . LET ID IGUAL expresion
    (20) declaracion -> . LET ID
    (21) declaracion -> . ID IGUAL expresion
    (22) sent_if -> . IF expresion statement sent_else
    (30) match -> . MATCH expresion casos_match
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    LLAVC           shift and go to state 144
    PRINTLN         shift and go to state 9
    LET             shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    MATCH           shift and go to state 15
    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    instruccion                    shift and go to state 25
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    exp_if                         shift and go to state 19

state 133

    (22) sent_if -> IF expresion . statement sent_else
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (40) statement -> . LLAVA instrucciones LLAVC
    (41) statement -> . LLAVA LLAVC

    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    PUNTO           shift and go to state 41
    LLAVA           shift and go to state 116

    statement                      shift and go to state 76

state 134

    (31) casos_match -> LLAVA lista_casos default LLAVC .

    PRINTLN         reduce using rule 31 (casos_match -> LLAVA lista_casos default LLAVC .)
    LET             reduce using rule 31 (casos_match -> LLAVA lista_casos default LLAVC .)
    ID              reduce using rule 31 (casos_match -> LLAVA lista_casos default LLAVC .)
    IF              reduce using rule 31 (casos_match -> LLAVA lista_casos default LLAVC .)
    MATCH           reduce using rule 31 (casos_match -> LLAVA lista_casos default LLAVC .)
    I64             reduce using rule 31 (casos_match -> LLAVA lista_casos default LLAVC .)
    PARA            reduce using rule 31 (casos_match -> LLAVA lista_casos default LLAVC .)
    MENOS           reduce using rule 31 (casos_match -> LLAVA lista_casos default LLAVC .)
    NOT             reduce using rule 31 (casos_match -> LLAVA lista_casos default LLAVC .)
    CADENA          reduce using rule 31 (casos_match -> LLAVA lista_casos default LLAVC .)
    ENTERO          reduce using rule 31 (casos_match -> LLAVA lista_casos default LLAVC .)
    DECIMAL         reduce using rule 31 (casos_match -> LLAVA lista_casos default LLAVC .)
    CARACTER        reduce using rule 31 (casos_match -> LLAVA lista_casos default LLAVC .)
    TRUE            reduce using rule 31 (casos_match -> LLAVA lista_casos default LLAVC .)
    FALSE           reduce using rule 31 (casos_match -> LLAVA lista_casos default LLAVC .)
    $end            reduce using rule 31 (casos_match -> LLAVA lista_casos default LLAVC .)
    LLAVC           reduce using rule 31 (casos_match -> LLAVA lista_casos default LLAVC .)
    COMA            reduce using rule 31 (casos_match -> LLAVA lista_casos default LLAVC .)


state 135

    (32) lista_casos -> lista_casos lista_expresiones ARROW . statement COMA
    (33) lista_casos -> lista_casos lista_expresiones ARROW . instruccion COMA
    (40) statement -> . LLAVA instrucciones LLAVC
    (41) statement -> . LLAVA LLAVC
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) prints -> . PRINTLN ADMIRACION PARA CADENA COMA list_exp PARC
    (10) prints -> . PRINTLN ADMIRACION PARA CADENA PARC
    (13) declaracion -> . LET MUT ID DOS_PT tipo IGUAL expresion
    (14) declaracion -> . LET MUT ID DOS_PT tipo
    (15) declaracion -> . LET MUT ID IGUAL expresion
    (16) declaracion -> . LET MUT ID
    (17) declaracion -> . LET ID DOS_PT tipo IGUAL expresion
    (18) declaracion -> . LET ID DOS_PT tipo
    (19) declaracion -> . LET ID IGUAL expresion
    (20) declaracion -> . LET ID
    (21) declaracion -> . ID IGUAL expresion
    (22) sent_if -> . IF expresion statement sent_else
    (30) match -> . MATCH expresion casos_match
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    LLAVA           shift and go to state 116
    PRINTLN         shift and go to state 9
    LET             shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    MATCH           shift and go to state 15
    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    statement                      shift and go to state 145
    instruccion                    shift and go to state 146
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    exp_if                         shift and go to state 19

state 136

    (38) default -> GUION_B ARROW . statement COMA
    (39) default -> GUION_B ARROW . instruccion COMA
    (40) statement -> . LLAVA instrucciones LLAVC
    (41) statement -> . LLAVA LLAVC
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) prints -> . PRINTLN ADMIRACION PARA CADENA COMA list_exp PARC
    (10) prints -> . PRINTLN ADMIRACION PARA CADENA PARC
    (13) declaracion -> . LET MUT ID DOS_PT tipo IGUAL expresion
    (14) declaracion -> . LET MUT ID DOS_PT tipo
    (15) declaracion -> . LET MUT ID IGUAL expresion
    (16) declaracion -> . LET MUT ID
    (17) declaracion -> . LET ID DOS_PT tipo IGUAL expresion
    (18) declaracion -> . LET ID DOS_PT tipo
    (19) declaracion -> . LET ID IGUAL expresion
    (20) declaracion -> . LET ID
    (21) declaracion -> . ID IGUAL expresion
    (22) sent_if -> . IF expresion statement sent_else
    (30) match -> . MATCH expresion casos_match
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    LLAVA           shift and go to state 116
    PRINTLN         shift and go to state 9
    LET             shift and go to state 12
    ID              shift and go to state 13
    IF              shift and go to state 14
    MATCH           shift and go to state 15
    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    statement                      shift and go to state 147
    instruccion                    shift and go to state 148
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    exp_if                         shift and go to state 19

state 137

    (34) lista_casos -> lista_expresiones ARROW statement . COMA

    COMA            shift and go to state 149


state 138

    (35) lista_casos -> lista_expresiones ARROW instruccion . COMA

    COMA            shift and go to state 150


state 139

    (36) lista_expresiones -> lista_expresiones SEP_MATCH expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    ARROW           reduce using rule 36 (lista_expresiones -> lista_expresiones SEP_MATCH expresion .)
    SEP_MATCH       reduce using rule 36 (lista_expresiones -> lista_expresiones SEP_MATCH expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    PUNTO           shift and go to state 41


state 140

    (53) expresion -> I64 DOS_PT DOS_PT POW PARA expresion . COMA expresion PARC
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    COMA            shift and go to state 151
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    PUNTO           shift and go to state 41


state 141

    (11) list_exp -> list_exp COMA . expresion
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 152
    exp_if                         shift and go to state 19

state 142

    (9) prints -> PRINTLN ADMIRACION PARA CADENA COMA list_exp PARC .

    PT_COMA         reduce using rule 9 (prints -> PRINTLN ADMIRACION PARA CADENA COMA list_exp PARC .)


state 143

    (13) declaracion -> LET MUT ID DOS_PT tipo IGUAL expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    PT_COMA         reduce using rule 13 (declaracion -> LET MUT ID DOS_PT tipo IGUAL expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    PUNTO           shift and go to state 41


state 144

    (40) statement -> LLAVA instrucciones LLAVC .

    PRINTLN         reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    LET             reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    ID              reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    IF              reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    MATCH           reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    I64             reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    PARA            reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    MENOS           reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    NOT             reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    CADENA          reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    ENTERO          reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    DECIMAL         reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    CARACTER        reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    TRUE            reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    FALSE           reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    $end            reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    LLAVC           reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    COMA            reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)
    ELSE            reduce using rule 40 (statement -> LLAVA instrucciones LLAVC .)


state 145

    (32) lista_casos -> lista_casos lista_expresiones ARROW statement . COMA

    COMA            shift and go to state 153


state 146

    (33) lista_casos -> lista_casos lista_expresiones ARROW instruccion . COMA

    COMA            shift and go to state 154


state 147

    (38) default -> GUION_B ARROW statement . COMA

    COMA            shift and go to state 155


state 148

    (39) default -> GUION_B ARROW instruccion . COMA

    COMA            shift and go to state 156


state 149

    (34) lista_casos -> lista_expresiones ARROW statement COMA .

    GUION_B         reduce using rule 34 (lista_casos -> lista_expresiones ARROW statement COMA .)
    I64             reduce using rule 34 (lista_casos -> lista_expresiones ARROW statement COMA .)
    PARA            reduce using rule 34 (lista_casos -> lista_expresiones ARROW statement COMA .)
    MENOS           reduce using rule 34 (lista_casos -> lista_expresiones ARROW statement COMA .)
    NOT             reduce using rule 34 (lista_casos -> lista_expresiones ARROW statement COMA .)
    CADENA          reduce using rule 34 (lista_casos -> lista_expresiones ARROW statement COMA .)
    ENTERO          reduce using rule 34 (lista_casos -> lista_expresiones ARROW statement COMA .)
    DECIMAL         reduce using rule 34 (lista_casos -> lista_expresiones ARROW statement COMA .)
    CARACTER        reduce using rule 34 (lista_casos -> lista_expresiones ARROW statement COMA .)
    TRUE            reduce using rule 34 (lista_casos -> lista_expresiones ARROW statement COMA .)
    FALSE           reduce using rule 34 (lista_casos -> lista_expresiones ARROW statement COMA .)
    ID              reduce using rule 34 (lista_casos -> lista_expresiones ARROW statement COMA .)
    IF              reduce using rule 34 (lista_casos -> lista_expresiones ARROW statement COMA .)


state 150

    (35) lista_casos -> lista_expresiones ARROW instruccion COMA .

    GUION_B         reduce using rule 35 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    I64             reduce using rule 35 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    PARA            reduce using rule 35 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    MENOS           reduce using rule 35 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    NOT             reduce using rule 35 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    CADENA          reduce using rule 35 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    ENTERO          reduce using rule 35 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    DECIMAL         reduce using rule 35 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    CARACTER        reduce using rule 35 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    TRUE            reduce using rule 35 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    FALSE           reduce using rule 35 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    ID              reduce using rule 35 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    IF              reduce using rule 35 (lista_casos -> lista_expresiones ARROW instruccion COMA .)


state 151

    (53) expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA . expresion PARC
    (48) expresion -> . expresion MAS expresion
    (49) expresion -> . expresion MENOS expresion
    (50) expresion -> . expresion MULTI expresion
    (51) expresion -> . expresion DIV expresion
    (52) expresion -> . expresion MODULO expresion
    (53) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (54) expresion -> . PARA expresion PARC
    (55) expresion -> . MENOS expresion
    (56) expresion -> . expresion IGUAL_IGUAL expresion
    (57) expresion -> . expresion NO_IGUAL expresion
    (58) expresion -> . expresion MAYOR expresion
    (59) expresion -> . expresion MENOR expresion
    (60) expresion -> . expresion MAYOR_IGUAL expresion
    (61) expresion -> . expresion MENOR_IGUAL expresion
    (62) expresion -> . expresion AND expresion
    (63) expresion -> . expresion OR expresion
    (64) expresion -> . NOT expresion
    (65) expresion -> . exp_if
    (66) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (67) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (68) expresion -> . CADENA
    (69) expresion -> . ENTERO
    (70) expresion -> . DECIMAL
    (71) expresion -> . CARACTER
    (72) expresion -> . TRUE
    (73) expresion -> . FALSE
    (74) expresion -> . ID
    (26) exp_if -> . IF expresion exp_statement exp_else

    I64             shift and go to state 17
    PARA            shift and go to state 10
    MENOS           shift and go to state 16
    NOT             shift and go to state 18
    CADENA          shift and go to state 11
    ENTERO          shift and go to state 20
    DECIMAL         shift and go to state 21
    CARACTER        shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    ID              shift and go to state 44
    IF              shift and go to state 45

    expresion                      shift and go to state 157
    exp_if                         shift and go to state 19

state 152

    (11) list_exp -> list_exp COMA expresion .
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    PARC            reduce using rule 11 (list_exp -> list_exp COMA expresion .)
    COMA            reduce using rule 11 (list_exp -> list_exp COMA expresion .)
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    PUNTO           shift and go to state 41


state 153

    (32) lista_casos -> lista_casos lista_expresiones ARROW statement COMA .

    GUION_B         reduce using rule 32 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    I64             reduce using rule 32 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    PARA            reduce using rule 32 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    MENOS           reduce using rule 32 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    NOT             reduce using rule 32 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    CADENA          reduce using rule 32 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    ENTERO          reduce using rule 32 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    DECIMAL         reduce using rule 32 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    CARACTER        reduce using rule 32 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    TRUE            reduce using rule 32 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    FALSE           reduce using rule 32 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    ID              reduce using rule 32 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    IF              reduce using rule 32 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)


state 154

    (33) lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .

    GUION_B         reduce using rule 33 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    I64             reduce using rule 33 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    PARA            reduce using rule 33 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    MENOS           reduce using rule 33 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    NOT             reduce using rule 33 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    CADENA          reduce using rule 33 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    ENTERO          reduce using rule 33 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    DECIMAL         reduce using rule 33 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    CARACTER        reduce using rule 33 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    TRUE            reduce using rule 33 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    FALSE           reduce using rule 33 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    ID              reduce using rule 33 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    IF              reduce using rule 33 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)


state 155

    (38) default -> GUION_B ARROW statement COMA .

    LLAVC           reduce using rule 38 (default -> GUION_B ARROW statement COMA .)


state 156

    (39) default -> GUION_B ARROW instruccion COMA .

    LLAVC           reduce using rule 39 (default -> GUION_B ARROW instruccion COMA .)


state 157

    (53) expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion . PARC
    (48) expresion -> expresion . MAS expresion
    (49) expresion -> expresion . MENOS expresion
    (50) expresion -> expresion . MULTI expresion
    (51) expresion -> expresion . DIV expresion
    (52) expresion -> expresion . MODULO expresion
    (56) expresion -> expresion . IGUAL_IGUAL expresion
    (57) expresion -> expresion . NO_IGUAL expresion
    (58) expresion -> expresion . MAYOR expresion
    (59) expresion -> expresion . MENOR expresion
    (60) expresion -> expresion . MAYOR_IGUAL expresion
    (61) expresion -> expresion . MENOR_IGUAL expresion
    (62) expresion -> expresion . AND expresion
    (63) expresion -> expresion . OR expresion
    (66) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (67) expresion -> expresion . PUNTO TO_STRING PARA PARC

    PARC            shift and go to state 158
    MAS             shift and go to state 28
    MENOS           shift and go to state 29
    MULTI           shift and go to state 30
    DIV             shift and go to state 31
    MODULO          shift and go to state 32
    IGUAL_IGUAL     shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MAYOR           shift and go to state 35
    MENOR           shift and go to state 36
    MAYOR_IGUAL     shift and go to state 37
    MENOR_IGUAL     shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    PUNTO           shift and go to state 41


state 158

    (53) expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .

    MAS             reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MENOS           reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MULTI           reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    DIV             reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MODULO          reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    IGUAL_IGUAL     reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    NO_IGUAL        reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MAYOR           reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MENOR           reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MAYOR_IGUAL     reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MENOR_IGUAL     reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    AND             reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    OR              reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PUNTO           reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PRINTLN         reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    LET             reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    ID              reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    IF              reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MATCH           reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    I64             reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PARA            reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    NOT             reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    CADENA          reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    ENTERO          reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    DECIMAL         reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    CARACTER        reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    TRUE            reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    FALSE           reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    $end            reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PARC            reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    LLAVA           reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PT_COMA         reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    LLAVC           reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    ARROW           reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    SEP_MATCH       reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    COMA            reduce using rule 53 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MENOS in state 8 resolved as shift
WARNING: reduce/reduce conflict in state 120 resolved using rule (exp_statement -> LLAVA instrucciones LLAVC)
WARNING: rejected rule (statement -> LLAVA instrucciones LLAVC) in state 120
