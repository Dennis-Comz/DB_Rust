Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> prints PT_COMA
Rule 5     instruccion -> declaracion PT_COMA
Rule 6     instruccion -> sent_if
Rule 7     instruccion -> match
Rule 8     instruccion -> expresion
Rule 9     instruccion -> return PT_COMA
Rule 10    instruccion -> break PT_COMA
Rule 11    instruccion -> continue PT_COMA
Rule 12    prints -> PRINTLN NOT PARA CADENA COMA list_exp PARC
Rule 13    prints -> PRINTLN NOT PARA CADENA PARC
Rule 14    list_exp -> list_exp COMA expresion
Rule 15    list_exp -> expresion
Rule 16    declaracion -> LET MUT ID DOS_PT tipo IGUAL valores
Rule 17    declaracion -> LET MUT ID DOS_PT tipo
Rule 18    declaracion -> LET MUT ID IGUAL valores
Rule 19    declaracion -> LET MUT ID
Rule 20    declaracion -> LET ID DOS_PT tipo IGUAL valores
Rule 21    declaracion -> LET ID DOS_PT tipo
Rule 22    declaracion -> LET ID IGUAL valores
Rule 23    declaracion -> LET ID
Rule 24    declaracion -> ID IGUAL valores
Rule 25    valores -> expresion
Rule 26    valores -> sent_if
Rule 27    valores -> match
Rule 28    sent_if -> IF expresion statement sent_else
Rule 29    sent_else -> ELSE statement
Rule 30    sent_else -> ELSE sent_if
Rule 31    sent_else -> <empty>
Rule 32    match -> MATCH expresion casos_match
Rule 33    casos_match -> LLAVA lista_casos default LLAVC
Rule 34    lista_casos -> lista_casos lista_expresiones ARROW statement COMA
Rule 35    lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA
Rule 36    lista_casos -> lista_expresiones ARROW statement COMA
Rule 37    lista_casos -> lista_expresiones ARROW instruccion COMA
Rule 38    lista_expresiones -> lista_expresiones SEP_MATCH expresion
Rule 39    lista_expresiones -> expresion
Rule 40    default -> GUION_B ARROW statement COMA
Rule 41    default -> GUION_B ARROW instruccion COMA
Rule 42    return -> RETURN
Rule 43    return -> RETURN expresion
Rule 44    break -> BREAK
Rule 45    continue -> CONTINUE
Rule 46    statement -> LLAVA instrucciones LLAVC
Rule 47    statement -> LLAVA LLAVC
Rule 48    tipo -> I64
Rule 49    tipo -> F64
Rule 50    tipo -> BOOL
Rule 51    tipo -> STRING
Rule 52    tipo -> STR
Rule 53    tipo -> CHAR
Rule 54    expresion -> MENOS expresion
Rule 55    expresion -> expresion MAS expresion
Rule 56    expresion -> expresion MENOS expresion
Rule 57    expresion -> expresion MULTI expresion
Rule 58    expresion -> expresion DIV expresion
Rule 59    expresion -> expresion MODULO expresion
Rule 60    expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
Rule 61    expresion -> PARA expresion PARC
Rule 62    expresion -> expresion IGUAL_IGUAL expresion
Rule 63    expresion -> expresion NO_IGUAL expresion
Rule 64    expresion -> expresion MAYOR expresion
Rule 65    expresion -> expresion MENOR expresion
Rule 66    expresion -> expresion MAYOR_IGUAL expresion
Rule 67    expresion -> expresion MENOR_IGUAL expresion
Rule 68    expresion -> expresion AND expresion
Rule 69    expresion -> expresion OR expresion
Rule 70    expresion -> NOT expresion
Rule 71    expresion -> ENTERO
Rule 72    expresion -> DECIMAL
Rule 73    expresion -> ID
Rule 74    expresion -> CADENA
Rule 75    expresion -> CARACTER
Rule 76    expresion -> TRUE
Rule 77    expresion -> FALSE
Rule 78    expresion -> expresion PUNTO TO_OWNED PARA PARC
Rule 79    expresion -> expresion PUNTO TO_STRING PARA PARC
Rule 80    expresion -> expresion PUNTO ABSOLUTO PARA PARC
Rule 81    expresion -> expresion PUNTO RAIZ PARA PARC
Rule 82    expresion -> expresion AS F64
Rule 83    expresion -> expresion AS I64

Terminals, with rules where they appear

ABSOLUTO             : 80
AND                  : 68
ARROW                : 34 35 36 37 40 41
AS                   : 82 83
BOOL                 : 50
BREAK                : 44
CADENA               : 12 13 74
CARACTER             : 75
CHAR                 : 53
COMA                 : 12 14 34 35 36 37 40 41 60
CONTINUE             : 45
DECIMAL              : 72
DIV                  : 58
DOS_PT               : 16 17 20 21 60 60
ELSE                 : 29 30
ENTERO               : 71
F64                  : 49 82
FALSE                : 77
GUION_B              : 40 41
I64                  : 48 60 83
ID                   : 16 17 18 19 20 21 22 23 24 73
IF                   : 28
IGUAL                : 16 18 20 22 24
IGUAL_IGUAL          : 62
LET                  : 16 17 18 19 20 21 22 23
LLAVA                : 33 46 47
LLAVC                : 33 46 47
MAS                  : 55
MATCH                : 32
MAYOR                : 64
MAYOR_IGUAL          : 66
MENOR                : 65
MENOR_IGUAL          : 67
MENOS                : 54 56
MODULO               : 59
MULTI                : 57
MUT                  : 16 17 18 19
NOT                  : 12 13 70
NO_IGUAL             : 63
OR                   : 69
PARA                 : 12 13 60 61 78 79 80 81
PARC                 : 12 13 60 61 78 79 80 81
POW                  : 60
PRINTLN              : 12 13
PT_COMA              : 4 5 9 10 11
PUNTO                : 78 79 80 81
RAIZ                 : 81
RETURN               : 42 43
SEP_MATCH            : 38
STR                  : 52
STRING               : 51
TO_OWNED             : 78
TO_STRING            : 79
TRUE                 : 76
error                : 

Nonterminals, with rules where they appear

break                : 10
casos_match          : 32
continue             : 11
declaracion          : 5
default              : 33
expresion            : 8 14 15 25 28 32 38 39 43 54 55 55 56 56 57 57 58 58 59 59 60 60 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 78 79 80 81 82 83
inicio               : 0
instruccion          : 2 3 35 37 41
instrucciones        : 1 2 46
list_exp             : 12 14
lista_casos          : 33 34 35
lista_expresiones    : 34 35 36 37 38
match                : 7 27
prints               : 4
return               : 9
sent_else            : 28
sent_if              : 6 26 30
statement            : 28 29 34 36 40
tipo                 : 16 17 20 21
valores              : 16 18 20 22 24

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (13) prints -> . PRINTLN NOT PARA CADENA PARC
    (16) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (17) declaracion -> . LET MUT ID DOS_PT tipo
    (18) declaracion -> . LET MUT ID IGUAL valores
    (19) declaracion -> . LET MUT ID
    (20) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (21) declaracion -> . LET ID DOS_PT tipo
    (22) declaracion -> . LET ID IGUAL valores
    (23) declaracion -> . LET ID
    (24) declaracion -> . ID IGUAL valores
    (28) sent_if -> . IF expresion statement sent_else
    (32) match -> . MATCH expresion casos_match
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64
    (42) return -> . RETURN
    (43) return -> . RETURN expresion
    (44) break -> . BREAK
    (45) continue -> . CONTINUE

    PRINTLN         shift and go to state 12
    LET             shift and go to state 16
    ID              shift and go to state 17
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    RETURN          shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (13) prints -> . PRINTLN NOT PARA CADENA PARC
    (16) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (17) declaracion -> . LET MUT ID DOS_PT tipo
    (18) declaracion -> . LET MUT ID IGUAL valores
    (19) declaracion -> . LET MUT ID
    (20) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (21) declaracion -> . LET ID DOS_PT tipo
    (22) declaracion -> . LET ID IGUAL valores
    (23) declaracion -> . LET ID
    (24) declaracion -> . ID IGUAL valores
    (28) sent_if -> . IF expresion statement sent_else
    (32) match -> . MATCH expresion casos_match
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64
    (42) return -> . RETURN
    (43) return -> . RETURN expresion
    (44) break -> . BREAK
    (45) continue -> . CONTINUE

    $end            reduce using rule 1 (inicio -> instrucciones .)
    PRINTLN         shift and go to state 12
    LET             shift and go to state 16
    ID              shift and go to state 17
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    RETURN          shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29

    instruccion                    shift and go to state 30
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11

state 3

    (3) instrucciones -> instruccion .

    PRINTLN         reduce using rule 3 (instrucciones -> instruccion .)
    LET             reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    MATCH           reduce using rule 3 (instrucciones -> instruccion .)
    MENOS           reduce using rule 3 (instrucciones -> instruccion .)
    I64             reduce using rule 3 (instrucciones -> instruccion .)
    PARA            reduce using rule 3 (instrucciones -> instruccion .)
    NOT             reduce using rule 3 (instrucciones -> instruccion .)
    ENTERO          reduce using rule 3 (instrucciones -> instruccion .)
    DECIMAL         reduce using rule 3 (instrucciones -> instruccion .)
    CADENA          reduce using rule 3 (instrucciones -> instruccion .)
    CARACTER        reduce using rule 3 (instrucciones -> instruccion .)
    TRUE            reduce using rule 3 (instrucciones -> instruccion .)
    FALSE           reduce using rule 3 (instrucciones -> instruccion .)
    RETURN          reduce using rule 3 (instrucciones -> instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVC           reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> prints . PT_COMA

    PT_COMA         shift and go to state 31


state 5

    (5) instruccion -> declaracion . PT_COMA

    PT_COMA         shift and go to state 32


state 6

    (6) instruccion -> sent_if .

    PRINTLN         reduce using rule 6 (instruccion -> sent_if .)
    LET             reduce using rule 6 (instruccion -> sent_if .)
    ID              reduce using rule 6 (instruccion -> sent_if .)
    IF              reduce using rule 6 (instruccion -> sent_if .)
    MATCH           reduce using rule 6 (instruccion -> sent_if .)
    MENOS           reduce using rule 6 (instruccion -> sent_if .)
    I64             reduce using rule 6 (instruccion -> sent_if .)
    PARA            reduce using rule 6 (instruccion -> sent_if .)
    NOT             reduce using rule 6 (instruccion -> sent_if .)
    ENTERO          reduce using rule 6 (instruccion -> sent_if .)
    DECIMAL         reduce using rule 6 (instruccion -> sent_if .)
    CADENA          reduce using rule 6 (instruccion -> sent_if .)
    CARACTER        reduce using rule 6 (instruccion -> sent_if .)
    TRUE            reduce using rule 6 (instruccion -> sent_if .)
    FALSE           reduce using rule 6 (instruccion -> sent_if .)
    RETURN          reduce using rule 6 (instruccion -> sent_if .)
    BREAK           reduce using rule 6 (instruccion -> sent_if .)
    CONTINUE        reduce using rule 6 (instruccion -> sent_if .)
    $end            reduce using rule 6 (instruccion -> sent_if .)
    LLAVC           reduce using rule 6 (instruccion -> sent_if .)
    COMA            reduce using rule 6 (instruccion -> sent_if .)


state 7

    (7) instruccion -> match .

    PRINTLN         reduce using rule 7 (instruccion -> match .)
    LET             reduce using rule 7 (instruccion -> match .)
    ID              reduce using rule 7 (instruccion -> match .)
    IF              reduce using rule 7 (instruccion -> match .)
    MATCH           reduce using rule 7 (instruccion -> match .)
    MENOS           reduce using rule 7 (instruccion -> match .)
    I64             reduce using rule 7 (instruccion -> match .)
    PARA            reduce using rule 7 (instruccion -> match .)
    NOT             reduce using rule 7 (instruccion -> match .)
    ENTERO          reduce using rule 7 (instruccion -> match .)
    DECIMAL         reduce using rule 7 (instruccion -> match .)
    CADENA          reduce using rule 7 (instruccion -> match .)
    CARACTER        reduce using rule 7 (instruccion -> match .)
    TRUE            reduce using rule 7 (instruccion -> match .)
    FALSE           reduce using rule 7 (instruccion -> match .)
    RETURN          reduce using rule 7 (instruccion -> match .)
    BREAK           reduce using rule 7 (instruccion -> match .)
    CONTINUE        reduce using rule 7 (instruccion -> match .)
    $end            reduce using rule 7 (instruccion -> match .)
    LLAVC           reduce using rule 7 (instruccion -> match .)
    COMA            reduce using rule 7 (instruccion -> match .)


state 8

    (8) instruccion -> expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

  ! shift/reduce conflict for MENOS resolved as shift
    PRINTLN         reduce using rule 8 (instruccion -> expresion .)
    LET             reduce using rule 8 (instruccion -> expresion .)
    ID              reduce using rule 8 (instruccion -> expresion .)
    IF              reduce using rule 8 (instruccion -> expresion .)
    MATCH           reduce using rule 8 (instruccion -> expresion .)
    I64             reduce using rule 8 (instruccion -> expresion .)
    PARA            reduce using rule 8 (instruccion -> expresion .)
    NOT             reduce using rule 8 (instruccion -> expresion .)
    ENTERO          reduce using rule 8 (instruccion -> expresion .)
    DECIMAL         reduce using rule 8 (instruccion -> expresion .)
    CADENA          reduce using rule 8 (instruccion -> expresion .)
    CARACTER        reduce using rule 8 (instruccion -> expresion .)
    TRUE            reduce using rule 8 (instruccion -> expresion .)
    FALSE           reduce using rule 8 (instruccion -> expresion .)
    RETURN          reduce using rule 8 (instruccion -> expresion .)
    BREAK           reduce using rule 8 (instruccion -> expresion .)
    CONTINUE        reduce using rule 8 (instruccion -> expresion .)
    $end            reduce using rule 8 (instruccion -> expresion .)
    LLAVC           reduce using rule 8 (instruccion -> expresion .)
    COMA            reduce using rule 8 (instruccion -> expresion .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37
    IGUAL_IGUAL     shift and go to state 38
    NO_IGUAL        shift and go to state 39
    MAYOR           shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR_IGUAL     shift and go to state 42
    MENOR_IGUAL     shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    PUNTO           shift and go to state 46
    AS              shift and go to state 47

  ! MENOS           [ reduce using rule 8 (instruccion -> expresion .) ]


state 9

    (9) instruccion -> return . PT_COMA

    PT_COMA         shift and go to state 48


state 10

    (10) instruccion -> break . PT_COMA

    PT_COMA         shift and go to state 49


state 11

    (11) instruccion -> continue . PT_COMA

    PT_COMA         shift and go to state 50


state 12

    (12) prints -> PRINTLN . NOT PARA CADENA COMA list_exp PARC
    (13) prints -> PRINTLN . NOT PARA CADENA PARC

    NOT             shift and go to state 51


state 13

    (70) expresion -> NOT . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 52

state 14

    (61) expresion -> PARA . expresion PARC
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 54

state 15

    (74) expresion -> CADENA .

    MAS             reduce using rule 74 (expresion -> CADENA .)
    MENOS           reduce using rule 74 (expresion -> CADENA .)
    MULTI           reduce using rule 74 (expresion -> CADENA .)
    DIV             reduce using rule 74 (expresion -> CADENA .)
    MODULO          reduce using rule 74 (expresion -> CADENA .)
    IGUAL_IGUAL     reduce using rule 74 (expresion -> CADENA .)
    NO_IGUAL        reduce using rule 74 (expresion -> CADENA .)
    MAYOR           reduce using rule 74 (expresion -> CADENA .)
    MENOR           reduce using rule 74 (expresion -> CADENA .)
    MAYOR_IGUAL     reduce using rule 74 (expresion -> CADENA .)
    MENOR_IGUAL     reduce using rule 74 (expresion -> CADENA .)
    AND             reduce using rule 74 (expresion -> CADENA .)
    OR              reduce using rule 74 (expresion -> CADENA .)
    PUNTO           reduce using rule 74 (expresion -> CADENA .)
    AS              reduce using rule 74 (expresion -> CADENA .)
    PRINTLN         reduce using rule 74 (expresion -> CADENA .)
    LET             reduce using rule 74 (expresion -> CADENA .)
    ID              reduce using rule 74 (expresion -> CADENA .)
    IF              reduce using rule 74 (expresion -> CADENA .)
    MATCH           reduce using rule 74 (expresion -> CADENA .)
    I64             reduce using rule 74 (expresion -> CADENA .)
    PARA            reduce using rule 74 (expresion -> CADENA .)
    NOT             reduce using rule 74 (expresion -> CADENA .)
    ENTERO          reduce using rule 74 (expresion -> CADENA .)
    DECIMAL         reduce using rule 74 (expresion -> CADENA .)
    CADENA          reduce using rule 74 (expresion -> CADENA .)
    CARACTER        reduce using rule 74 (expresion -> CADENA .)
    TRUE            reduce using rule 74 (expresion -> CADENA .)
    FALSE           reduce using rule 74 (expresion -> CADENA .)
    RETURN          reduce using rule 74 (expresion -> CADENA .)
    BREAK           reduce using rule 74 (expresion -> CADENA .)
    CONTINUE        reduce using rule 74 (expresion -> CADENA .)
    $end            reduce using rule 74 (expresion -> CADENA .)
    PARC            reduce using rule 74 (expresion -> CADENA .)
    LLAVA           reduce using rule 74 (expresion -> CADENA .)
    PT_COMA         reduce using rule 74 (expresion -> CADENA .)
    LLAVC           reduce using rule 74 (expresion -> CADENA .)
    ARROW           reduce using rule 74 (expresion -> CADENA .)
    SEP_MATCH       reduce using rule 74 (expresion -> CADENA .)
    COMA            reduce using rule 74 (expresion -> CADENA .)


state 16

    (16) declaracion -> LET . MUT ID DOS_PT tipo IGUAL valores
    (17) declaracion -> LET . MUT ID DOS_PT tipo
    (18) declaracion -> LET . MUT ID IGUAL valores
    (19) declaracion -> LET . MUT ID
    (20) declaracion -> LET . ID DOS_PT tipo IGUAL valores
    (21) declaracion -> LET . ID DOS_PT tipo
    (22) declaracion -> LET . ID IGUAL valores
    (23) declaracion -> LET . ID

    MUT             shift and go to state 55
    ID              shift and go to state 56


state 17

    (24) declaracion -> ID . IGUAL valores
    (73) expresion -> ID .

    IGUAL           shift and go to state 57
    MAS             reduce using rule 73 (expresion -> ID .)
    MENOS           reduce using rule 73 (expresion -> ID .)
    MULTI           reduce using rule 73 (expresion -> ID .)
    DIV             reduce using rule 73 (expresion -> ID .)
    MODULO          reduce using rule 73 (expresion -> ID .)
    IGUAL_IGUAL     reduce using rule 73 (expresion -> ID .)
    NO_IGUAL        reduce using rule 73 (expresion -> ID .)
    MAYOR           reduce using rule 73 (expresion -> ID .)
    MENOR           reduce using rule 73 (expresion -> ID .)
    MAYOR_IGUAL     reduce using rule 73 (expresion -> ID .)
    MENOR_IGUAL     reduce using rule 73 (expresion -> ID .)
    AND             reduce using rule 73 (expresion -> ID .)
    OR              reduce using rule 73 (expresion -> ID .)
    PUNTO           reduce using rule 73 (expresion -> ID .)
    AS              reduce using rule 73 (expresion -> ID .)
    PRINTLN         reduce using rule 73 (expresion -> ID .)
    LET             reduce using rule 73 (expresion -> ID .)
    ID              reduce using rule 73 (expresion -> ID .)
    IF              reduce using rule 73 (expresion -> ID .)
    MATCH           reduce using rule 73 (expresion -> ID .)
    I64             reduce using rule 73 (expresion -> ID .)
    PARA            reduce using rule 73 (expresion -> ID .)
    NOT             reduce using rule 73 (expresion -> ID .)
    ENTERO          reduce using rule 73 (expresion -> ID .)
    DECIMAL         reduce using rule 73 (expresion -> ID .)
    CADENA          reduce using rule 73 (expresion -> ID .)
    CARACTER        reduce using rule 73 (expresion -> ID .)
    TRUE            reduce using rule 73 (expresion -> ID .)
    FALSE           reduce using rule 73 (expresion -> ID .)
    RETURN          reduce using rule 73 (expresion -> ID .)
    BREAK           reduce using rule 73 (expresion -> ID .)
    CONTINUE        reduce using rule 73 (expresion -> ID .)
    $end            reduce using rule 73 (expresion -> ID .)
    LLAVC           reduce using rule 73 (expresion -> ID .)
    COMA            reduce using rule 73 (expresion -> ID .)


state 18

    (28) sent_if -> IF . expresion statement sent_else
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 58

state 19

    (32) match -> MATCH . expresion casos_match
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 59

state 20

    (54) expresion -> MENOS . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 60

state 21

    (60) expresion -> I64 . DOS_PT DOS_PT POW PARA expresion COMA expresion PARC

    DOS_PT          shift and go to state 61


state 22

    (71) expresion -> ENTERO .

    MAS             reduce using rule 71 (expresion -> ENTERO .)
    MENOS           reduce using rule 71 (expresion -> ENTERO .)
    MULTI           reduce using rule 71 (expresion -> ENTERO .)
    DIV             reduce using rule 71 (expresion -> ENTERO .)
    MODULO          reduce using rule 71 (expresion -> ENTERO .)
    IGUAL_IGUAL     reduce using rule 71 (expresion -> ENTERO .)
    NO_IGUAL        reduce using rule 71 (expresion -> ENTERO .)
    MAYOR           reduce using rule 71 (expresion -> ENTERO .)
    MENOR           reduce using rule 71 (expresion -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 71 (expresion -> ENTERO .)
    MENOR_IGUAL     reduce using rule 71 (expresion -> ENTERO .)
    AND             reduce using rule 71 (expresion -> ENTERO .)
    OR              reduce using rule 71 (expresion -> ENTERO .)
    PUNTO           reduce using rule 71 (expresion -> ENTERO .)
    AS              reduce using rule 71 (expresion -> ENTERO .)
    PRINTLN         reduce using rule 71 (expresion -> ENTERO .)
    LET             reduce using rule 71 (expresion -> ENTERO .)
    ID              reduce using rule 71 (expresion -> ENTERO .)
    IF              reduce using rule 71 (expresion -> ENTERO .)
    MATCH           reduce using rule 71 (expresion -> ENTERO .)
    I64             reduce using rule 71 (expresion -> ENTERO .)
    PARA            reduce using rule 71 (expresion -> ENTERO .)
    NOT             reduce using rule 71 (expresion -> ENTERO .)
    ENTERO          reduce using rule 71 (expresion -> ENTERO .)
    DECIMAL         reduce using rule 71 (expresion -> ENTERO .)
    CADENA          reduce using rule 71 (expresion -> ENTERO .)
    CARACTER        reduce using rule 71 (expresion -> ENTERO .)
    TRUE            reduce using rule 71 (expresion -> ENTERO .)
    FALSE           reduce using rule 71 (expresion -> ENTERO .)
    RETURN          reduce using rule 71 (expresion -> ENTERO .)
    BREAK           reduce using rule 71 (expresion -> ENTERO .)
    CONTINUE        reduce using rule 71 (expresion -> ENTERO .)
    $end            reduce using rule 71 (expresion -> ENTERO .)
    PARC            reduce using rule 71 (expresion -> ENTERO .)
    LLAVA           reduce using rule 71 (expresion -> ENTERO .)
    PT_COMA         reduce using rule 71 (expresion -> ENTERO .)
    LLAVC           reduce using rule 71 (expresion -> ENTERO .)
    ARROW           reduce using rule 71 (expresion -> ENTERO .)
    SEP_MATCH       reduce using rule 71 (expresion -> ENTERO .)
    COMA            reduce using rule 71 (expresion -> ENTERO .)


state 23

    (72) expresion -> DECIMAL .

    MAS             reduce using rule 72 (expresion -> DECIMAL .)
    MENOS           reduce using rule 72 (expresion -> DECIMAL .)
    MULTI           reduce using rule 72 (expresion -> DECIMAL .)
    DIV             reduce using rule 72 (expresion -> DECIMAL .)
    MODULO          reduce using rule 72 (expresion -> DECIMAL .)
    IGUAL_IGUAL     reduce using rule 72 (expresion -> DECIMAL .)
    NO_IGUAL        reduce using rule 72 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 72 (expresion -> DECIMAL .)
    MENOR           reduce using rule 72 (expresion -> DECIMAL .)
    MAYOR_IGUAL     reduce using rule 72 (expresion -> DECIMAL .)
    MENOR_IGUAL     reduce using rule 72 (expresion -> DECIMAL .)
    AND             reduce using rule 72 (expresion -> DECIMAL .)
    OR              reduce using rule 72 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 72 (expresion -> DECIMAL .)
    AS              reduce using rule 72 (expresion -> DECIMAL .)
    PRINTLN         reduce using rule 72 (expresion -> DECIMAL .)
    LET             reduce using rule 72 (expresion -> DECIMAL .)
    ID              reduce using rule 72 (expresion -> DECIMAL .)
    IF              reduce using rule 72 (expresion -> DECIMAL .)
    MATCH           reduce using rule 72 (expresion -> DECIMAL .)
    I64             reduce using rule 72 (expresion -> DECIMAL .)
    PARA            reduce using rule 72 (expresion -> DECIMAL .)
    NOT             reduce using rule 72 (expresion -> DECIMAL .)
    ENTERO          reduce using rule 72 (expresion -> DECIMAL .)
    DECIMAL         reduce using rule 72 (expresion -> DECIMAL .)
    CADENA          reduce using rule 72 (expresion -> DECIMAL .)
    CARACTER        reduce using rule 72 (expresion -> DECIMAL .)
    TRUE            reduce using rule 72 (expresion -> DECIMAL .)
    FALSE           reduce using rule 72 (expresion -> DECIMAL .)
    RETURN          reduce using rule 72 (expresion -> DECIMAL .)
    BREAK           reduce using rule 72 (expresion -> DECIMAL .)
    CONTINUE        reduce using rule 72 (expresion -> DECIMAL .)
    $end            reduce using rule 72 (expresion -> DECIMAL .)
    PARC            reduce using rule 72 (expresion -> DECIMAL .)
    LLAVA           reduce using rule 72 (expresion -> DECIMAL .)
    PT_COMA         reduce using rule 72 (expresion -> DECIMAL .)
    LLAVC           reduce using rule 72 (expresion -> DECIMAL .)
    ARROW           reduce using rule 72 (expresion -> DECIMAL .)
    SEP_MATCH       reduce using rule 72 (expresion -> DECIMAL .)
    COMA            reduce using rule 72 (expresion -> DECIMAL .)


state 24

    (75) expresion -> CARACTER .

    MAS             reduce using rule 75 (expresion -> CARACTER .)
    MENOS           reduce using rule 75 (expresion -> CARACTER .)
    MULTI           reduce using rule 75 (expresion -> CARACTER .)
    DIV             reduce using rule 75 (expresion -> CARACTER .)
    MODULO          reduce using rule 75 (expresion -> CARACTER .)
    IGUAL_IGUAL     reduce using rule 75 (expresion -> CARACTER .)
    NO_IGUAL        reduce using rule 75 (expresion -> CARACTER .)
    MAYOR           reduce using rule 75 (expresion -> CARACTER .)
    MENOR           reduce using rule 75 (expresion -> CARACTER .)
    MAYOR_IGUAL     reduce using rule 75 (expresion -> CARACTER .)
    MENOR_IGUAL     reduce using rule 75 (expresion -> CARACTER .)
    AND             reduce using rule 75 (expresion -> CARACTER .)
    OR              reduce using rule 75 (expresion -> CARACTER .)
    PUNTO           reduce using rule 75 (expresion -> CARACTER .)
    AS              reduce using rule 75 (expresion -> CARACTER .)
    PRINTLN         reduce using rule 75 (expresion -> CARACTER .)
    LET             reduce using rule 75 (expresion -> CARACTER .)
    ID              reduce using rule 75 (expresion -> CARACTER .)
    IF              reduce using rule 75 (expresion -> CARACTER .)
    MATCH           reduce using rule 75 (expresion -> CARACTER .)
    I64             reduce using rule 75 (expresion -> CARACTER .)
    PARA            reduce using rule 75 (expresion -> CARACTER .)
    NOT             reduce using rule 75 (expresion -> CARACTER .)
    ENTERO          reduce using rule 75 (expresion -> CARACTER .)
    DECIMAL         reduce using rule 75 (expresion -> CARACTER .)
    CADENA          reduce using rule 75 (expresion -> CARACTER .)
    CARACTER        reduce using rule 75 (expresion -> CARACTER .)
    TRUE            reduce using rule 75 (expresion -> CARACTER .)
    FALSE           reduce using rule 75 (expresion -> CARACTER .)
    RETURN          reduce using rule 75 (expresion -> CARACTER .)
    BREAK           reduce using rule 75 (expresion -> CARACTER .)
    CONTINUE        reduce using rule 75 (expresion -> CARACTER .)
    $end            reduce using rule 75 (expresion -> CARACTER .)
    PARC            reduce using rule 75 (expresion -> CARACTER .)
    LLAVA           reduce using rule 75 (expresion -> CARACTER .)
    PT_COMA         reduce using rule 75 (expresion -> CARACTER .)
    LLAVC           reduce using rule 75 (expresion -> CARACTER .)
    ARROW           reduce using rule 75 (expresion -> CARACTER .)
    SEP_MATCH       reduce using rule 75 (expresion -> CARACTER .)
    COMA            reduce using rule 75 (expresion -> CARACTER .)


state 25

    (76) expresion -> TRUE .

    MAS             reduce using rule 76 (expresion -> TRUE .)
    MENOS           reduce using rule 76 (expresion -> TRUE .)
    MULTI           reduce using rule 76 (expresion -> TRUE .)
    DIV             reduce using rule 76 (expresion -> TRUE .)
    MODULO          reduce using rule 76 (expresion -> TRUE .)
    IGUAL_IGUAL     reduce using rule 76 (expresion -> TRUE .)
    NO_IGUAL        reduce using rule 76 (expresion -> TRUE .)
    MAYOR           reduce using rule 76 (expresion -> TRUE .)
    MENOR           reduce using rule 76 (expresion -> TRUE .)
    MAYOR_IGUAL     reduce using rule 76 (expresion -> TRUE .)
    MENOR_IGUAL     reduce using rule 76 (expresion -> TRUE .)
    AND             reduce using rule 76 (expresion -> TRUE .)
    OR              reduce using rule 76 (expresion -> TRUE .)
    PUNTO           reduce using rule 76 (expresion -> TRUE .)
    AS              reduce using rule 76 (expresion -> TRUE .)
    PRINTLN         reduce using rule 76 (expresion -> TRUE .)
    LET             reduce using rule 76 (expresion -> TRUE .)
    ID              reduce using rule 76 (expresion -> TRUE .)
    IF              reduce using rule 76 (expresion -> TRUE .)
    MATCH           reduce using rule 76 (expresion -> TRUE .)
    I64             reduce using rule 76 (expresion -> TRUE .)
    PARA            reduce using rule 76 (expresion -> TRUE .)
    NOT             reduce using rule 76 (expresion -> TRUE .)
    ENTERO          reduce using rule 76 (expresion -> TRUE .)
    DECIMAL         reduce using rule 76 (expresion -> TRUE .)
    CADENA          reduce using rule 76 (expresion -> TRUE .)
    CARACTER        reduce using rule 76 (expresion -> TRUE .)
    TRUE            reduce using rule 76 (expresion -> TRUE .)
    FALSE           reduce using rule 76 (expresion -> TRUE .)
    RETURN          reduce using rule 76 (expresion -> TRUE .)
    BREAK           reduce using rule 76 (expresion -> TRUE .)
    CONTINUE        reduce using rule 76 (expresion -> TRUE .)
    $end            reduce using rule 76 (expresion -> TRUE .)
    PARC            reduce using rule 76 (expresion -> TRUE .)
    LLAVA           reduce using rule 76 (expresion -> TRUE .)
    PT_COMA         reduce using rule 76 (expresion -> TRUE .)
    LLAVC           reduce using rule 76 (expresion -> TRUE .)
    ARROW           reduce using rule 76 (expresion -> TRUE .)
    SEP_MATCH       reduce using rule 76 (expresion -> TRUE .)
    COMA            reduce using rule 76 (expresion -> TRUE .)


state 26

    (77) expresion -> FALSE .

    MAS             reduce using rule 77 (expresion -> FALSE .)
    MENOS           reduce using rule 77 (expresion -> FALSE .)
    MULTI           reduce using rule 77 (expresion -> FALSE .)
    DIV             reduce using rule 77 (expresion -> FALSE .)
    MODULO          reduce using rule 77 (expresion -> FALSE .)
    IGUAL_IGUAL     reduce using rule 77 (expresion -> FALSE .)
    NO_IGUAL        reduce using rule 77 (expresion -> FALSE .)
    MAYOR           reduce using rule 77 (expresion -> FALSE .)
    MENOR           reduce using rule 77 (expresion -> FALSE .)
    MAYOR_IGUAL     reduce using rule 77 (expresion -> FALSE .)
    MENOR_IGUAL     reduce using rule 77 (expresion -> FALSE .)
    AND             reduce using rule 77 (expresion -> FALSE .)
    OR              reduce using rule 77 (expresion -> FALSE .)
    PUNTO           reduce using rule 77 (expresion -> FALSE .)
    AS              reduce using rule 77 (expresion -> FALSE .)
    PRINTLN         reduce using rule 77 (expresion -> FALSE .)
    LET             reduce using rule 77 (expresion -> FALSE .)
    ID              reduce using rule 77 (expresion -> FALSE .)
    IF              reduce using rule 77 (expresion -> FALSE .)
    MATCH           reduce using rule 77 (expresion -> FALSE .)
    I64             reduce using rule 77 (expresion -> FALSE .)
    PARA            reduce using rule 77 (expresion -> FALSE .)
    NOT             reduce using rule 77 (expresion -> FALSE .)
    ENTERO          reduce using rule 77 (expresion -> FALSE .)
    DECIMAL         reduce using rule 77 (expresion -> FALSE .)
    CADENA          reduce using rule 77 (expresion -> FALSE .)
    CARACTER        reduce using rule 77 (expresion -> FALSE .)
    TRUE            reduce using rule 77 (expresion -> FALSE .)
    FALSE           reduce using rule 77 (expresion -> FALSE .)
    RETURN          reduce using rule 77 (expresion -> FALSE .)
    BREAK           reduce using rule 77 (expresion -> FALSE .)
    CONTINUE        reduce using rule 77 (expresion -> FALSE .)
    $end            reduce using rule 77 (expresion -> FALSE .)
    PARC            reduce using rule 77 (expresion -> FALSE .)
    LLAVA           reduce using rule 77 (expresion -> FALSE .)
    PT_COMA         reduce using rule 77 (expresion -> FALSE .)
    LLAVC           reduce using rule 77 (expresion -> FALSE .)
    ARROW           reduce using rule 77 (expresion -> FALSE .)
    SEP_MATCH       reduce using rule 77 (expresion -> FALSE .)
    COMA            reduce using rule 77 (expresion -> FALSE .)


state 27

    (42) return -> RETURN .
    (43) return -> RETURN . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    PT_COMA         reduce using rule 42 (return -> RETURN .)
    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 62

state 28

    (44) break -> BREAK .

    PT_COMA         reduce using rule 44 (break -> BREAK .)


state 29

    (45) continue -> CONTINUE .

    PT_COMA         reduce using rule 45 (continue -> CONTINUE .)


state 30

    (2) instrucciones -> instrucciones instruccion .

    PRINTLN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MENOS           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    I64             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PARA            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NOT             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ENTERO          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DECIMAL         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CADENA          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CARACTER        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    TRUE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FALSE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVC           reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 31

    (4) instruccion -> prints PT_COMA .

    PRINTLN         reduce using rule 4 (instruccion -> prints PT_COMA .)
    LET             reduce using rule 4 (instruccion -> prints PT_COMA .)
    ID              reduce using rule 4 (instruccion -> prints PT_COMA .)
    IF              reduce using rule 4 (instruccion -> prints PT_COMA .)
    MATCH           reduce using rule 4 (instruccion -> prints PT_COMA .)
    MENOS           reduce using rule 4 (instruccion -> prints PT_COMA .)
    I64             reduce using rule 4 (instruccion -> prints PT_COMA .)
    PARA            reduce using rule 4 (instruccion -> prints PT_COMA .)
    NOT             reduce using rule 4 (instruccion -> prints PT_COMA .)
    ENTERO          reduce using rule 4 (instruccion -> prints PT_COMA .)
    DECIMAL         reduce using rule 4 (instruccion -> prints PT_COMA .)
    CADENA          reduce using rule 4 (instruccion -> prints PT_COMA .)
    CARACTER        reduce using rule 4 (instruccion -> prints PT_COMA .)
    TRUE            reduce using rule 4 (instruccion -> prints PT_COMA .)
    FALSE           reduce using rule 4 (instruccion -> prints PT_COMA .)
    RETURN          reduce using rule 4 (instruccion -> prints PT_COMA .)
    BREAK           reduce using rule 4 (instruccion -> prints PT_COMA .)
    CONTINUE        reduce using rule 4 (instruccion -> prints PT_COMA .)
    $end            reduce using rule 4 (instruccion -> prints PT_COMA .)
    LLAVC           reduce using rule 4 (instruccion -> prints PT_COMA .)
    COMA            reduce using rule 4 (instruccion -> prints PT_COMA .)


state 32

    (5) instruccion -> declaracion PT_COMA .

    PRINTLN         reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    LET             reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    ID              reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    IF              reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    MATCH           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    MENOS           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    I64             reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    PARA            reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    NOT             reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    ENTERO          reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    DECIMAL         reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    CADENA          reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    CARACTER        reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    TRUE            reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    FALSE           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    RETURN          reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    BREAK           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    CONTINUE        reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    $end            reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    LLAVC           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    COMA            reduce using rule 5 (instruccion -> declaracion PT_COMA .)


state 33

    (55) expresion -> expresion MAS . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 63

state 34

    (56) expresion -> expresion MENOS . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 64

state 35

    (57) expresion -> expresion MULTI . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 65

state 36

    (58) expresion -> expresion DIV . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 66

state 37

    (59) expresion -> expresion MODULO . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 67

state 38

    (62) expresion -> expresion IGUAL_IGUAL . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 68

state 39

    (63) expresion -> expresion NO_IGUAL . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 69

state 40

    (64) expresion -> expresion MAYOR . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 70

state 41

    (65) expresion -> expresion MENOR . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 71

state 42

    (66) expresion -> expresion MAYOR_IGUAL . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 72

state 43

    (67) expresion -> expresion MENOR_IGUAL . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 73

state 44

    (68) expresion -> expresion AND . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 74

state 45

    (69) expresion -> expresion OR . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 75

state 46

    (78) expresion -> expresion PUNTO . TO_OWNED PARA PARC
    (79) expresion -> expresion PUNTO . TO_STRING PARA PARC
    (80) expresion -> expresion PUNTO . ABSOLUTO PARA PARC
    (81) expresion -> expresion PUNTO . RAIZ PARA PARC

    TO_OWNED        shift and go to state 76
    TO_STRING       shift and go to state 77
    ABSOLUTO        shift and go to state 78
    RAIZ            shift and go to state 79


state 47

    (82) expresion -> expresion AS . F64
    (83) expresion -> expresion AS . I64

    F64             shift and go to state 80
    I64             shift and go to state 81


state 48

    (9) instruccion -> return PT_COMA .

    PRINTLN         reduce using rule 9 (instruccion -> return PT_COMA .)
    LET             reduce using rule 9 (instruccion -> return PT_COMA .)
    ID              reduce using rule 9 (instruccion -> return PT_COMA .)
    IF              reduce using rule 9 (instruccion -> return PT_COMA .)
    MATCH           reduce using rule 9 (instruccion -> return PT_COMA .)
    MENOS           reduce using rule 9 (instruccion -> return PT_COMA .)
    I64             reduce using rule 9 (instruccion -> return PT_COMA .)
    PARA            reduce using rule 9 (instruccion -> return PT_COMA .)
    NOT             reduce using rule 9 (instruccion -> return PT_COMA .)
    ENTERO          reduce using rule 9 (instruccion -> return PT_COMA .)
    DECIMAL         reduce using rule 9 (instruccion -> return PT_COMA .)
    CADENA          reduce using rule 9 (instruccion -> return PT_COMA .)
    CARACTER        reduce using rule 9 (instruccion -> return PT_COMA .)
    TRUE            reduce using rule 9 (instruccion -> return PT_COMA .)
    FALSE           reduce using rule 9 (instruccion -> return PT_COMA .)
    RETURN          reduce using rule 9 (instruccion -> return PT_COMA .)
    BREAK           reduce using rule 9 (instruccion -> return PT_COMA .)
    CONTINUE        reduce using rule 9 (instruccion -> return PT_COMA .)
    $end            reduce using rule 9 (instruccion -> return PT_COMA .)
    LLAVC           reduce using rule 9 (instruccion -> return PT_COMA .)
    COMA            reduce using rule 9 (instruccion -> return PT_COMA .)


state 49

    (10) instruccion -> break PT_COMA .

    PRINTLN         reduce using rule 10 (instruccion -> break PT_COMA .)
    LET             reduce using rule 10 (instruccion -> break PT_COMA .)
    ID              reduce using rule 10 (instruccion -> break PT_COMA .)
    IF              reduce using rule 10 (instruccion -> break PT_COMA .)
    MATCH           reduce using rule 10 (instruccion -> break PT_COMA .)
    MENOS           reduce using rule 10 (instruccion -> break PT_COMA .)
    I64             reduce using rule 10 (instruccion -> break PT_COMA .)
    PARA            reduce using rule 10 (instruccion -> break PT_COMA .)
    NOT             reduce using rule 10 (instruccion -> break PT_COMA .)
    ENTERO          reduce using rule 10 (instruccion -> break PT_COMA .)
    DECIMAL         reduce using rule 10 (instruccion -> break PT_COMA .)
    CADENA          reduce using rule 10 (instruccion -> break PT_COMA .)
    CARACTER        reduce using rule 10 (instruccion -> break PT_COMA .)
    TRUE            reduce using rule 10 (instruccion -> break PT_COMA .)
    FALSE           reduce using rule 10 (instruccion -> break PT_COMA .)
    RETURN          reduce using rule 10 (instruccion -> break PT_COMA .)
    BREAK           reduce using rule 10 (instruccion -> break PT_COMA .)
    CONTINUE        reduce using rule 10 (instruccion -> break PT_COMA .)
    $end            reduce using rule 10 (instruccion -> break PT_COMA .)
    LLAVC           reduce using rule 10 (instruccion -> break PT_COMA .)
    COMA            reduce using rule 10 (instruccion -> break PT_COMA .)


state 50

    (11) instruccion -> continue PT_COMA .

    PRINTLN         reduce using rule 11 (instruccion -> continue PT_COMA .)
    LET             reduce using rule 11 (instruccion -> continue PT_COMA .)
    ID              reduce using rule 11 (instruccion -> continue PT_COMA .)
    IF              reduce using rule 11 (instruccion -> continue PT_COMA .)
    MATCH           reduce using rule 11 (instruccion -> continue PT_COMA .)
    MENOS           reduce using rule 11 (instruccion -> continue PT_COMA .)
    I64             reduce using rule 11 (instruccion -> continue PT_COMA .)
    PARA            reduce using rule 11 (instruccion -> continue PT_COMA .)
    NOT             reduce using rule 11 (instruccion -> continue PT_COMA .)
    ENTERO          reduce using rule 11 (instruccion -> continue PT_COMA .)
    DECIMAL         reduce using rule 11 (instruccion -> continue PT_COMA .)
    CADENA          reduce using rule 11 (instruccion -> continue PT_COMA .)
    CARACTER        reduce using rule 11 (instruccion -> continue PT_COMA .)
    TRUE            reduce using rule 11 (instruccion -> continue PT_COMA .)
    FALSE           reduce using rule 11 (instruccion -> continue PT_COMA .)
    RETURN          reduce using rule 11 (instruccion -> continue PT_COMA .)
    BREAK           reduce using rule 11 (instruccion -> continue PT_COMA .)
    CONTINUE        reduce using rule 11 (instruccion -> continue PT_COMA .)
    $end            reduce using rule 11 (instruccion -> continue PT_COMA .)
    LLAVC           reduce using rule 11 (instruccion -> continue PT_COMA .)
    COMA            reduce using rule 11 (instruccion -> continue PT_COMA .)


state 51

    (12) prints -> PRINTLN NOT . PARA CADENA COMA list_exp PARC
    (13) prints -> PRINTLN NOT . PARA CADENA PARC

    PARA            shift and go to state 82


state 52

    (70) expresion -> NOT expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    MAS             reduce using rule 70 (expresion -> NOT expresion .)
    MENOS           reduce using rule 70 (expresion -> NOT expresion .)
    MULTI           reduce using rule 70 (expresion -> NOT expresion .)
    DIV             reduce using rule 70 (expresion -> NOT expresion .)
    MODULO          reduce using rule 70 (expresion -> NOT expresion .)
    IGUAL_IGUAL     reduce using rule 70 (expresion -> NOT expresion .)
    NO_IGUAL        reduce using rule 70 (expresion -> NOT expresion .)
    MAYOR           reduce using rule 70 (expresion -> NOT expresion .)
    MENOR           reduce using rule 70 (expresion -> NOT expresion .)
    MAYOR_IGUAL     reduce using rule 70 (expresion -> NOT expresion .)
    MENOR_IGUAL     reduce using rule 70 (expresion -> NOT expresion .)
    AND             reduce using rule 70 (expresion -> NOT expresion .)
    OR              reduce using rule 70 (expresion -> NOT expresion .)
    PUNTO           reduce using rule 70 (expresion -> NOT expresion .)
    AS              reduce using rule 70 (expresion -> NOT expresion .)
    PRINTLN         reduce using rule 70 (expresion -> NOT expresion .)
    LET             reduce using rule 70 (expresion -> NOT expresion .)
    ID              reduce using rule 70 (expresion -> NOT expresion .)
    IF              reduce using rule 70 (expresion -> NOT expresion .)
    MATCH           reduce using rule 70 (expresion -> NOT expresion .)
    I64             reduce using rule 70 (expresion -> NOT expresion .)
    PARA            reduce using rule 70 (expresion -> NOT expresion .)
    NOT             reduce using rule 70 (expresion -> NOT expresion .)
    ENTERO          reduce using rule 70 (expresion -> NOT expresion .)
    DECIMAL         reduce using rule 70 (expresion -> NOT expresion .)
    CADENA          reduce using rule 70 (expresion -> NOT expresion .)
    CARACTER        reduce using rule 70 (expresion -> NOT expresion .)
    TRUE            reduce using rule 70 (expresion -> NOT expresion .)
    FALSE           reduce using rule 70 (expresion -> NOT expresion .)
    RETURN          reduce using rule 70 (expresion -> NOT expresion .)
    BREAK           reduce using rule 70 (expresion -> NOT expresion .)
    CONTINUE        reduce using rule 70 (expresion -> NOT expresion .)
    $end            reduce using rule 70 (expresion -> NOT expresion .)
    PARC            reduce using rule 70 (expresion -> NOT expresion .)
    LLAVA           reduce using rule 70 (expresion -> NOT expresion .)
    PT_COMA         reduce using rule 70 (expresion -> NOT expresion .)
    LLAVC           reduce using rule 70 (expresion -> NOT expresion .)
    ARROW           reduce using rule 70 (expresion -> NOT expresion .)
    SEP_MATCH       reduce using rule 70 (expresion -> NOT expresion .)
    COMA            reduce using rule 70 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 33 ]
  ! MENOS           [ shift and go to state 34 ]
  ! MULTI           [ shift and go to state 35 ]
  ! DIV             [ shift and go to state 36 ]
  ! MODULO          [ shift and go to state 37 ]
  ! IGUAL_IGUAL     [ shift and go to state 38 ]
  ! NO_IGUAL        [ shift and go to state 39 ]
  ! MAYOR           [ shift and go to state 40 ]
  ! MENOR           [ shift and go to state 41 ]
  ! MAYOR_IGUAL     [ shift and go to state 42 ]
  ! MENOR_IGUAL     [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]
  ! PUNTO           [ shift and go to state 46 ]
  ! AS              [ shift and go to state 47 ]


state 53

    (73) expresion -> ID .

    MAS             reduce using rule 73 (expresion -> ID .)
    MENOS           reduce using rule 73 (expresion -> ID .)
    MULTI           reduce using rule 73 (expresion -> ID .)
    DIV             reduce using rule 73 (expresion -> ID .)
    MODULO          reduce using rule 73 (expresion -> ID .)
    IGUAL_IGUAL     reduce using rule 73 (expresion -> ID .)
    NO_IGUAL        reduce using rule 73 (expresion -> ID .)
    MAYOR           reduce using rule 73 (expresion -> ID .)
    MENOR           reduce using rule 73 (expresion -> ID .)
    MAYOR_IGUAL     reduce using rule 73 (expresion -> ID .)
    MENOR_IGUAL     reduce using rule 73 (expresion -> ID .)
    AND             reduce using rule 73 (expresion -> ID .)
    OR              reduce using rule 73 (expresion -> ID .)
    PUNTO           reduce using rule 73 (expresion -> ID .)
    AS              reduce using rule 73 (expresion -> ID .)
    PRINTLN         reduce using rule 73 (expresion -> ID .)
    LET             reduce using rule 73 (expresion -> ID .)
    ID              reduce using rule 73 (expresion -> ID .)
    IF              reduce using rule 73 (expresion -> ID .)
    MATCH           reduce using rule 73 (expresion -> ID .)
    I64             reduce using rule 73 (expresion -> ID .)
    PARA            reduce using rule 73 (expresion -> ID .)
    NOT             reduce using rule 73 (expresion -> ID .)
    ENTERO          reduce using rule 73 (expresion -> ID .)
    DECIMAL         reduce using rule 73 (expresion -> ID .)
    CADENA          reduce using rule 73 (expresion -> ID .)
    CARACTER        reduce using rule 73 (expresion -> ID .)
    TRUE            reduce using rule 73 (expresion -> ID .)
    FALSE           reduce using rule 73 (expresion -> ID .)
    RETURN          reduce using rule 73 (expresion -> ID .)
    BREAK           reduce using rule 73 (expresion -> ID .)
    CONTINUE        reduce using rule 73 (expresion -> ID .)
    $end            reduce using rule 73 (expresion -> ID .)
    PARC            reduce using rule 73 (expresion -> ID .)
    LLAVA           reduce using rule 73 (expresion -> ID .)
    PT_COMA         reduce using rule 73 (expresion -> ID .)
    LLAVC           reduce using rule 73 (expresion -> ID .)
    ARROW           reduce using rule 73 (expresion -> ID .)
    SEP_MATCH       reduce using rule 73 (expresion -> ID .)
    COMA            reduce using rule 73 (expresion -> ID .)


state 54

    (61) expresion -> PARA expresion . PARC
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    PARC            shift and go to state 83
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37
    IGUAL_IGUAL     shift and go to state 38
    NO_IGUAL        shift and go to state 39
    MAYOR           shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR_IGUAL     shift and go to state 42
    MENOR_IGUAL     shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    PUNTO           shift and go to state 46
    AS              shift and go to state 47


state 55

    (16) declaracion -> LET MUT . ID DOS_PT tipo IGUAL valores
    (17) declaracion -> LET MUT . ID DOS_PT tipo
    (18) declaracion -> LET MUT . ID IGUAL valores
    (19) declaracion -> LET MUT . ID

    ID              shift and go to state 84


state 56

    (20) declaracion -> LET ID . DOS_PT tipo IGUAL valores
    (21) declaracion -> LET ID . DOS_PT tipo
    (22) declaracion -> LET ID . IGUAL valores
    (23) declaracion -> LET ID .

    DOS_PT          shift and go to state 85
    IGUAL           shift and go to state 86
    PT_COMA         reduce using rule 23 (declaracion -> LET ID .)


state 57

    (24) declaracion -> ID IGUAL . valores
    (25) valores -> . expresion
    (26) valores -> . sent_if
    (27) valores -> . match
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64
    (28) sent_if -> . IF expresion statement sent_else
    (32) match -> . MATCH expresion casos_match

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 18
    MATCH           shift and go to state 19

    valores                        shift and go to state 87
    expresion                      shift and go to state 88
    sent_if                        shift and go to state 89
    match                          shift and go to state 90

state 58

    (28) sent_if -> IF expresion . statement sent_else
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64
    (46) statement -> . LLAVA instrucciones LLAVC
    (47) statement -> . LLAVA LLAVC

    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37
    IGUAL_IGUAL     shift and go to state 38
    NO_IGUAL        shift and go to state 39
    MAYOR           shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR_IGUAL     shift and go to state 42
    MENOR_IGUAL     shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    PUNTO           shift and go to state 46
    AS              shift and go to state 47
    LLAVA           shift and go to state 92

    statement                      shift and go to state 91

state 59

    (32) match -> MATCH expresion . casos_match
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64
    (33) casos_match -> . LLAVA lista_casos default LLAVC

    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37
    IGUAL_IGUAL     shift and go to state 38
    NO_IGUAL        shift and go to state 39
    MAYOR           shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR_IGUAL     shift and go to state 42
    MENOR_IGUAL     shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    PUNTO           shift and go to state 46
    AS              shift and go to state 47
    LLAVA           shift and go to state 94

    casos_match                    shift and go to state 93

state 60

    (54) expresion -> MENOS expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    MAS             reduce using rule 54 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 54 (expresion -> MENOS expresion .)
    MULTI           reduce using rule 54 (expresion -> MENOS expresion .)
    DIV             reduce using rule 54 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 54 (expresion -> MENOS expresion .)
    IGUAL_IGUAL     reduce using rule 54 (expresion -> MENOS expresion .)
    NO_IGUAL        reduce using rule 54 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 54 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 54 (expresion -> MENOS expresion .)
    MAYOR_IGUAL     reduce using rule 54 (expresion -> MENOS expresion .)
    MENOR_IGUAL     reduce using rule 54 (expresion -> MENOS expresion .)
    AND             reduce using rule 54 (expresion -> MENOS expresion .)
    OR              reduce using rule 54 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 54 (expresion -> MENOS expresion .)
    AS              reduce using rule 54 (expresion -> MENOS expresion .)
    PRINTLN         reduce using rule 54 (expresion -> MENOS expresion .)
    LET             reduce using rule 54 (expresion -> MENOS expresion .)
    ID              reduce using rule 54 (expresion -> MENOS expresion .)
    IF              reduce using rule 54 (expresion -> MENOS expresion .)
    MATCH           reduce using rule 54 (expresion -> MENOS expresion .)
    I64             reduce using rule 54 (expresion -> MENOS expresion .)
    PARA            reduce using rule 54 (expresion -> MENOS expresion .)
    NOT             reduce using rule 54 (expresion -> MENOS expresion .)
    ENTERO          reduce using rule 54 (expresion -> MENOS expresion .)
    DECIMAL         reduce using rule 54 (expresion -> MENOS expresion .)
    CADENA          reduce using rule 54 (expresion -> MENOS expresion .)
    CARACTER        reduce using rule 54 (expresion -> MENOS expresion .)
    TRUE            reduce using rule 54 (expresion -> MENOS expresion .)
    FALSE           reduce using rule 54 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 54 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 54 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 54 (expresion -> MENOS expresion .)
    $end            reduce using rule 54 (expresion -> MENOS expresion .)
    PARC            reduce using rule 54 (expresion -> MENOS expresion .)
    LLAVA           reduce using rule 54 (expresion -> MENOS expresion .)
    PT_COMA         reduce using rule 54 (expresion -> MENOS expresion .)
    LLAVC           reduce using rule 54 (expresion -> MENOS expresion .)
    ARROW           reduce using rule 54 (expresion -> MENOS expresion .)
    SEP_MATCH       reduce using rule 54 (expresion -> MENOS expresion .)
    COMA            reduce using rule 54 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 33 ]
  ! MENOS           [ shift and go to state 34 ]
  ! MULTI           [ shift and go to state 35 ]
  ! DIV             [ shift and go to state 36 ]
  ! MODULO          [ shift and go to state 37 ]
  ! IGUAL_IGUAL     [ shift and go to state 38 ]
  ! NO_IGUAL        [ shift and go to state 39 ]
  ! MAYOR           [ shift and go to state 40 ]
  ! MENOR           [ shift and go to state 41 ]
  ! MAYOR_IGUAL     [ shift and go to state 42 ]
  ! MENOR_IGUAL     [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]
  ! PUNTO           [ shift and go to state 46 ]
  ! AS              [ shift and go to state 47 ]


state 61

    (60) expresion -> I64 DOS_PT . DOS_PT POW PARA expresion COMA expresion PARC

    DOS_PT          shift and go to state 95


state 62

    (43) return -> RETURN expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    PT_COMA         reduce using rule 43 (return -> RETURN expresion .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37
    IGUAL_IGUAL     shift and go to state 38
    NO_IGUAL        shift and go to state 39
    MAYOR           shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR_IGUAL     shift and go to state 42
    MENOR_IGUAL     shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    PUNTO           shift and go to state 46
    AS              shift and go to state 47


state 63

    (55) expresion -> expresion MAS expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    MAS             reduce using rule 55 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 55 (expresion -> expresion MAS expresion .)
    IGUAL_IGUAL     reduce using rule 55 (expresion -> expresion MAS expresion .)
    NO_IGUAL        reduce using rule 55 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 55 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 55 (expresion -> expresion MAS expresion .)
    MAYOR_IGUAL     reduce using rule 55 (expresion -> expresion MAS expresion .)
    MENOR_IGUAL     reduce using rule 55 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 55 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 55 (expresion -> expresion MAS expresion .)
    PUNTO           reduce using rule 55 (expresion -> expresion MAS expresion .)
    AS              reduce using rule 55 (expresion -> expresion MAS expresion .)
    PRINTLN         reduce using rule 55 (expresion -> expresion MAS expresion .)
    LET             reduce using rule 55 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 55 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 55 (expresion -> expresion MAS expresion .)
    MATCH           reduce using rule 55 (expresion -> expresion MAS expresion .)
    I64             reduce using rule 55 (expresion -> expresion MAS expresion .)
    PARA            reduce using rule 55 (expresion -> expresion MAS expresion .)
    NOT             reduce using rule 55 (expresion -> expresion MAS expresion .)
    ENTERO          reduce using rule 55 (expresion -> expresion MAS expresion .)
    DECIMAL         reduce using rule 55 (expresion -> expresion MAS expresion .)
    CADENA          reduce using rule 55 (expresion -> expresion MAS expresion .)
    CARACTER        reduce using rule 55 (expresion -> expresion MAS expresion .)
    TRUE            reduce using rule 55 (expresion -> expresion MAS expresion .)
    FALSE           reduce using rule 55 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 55 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 55 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 55 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 55 (expresion -> expresion MAS expresion .)
    PARC            reduce using rule 55 (expresion -> expresion MAS expresion .)
    LLAVA           reduce using rule 55 (expresion -> expresion MAS expresion .)
    PT_COMA         reduce using rule 55 (expresion -> expresion MAS expresion .)
    LLAVC           reduce using rule 55 (expresion -> expresion MAS expresion .)
    ARROW           reduce using rule 55 (expresion -> expresion MAS expresion .)
    SEP_MATCH       reduce using rule 55 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 55 (expresion -> expresion MAS expresion .)
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37

  ! MULTI           [ reduce using rule 55 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 55 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 55 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 33 ]
  ! MENOS           [ shift and go to state 34 ]
  ! IGUAL_IGUAL     [ shift and go to state 38 ]
  ! NO_IGUAL        [ shift and go to state 39 ]
  ! MAYOR           [ shift and go to state 40 ]
  ! MENOR           [ shift and go to state 41 ]
  ! MAYOR_IGUAL     [ shift and go to state 42 ]
  ! MENOR_IGUAL     [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]
  ! PUNTO           [ shift and go to state 46 ]
  ! AS              [ shift and go to state 47 ]


state 64

    (56) expresion -> expresion MENOS expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    MAS             reduce using rule 56 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 56 (expresion -> expresion MENOS expresion .)
    IGUAL_IGUAL     reduce using rule 56 (expresion -> expresion MENOS expresion .)
    NO_IGUAL        reduce using rule 56 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 56 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 56 (expresion -> expresion MENOS expresion .)
    MAYOR_IGUAL     reduce using rule 56 (expresion -> expresion MENOS expresion .)
    MENOR_IGUAL     reduce using rule 56 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 56 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 56 (expresion -> expresion MENOS expresion .)
    PUNTO           reduce using rule 56 (expresion -> expresion MENOS expresion .)
    AS              reduce using rule 56 (expresion -> expresion MENOS expresion .)
    PRINTLN         reduce using rule 56 (expresion -> expresion MENOS expresion .)
    LET             reduce using rule 56 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 56 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 56 (expresion -> expresion MENOS expresion .)
    MATCH           reduce using rule 56 (expresion -> expresion MENOS expresion .)
    I64             reduce using rule 56 (expresion -> expresion MENOS expresion .)
    PARA            reduce using rule 56 (expresion -> expresion MENOS expresion .)
    NOT             reduce using rule 56 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 56 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 56 (expresion -> expresion MENOS expresion .)
    CADENA          reduce using rule 56 (expresion -> expresion MENOS expresion .)
    CARACTER        reduce using rule 56 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 56 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 56 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 56 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 56 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 56 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 56 (expresion -> expresion MENOS expresion .)
    PARC            reduce using rule 56 (expresion -> expresion MENOS expresion .)
    LLAVA           reduce using rule 56 (expresion -> expresion MENOS expresion .)
    PT_COMA         reduce using rule 56 (expresion -> expresion MENOS expresion .)
    LLAVC           reduce using rule 56 (expresion -> expresion MENOS expresion .)
    ARROW           reduce using rule 56 (expresion -> expresion MENOS expresion .)
    SEP_MATCH       reduce using rule 56 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 56 (expresion -> expresion MENOS expresion .)
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37

  ! MULTI           [ reduce using rule 56 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 56 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 56 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 33 ]
  ! MENOS           [ shift and go to state 34 ]
  ! IGUAL_IGUAL     [ shift and go to state 38 ]
  ! NO_IGUAL        [ shift and go to state 39 ]
  ! MAYOR           [ shift and go to state 40 ]
  ! MENOR           [ shift and go to state 41 ]
  ! MAYOR_IGUAL     [ shift and go to state 42 ]
  ! MENOR_IGUAL     [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]
  ! PUNTO           [ shift and go to state 46 ]
  ! AS              [ shift and go to state 47 ]


state 65

    (57) expresion -> expresion MULTI expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    MAS             reduce using rule 57 (expresion -> expresion MULTI expresion .)
    MENOS           reduce using rule 57 (expresion -> expresion MULTI expresion .)
    MULTI           reduce using rule 57 (expresion -> expresion MULTI expresion .)
    DIV             reduce using rule 57 (expresion -> expresion MULTI expresion .)
    MODULO          reduce using rule 57 (expresion -> expresion MULTI expresion .)
    IGUAL_IGUAL     reduce using rule 57 (expresion -> expresion MULTI expresion .)
    NO_IGUAL        reduce using rule 57 (expresion -> expresion MULTI expresion .)
    MAYOR           reduce using rule 57 (expresion -> expresion MULTI expresion .)
    MENOR           reduce using rule 57 (expresion -> expresion MULTI expresion .)
    MAYOR_IGUAL     reduce using rule 57 (expresion -> expresion MULTI expresion .)
    MENOR_IGUAL     reduce using rule 57 (expresion -> expresion MULTI expresion .)
    AND             reduce using rule 57 (expresion -> expresion MULTI expresion .)
    OR              reduce using rule 57 (expresion -> expresion MULTI expresion .)
    PUNTO           reduce using rule 57 (expresion -> expresion MULTI expresion .)
    AS              reduce using rule 57 (expresion -> expresion MULTI expresion .)
    PRINTLN         reduce using rule 57 (expresion -> expresion MULTI expresion .)
    LET             reduce using rule 57 (expresion -> expresion MULTI expresion .)
    ID              reduce using rule 57 (expresion -> expresion MULTI expresion .)
    IF              reduce using rule 57 (expresion -> expresion MULTI expresion .)
    MATCH           reduce using rule 57 (expresion -> expresion MULTI expresion .)
    I64             reduce using rule 57 (expresion -> expresion MULTI expresion .)
    PARA            reduce using rule 57 (expresion -> expresion MULTI expresion .)
    NOT             reduce using rule 57 (expresion -> expresion MULTI expresion .)
    ENTERO          reduce using rule 57 (expresion -> expresion MULTI expresion .)
    DECIMAL         reduce using rule 57 (expresion -> expresion MULTI expresion .)
    CADENA          reduce using rule 57 (expresion -> expresion MULTI expresion .)
    CARACTER        reduce using rule 57 (expresion -> expresion MULTI expresion .)
    TRUE            reduce using rule 57 (expresion -> expresion MULTI expresion .)
    FALSE           reduce using rule 57 (expresion -> expresion MULTI expresion .)
    RETURN          reduce using rule 57 (expresion -> expresion MULTI expresion .)
    BREAK           reduce using rule 57 (expresion -> expresion MULTI expresion .)
    CONTINUE        reduce using rule 57 (expresion -> expresion MULTI expresion .)
    $end            reduce using rule 57 (expresion -> expresion MULTI expresion .)
    PARC            reduce using rule 57 (expresion -> expresion MULTI expresion .)
    LLAVA           reduce using rule 57 (expresion -> expresion MULTI expresion .)
    PT_COMA         reduce using rule 57 (expresion -> expresion MULTI expresion .)
    LLAVC           reduce using rule 57 (expresion -> expresion MULTI expresion .)
    ARROW           reduce using rule 57 (expresion -> expresion MULTI expresion .)
    SEP_MATCH       reduce using rule 57 (expresion -> expresion MULTI expresion .)
    COMA            reduce using rule 57 (expresion -> expresion MULTI expresion .)

  ! MAS             [ shift and go to state 33 ]
  ! MENOS           [ shift and go to state 34 ]
  ! MULTI           [ shift and go to state 35 ]
  ! DIV             [ shift and go to state 36 ]
  ! MODULO          [ shift and go to state 37 ]
  ! IGUAL_IGUAL     [ shift and go to state 38 ]
  ! NO_IGUAL        [ shift and go to state 39 ]
  ! MAYOR           [ shift and go to state 40 ]
  ! MENOR           [ shift and go to state 41 ]
  ! MAYOR_IGUAL     [ shift and go to state 42 ]
  ! MENOR_IGUAL     [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]
  ! PUNTO           [ shift and go to state 46 ]
  ! AS              [ shift and go to state 47 ]


state 66

    (58) expresion -> expresion DIV expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    MAS             reduce using rule 58 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 58 (expresion -> expresion DIV expresion .)
    MULTI           reduce using rule 58 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 58 (expresion -> expresion DIV expresion .)
    MODULO          reduce using rule 58 (expresion -> expresion DIV expresion .)
    IGUAL_IGUAL     reduce using rule 58 (expresion -> expresion DIV expresion .)
    NO_IGUAL        reduce using rule 58 (expresion -> expresion DIV expresion .)
    MAYOR           reduce using rule 58 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 58 (expresion -> expresion DIV expresion .)
    MAYOR_IGUAL     reduce using rule 58 (expresion -> expresion DIV expresion .)
    MENOR_IGUAL     reduce using rule 58 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 58 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 58 (expresion -> expresion DIV expresion .)
    PUNTO           reduce using rule 58 (expresion -> expresion DIV expresion .)
    AS              reduce using rule 58 (expresion -> expresion DIV expresion .)
    PRINTLN         reduce using rule 58 (expresion -> expresion DIV expresion .)
    LET             reduce using rule 58 (expresion -> expresion DIV expresion .)
    ID              reduce using rule 58 (expresion -> expresion DIV expresion .)
    IF              reduce using rule 58 (expresion -> expresion DIV expresion .)
    MATCH           reduce using rule 58 (expresion -> expresion DIV expresion .)
    I64             reduce using rule 58 (expresion -> expresion DIV expresion .)
    PARA            reduce using rule 58 (expresion -> expresion DIV expresion .)
    NOT             reduce using rule 58 (expresion -> expresion DIV expresion .)
    ENTERO          reduce using rule 58 (expresion -> expresion DIV expresion .)
    DECIMAL         reduce using rule 58 (expresion -> expresion DIV expresion .)
    CADENA          reduce using rule 58 (expresion -> expresion DIV expresion .)
    CARACTER        reduce using rule 58 (expresion -> expresion DIV expresion .)
    TRUE            reduce using rule 58 (expresion -> expresion DIV expresion .)
    FALSE           reduce using rule 58 (expresion -> expresion DIV expresion .)
    RETURN          reduce using rule 58 (expresion -> expresion DIV expresion .)
    BREAK           reduce using rule 58 (expresion -> expresion DIV expresion .)
    CONTINUE        reduce using rule 58 (expresion -> expresion DIV expresion .)
    $end            reduce using rule 58 (expresion -> expresion DIV expresion .)
    PARC            reduce using rule 58 (expresion -> expresion DIV expresion .)
    LLAVA           reduce using rule 58 (expresion -> expresion DIV expresion .)
    PT_COMA         reduce using rule 58 (expresion -> expresion DIV expresion .)
    LLAVC           reduce using rule 58 (expresion -> expresion DIV expresion .)
    ARROW           reduce using rule 58 (expresion -> expresion DIV expresion .)
    SEP_MATCH       reduce using rule 58 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 58 (expresion -> expresion DIV expresion .)

  ! MAS             [ shift and go to state 33 ]
  ! MENOS           [ shift and go to state 34 ]
  ! MULTI           [ shift and go to state 35 ]
  ! DIV             [ shift and go to state 36 ]
  ! MODULO          [ shift and go to state 37 ]
  ! IGUAL_IGUAL     [ shift and go to state 38 ]
  ! NO_IGUAL        [ shift and go to state 39 ]
  ! MAYOR           [ shift and go to state 40 ]
  ! MENOR           [ shift and go to state 41 ]
  ! MAYOR_IGUAL     [ shift and go to state 42 ]
  ! MENOR_IGUAL     [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]
  ! PUNTO           [ shift and go to state 46 ]
  ! AS              [ shift and go to state 47 ]


state 67

    (59) expresion -> expresion MODULO expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    MAS             reduce using rule 59 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 59 (expresion -> expresion MODULO expresion .)
    MULTI           reduce using rule 59 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 59 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 59 (expresion -> expresion MODULO expresion .)
    IGUAL_IGUAL     reduce using rule 59 (expresion -> expresion MODULO expresion .)
    NO_IGUAL        reduce using rule 59 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 59 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 59 (expresion -> expresion MODULO expresion .)
    MAYOR_IGUAL     reduce using rule 59 (expresion -> expresion MODULO expresion .)
    MENOR_IGUAL     reduce using rule 59 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 59 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 59 (expresion -> expresion MODULO expresion .)
    PUNTO           reduce using rule 59 (expresion -> expresion MODULO expresion .)
    AS              reduce using rule 59 (expresion -> expresion MODULO expresion .)
    PRINTLN         reduce using rule 59 (expresion -> expresion MODULO expresion .)
    LET             reduce using rule 59 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 59 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 59 (expresion -> expresion MODULO expresion .)
    MATCH           reduce using rule 59 (expresion -> expresion MODULO expresion .)
    I64             reduce using rule 59 (expresion -> expresion MODULO expresion .)
    PARA            reduce using rule 59 (expresion -> expresion MODULO expresion .)
    NOT             reduce using rule 59 (expresion -> expresion MODULO expresion .)
    ENTERO          reduce using rule 59 (expresion -> expresion MODULO expresion .)
    DECIMAL         reduce using rule 59 (expresion -> expresion MODULO expresion .)
    CADENA          reduce using rule 59 (expresion -> expresion MODULO expresion .)
    CARACTER        reduce using rule 59 (expresion -> expresion MODULO expresion .)
    TRUE            reduce using rule 59 (expresion -> expresion MODULO expresion .)
    FALSE           reduce using rule 59 (expresion -> expresion MODULO expresion .)
    RETURN          reduce using rule 59 (expresion -> expresion MODULO expresion .)
    BREAK           reduce using rule 59 (expresion -> expresion MODULO expresion .)
    CONTINUE        reduce using rule 59 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 59 (expresion -> expresion MODULO expresion .)
    PARC            reduce using rule 59 (expresion -> expresion MODULO expresion .)
    LLAVA           reduce using rule 59 (expresion -> expresion MODULO expresion .)
    PT_COMA         reduce using rule 59 (expresion -> expresion MODULO expresion .)
    LLAVC           reduce using rule 59 (expresion -> expresion MODULO expresion .)
    ARROW           reduce using rule 59 (expresion -> expresion MODULO expresion .)
    SEP_MATCH       reduce using rule 59 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 59 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 33 ]
  ! MENOS           [ shift and go to state 34 ]
  ! MULTI           [ shift and go to state 35 ]
  ! DIV             [ shift and go to state 36 ]
  ! MODULO          [ shift and go to state 37 ]
  ! IGUAL_IGUAL     [ shift and go to state 38 ]
  ! NO_IGUAL        [ shift and go to state 39 ]
  ! MAYOR           [ shift and go to state 40 ]
  ! MENOR           [ shift and go to state 41 ]
  ! MAYOR_IGUAL     [ shift and go to state 42 ]
  ! MENOR_IGUAL     [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]
  ! PUNTO           [ shift and go to state 46 ]
  ! AS              [ shift and go to state 47 ]


state 68

    (62) expresion -> expresion IGUAL_IGUAL expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    IGUAL_IGUAL     reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    NO_IGUAL        reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    MAYOR           reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    MENOR           reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    MAYOR_IGUAL     reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    MENOR_IGUAL     reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    AND             reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    OR              reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    PUNTO           reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    AS              reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    PRINTLN         reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    LET             reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    ID              reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    IF              reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    MATCH           reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    I64             reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    PARA            reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    NOT             reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    ENTERO          reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    DECIMAL         reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    CADENA          reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    CARACTER        reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    TRUE            reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    FALSE           reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    RETURN          reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    BREAK           reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    CONTINUE        reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    $end            reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    PARC            reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    LLAVA           reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    PT_COMA         reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    LLAVC           reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    ARROW           reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    SEP_MATCH       reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    COMA            reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37

  ! MAS             [ reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 62 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 38 ]
  ! NO_IGUAL        [ shift and go to state 39 ]
  ! MAYOR           [ shift and go to state 40 ]
  ! MENOR           [ shift and go to state 41 ]
  ! MAYOR_IGUAL     [ shift and go to state 42 ]
  ! MENOR_IGUAL     [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]
  ! PUNTO           [ shift and go to state 46 ]
  ! AS              [ shift and go to state 47 ]


state 69

    (63) expresion -> expresion NO_IGUAL expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    IGUAL_IGUAL     reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    NO_IGUAL        reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    MAYOR           reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    MENOR           reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    MAYOR_IGUAL     reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    MENOR_IGUAL     reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    AND             reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    OR              reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    PUNTO           reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    AS              reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    PRINTLN         reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    LET             reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    ID              reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    IF              reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    MATCH           reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    I64             reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    PARA            reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    NOT             reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    ENTERO          reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    DECIMAL         reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    CADENA          reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    CARACTER        reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    TRUE            reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    FALSE           reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    RETURN          reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    BREAK           reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    CONTINUE        reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    $end            reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    PARC            reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    LLAVA           reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    PT_COMA         reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    LLAVC           reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    ARROW           reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    SEP_MATCH       reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    COMA            reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37

  ! MAS             [ reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 63 (expresion -> expresion NO_IGUAL expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 38 ]
  ! NO_IGUAL        [ shift and go to state 39 ]
  ! MAYOR           [ shift and go to state 40 ]
  ! MENOR           [ shift and go to state 41 ]
  ! MAYOR_IGUAL     [ shift and go to state 42 ]
  ! MENOR_IGUAL     [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]
  ! PUNTO           [ shift and go to state 46 ]
  ! AS              [ shift and go to state 47 ]


state 70

    (64) expresion -> expresion MAYOR expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    IGUAL_IGUAL     reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    NO_IGUAL        reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    MAYOR           reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    MAYOR_IGUAL     reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    MENOR_IGUAL     reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    PUNTO           reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    AS              reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    PRINTLN         reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    LET             reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    MATCH           reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    I64             reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    PARA            reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    NOT             reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    ENTERO          reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    DECIMAL         reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    CADENA          reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    CARACTER        reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    TRUE            reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    FALSE           reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    RETURN          reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    BREAK           reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    CONTINUE        reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    $end            reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    PARC            reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    LLAVA           reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    PT_COMA         reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    LLAVC           reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    ARROW           reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    SEP_MATCH       reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 64 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37

  ! MAS             [ reduce using rule 64 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 64 (expresion -> expresion MAYOR expresion .) ]
  ! MULTI           [ reduce using rule 64 (expresion -> expresion MAYOR expresion .) ]
  ! DIV             [ reduce using rule 64 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 64 (expresion -> expresion MAYOR expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 38 ]
  ! NO_IGUAL        [ shift and go to state 39 ]
  ! MAYOR           [ shift and go to state 40 ]
  ! MENOR           [ shift and go to state 41 ]
  ! MAYOR_IGUAL     [ shift and go to state 42 ]
  ! MENOR_IGUAL     [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]
  ! PUNTO           [ shift and go to state 46 ]
  ! AS              [ shift and go to state 47 ]


state 71

    (65) expresion -> expresion MENOR expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    IGUAL_IGUAL     reduce using rule 65 (expresion -> expresion MENOR expresion .)
    NO_IGUAL        reduce using rule 65 (expresion -> expresion MENOR expresion .)
    MAYOR           reduce using rule 65 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 65 (expresion -> expresion MENOR expresion .)
    MAYOR_IGUAL     reduce using rule 65 (expresion -> expresion MENOR expresion .)
    MENOR_IGUAL     reduce using rule 65 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 65 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 65 (expresion -> expresion MENOR expresion .)
    PUNTO           reduce using rule 65 (expresion -> expresion MENOR expresion .)
    AS              reduce using rule 65 (expresion -> expresion MENOR expresion .)
    PRINTLN         reduce using rule 65 (expresion -> expresion MENOR expresion .)
    LET             reduce using rule 65 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 65 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 65 (expresion -> expresion MENOR expresion .)
    MATCH           reduce using rule 65 (expresion -> expresion MENOR expresion .)
    I64             reduce using rule 65 (expresion -> expresion MENOR expresion .)
    PARA            reduce using rule 65 (expresion -> expresion MENOR expresion .)
    NOT             reduce using rule 65 (expresion -> expresion MENOR expresion .)
    ENTERO          reduce using rule 65 (expresion -> expresion MENOR expresion .)
    DECIMAL         reduce using rule 65 (expresion -> expresion MENOR expresion .)
    CADENA          reduce using rule 65 (expresion -> expresion MENOR expresion .)
    CARACTER        reduce using rule 65 (expresion -> expresion MENOR expresion .)
    TRUE            reduce using rule 65 (expresion -> expresion MENOR expresion .)
    FALSE           reduce using rule 65 (expresion -> expresion MENOR expresion .)
    RETURN          reduce using rule 65 (expresion -> expresion MENOR expresion .)
    BREAK           reduce using rule 65 (expresion -> expresion MENOR expresion .)
    CONTINUE        reduce using rule 65 (expresion -> expresion MENOR expresion .)
    $end            reduce using rule 65 (expresion -> expresion MENOR expresion .)
    PARC            reduce using rule 65 (expresion -> expresion MENOR expresion .)
    LLAVA           reduce using rule 65 (expresion -> expresion MENOR expresion .)
    PT_COMA         reduce using rule 65 (expresion -> expresion MENOR expresion .)
    LLAVC           reduce using rule 65 (expresion -> expresion MENOR expresion .)
    ARROW           reduce using rule 65 (expresion -> expresion MENOR expresion .)
    SEP_MATCH       reduce using rule 65 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 65 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37

  ! MAS             [ reduce using rule 65 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 65 (expresion -> expresion MENOR expresion .) ]
  ! MULTI           [ reduce using rule 65 (expresion -> expresion MENOR expresion .) ]
  ! DIV             [ reduce using rule 65 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 65 (expresion -> expresion MENOR expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 38 ]
  ! NO_IGUAL        [ shift and go to state 39 ]
  ! MAYOR           [ shift and go to state 40 ]
  ! MENOR           [ shift and go to state 41 ]
  ! MAYOR_IGUAL     [ shift and go to state 42 ]
  ! MENOR_IGUAL     [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]
  ! PUNTO           [ shift and go to state 46 ]
  ! AS              [ shift and go to state 47 ]


state 72

    (66) expresion -> expresion MAYOR_IGUAL expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    IGUAL_IGUAL     reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    NO_IGUAL        reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    MAYOR           reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    MENOR           reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    MAYOR_IGUAL     reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    MENOR_IGUAL     reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    AND             reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    OR              reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    PUNTO           reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    AS              reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    PRINTLN         reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    LET             reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    ID              reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    IF              reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    MATCH           reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    I64             reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    PARA            reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    NOT             reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    ENTERO          reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    DECIMAL         reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    CADENA          reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    CARACTER        reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    TRUE            reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    FALSE           reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    RETURN          reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    BREAK           reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    CONTINUE        reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    $end            reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    PARC            reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    LLAVA           reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    PT_COMA         reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    LLAVC           reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    ARROW           reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    SEP_MATCH       reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    COMA            reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37

  ! MAS             [ reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 66 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 38 ]
  ! NO_IGUAL        [ shift and go to state 39 ]
  ! MAYOR           [ shift and go to state 40 ]
  ! MENOR           [ shift and go to state 41 ]
  ! MAYOR_IGUAL     [ shift and go to state 42 ]
  ! MENOR_IGUAL     [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]
  ! PUNTO           [ shift and go to state 46 ]
  ! AS              [ shift and go to state 47 ]


state 73

    (67) expresion -> expresion MENOR_IGUAL expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    IGUAL_IGUAL     reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    NO_IGUAL        reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    MAYOR           reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    MENOR           reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    MAYOR_IGUAL     reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    MENOR_IGUAL     reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    AND             reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    OR              reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    PUNTO           reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    AS              reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    PRINTLN         reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    LET             reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    ID              reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    IF              reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    MATCH           reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    I64             reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    PARA            reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    NOT             reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    ENTERO          reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    DECIMAL         reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    CADENA          reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    CARACTER        reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    TRUE            reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    FALSE           reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    RETURN          reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    BREAK           reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    CONTINUE        reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    $end            reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    PARC            reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    LLAVA           reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    PT_COMA         reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    LLAVC           reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    ARROW           reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    SEP_MATCH       reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    COMA            reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37

  ! MAS             [ reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 67 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 38 ]
  ! NO_IGUAL        [ shift and go to state 39 ]
  ! MAYOR           [ shift and go to state 40 ]
  ! MENOR           [ shift and go to state 41 ]
  ! MAYOR_IGUAL     [ shift and go to state 42 ]
  ! MENOR_IGUAL     [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]
  ! PUNTO           [ shift and go to state 46 ]
  ! AS              [ shift and go to state 47 ]


state 74

    (68) expresion -> expresion AND expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    AND             reduce using rule 68 (expresion -> expresion AND expresion .)
    OR              reduce using rule 68 (expresion -> expresion AND expresion .)
    PUNTO           reduce using rule 68 (expresion -> expresion AND expresion .)
    AS              reduce using rule 68 (expresion -> expresion AND expresion .)
    PRINTLN         reduce using rule 68 (expresion -> expresion AND expresion .)
    LET             reduce using rule 68 (expresion -> expresion AND expresion .)
    ID              reduce using rule 68 (expresion -> expresion AND expresion .)
    IF              reduce using rule 68 (expresion -> expresion AND expresion .)
    MATCH           reduce using rule 68 (expresion -> expresion AND expresion .)
    I64             reduce using rule 68 (expresion -> expresion AND expresion .)
    PARA            reduce using rule 68 (expresion -> expresion AND expresion .)
    NOT             reduce using rule 68 (expresion -> expresion AND expresion .)
    ENTERO          reduce using rule 68 (expresion -> expresion AND expresion .)
    DECIMAL         reduce using rule 68 (expresion -> expresion AND expresion .)
    CADENA          reduce using rule 68 (expresion -> expresion AND expresion .)
    CARACTER        reduce using rule 68 (expresion -> expresion AND expresion .)
    TRUE            reduce using rule 68 (expresion -> expresion AND expresion .)
    FALSE           reduce using rule 68 (expresion -> expresion AND expresion .)
    RETURN          reduce using rule 68 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 68 (expresion -> expresion AND expresion .)
    CONTINUE        reduce using rule 68 (expresion -> expresion AND expresion .)
    $end            reduce using rule 68 (expresion -> expresion AND expresion .)
    PARC            reduce using rule 68 (expresion -> expresion AND expresion .)
    LLAVA           reduce using rule 68 (expresion -> expresion AND expresion .)
    PT_COMA         reduce using rule 68 (expresion -> expresion AND expresion .)
    LLAVC           reduce using rule 68 (expresion -> expresion AND expresion .)
    ARROW           reduce using rule 68 (expresion -> expresion AND expresion .)
    SEP_MATCH       reduce using rule 68 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 68 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37
    IGUAL_IGUAL     shift and go to state 38
    NO_IGUAL        shift and go to state 39
    MAYOR           shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR_IGUAL     shift and go to state 42
    MENOR_IGUAL     shift and go to state 43

  ! MAS             [ reduce using rule 68 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 68 (expresion -> expresion AND expresion .) ]
  ! MULTI           [ reduce using rule 68 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 68 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 68 (expresion -> expresion AND expresion .) ]
  ! IGUAL_IGUAL     [ reduce using rule 68 (expresion -> expresion AND expresion .) ]
  ! NO_IGUAL        [ reduce using rule 68 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 68 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 68 (expresion -> expresion AND expresion .) ]
  ! MAYOR_IGUAL     [ reduce using rule 68 (expresion -> expresion AND expresion .) ]
  ! MENOR_IGUAL     [ reduce using rule 68 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 44 ]
  ! OR              [ shift and go to state 45 ]
  ! PUNTO           [ shift and go to state 46 ]
  ! AS              [ shift and go to state 47 ]


state 75

    (69) expresion -> expresion OR expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    OR              reduce using rule 69 (expresion -> expresion OR expresion .)
    PUNTO           reduce using rule 69 (expresion -> expresion OR expresion .)
    AS              reduce using rule 69 (expresion -> expresion OR expresion .)
    PRINTLN         reduce using rule 69 (expresion -> expresion OR expresion .)
    LET             reduce using rule 69 (expresion -> expresion OR expresion .)
    ID              reduce using rule 69 (expresion -> expresion OR expresion .)
    IF              reduce using rule 69 (expresion -> expresion OR expresion .)
    MATCH           reduce using rule 69 (expresion -> expresion OR expresion .)
    I64             reduce using rule 69 (expresion -> expresion OR expresion .)
    PARA            reduce using rule 69 (expresion -> expresion OR expresion .)
    NOT             reduce using rule 69 (expresion -> expresion OR expresion .)
    ENTERO          reduce using rule 69 (expresion -> expresion OR expresion .)
    DECIMAL         reduce using rule 69 (expresion -> expresion OR expresion .)
    CADENA          reduce using rule 69 (expresion -> expresion OR expresion .)
    CARACTER        reduce using rule 69 (expresion -> expresion OR expresion .)
    TRUE            reduce using rule 69 (expresion -> expresion OR expresion .)
    FALSE           reduce using rule 69 (expresion -> expresion OR expresion .)
    RETURN          reduce using rule 69 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 69 (expresion -> expresion OR expresion .)
    CONTINUE        reduce using rule 69 (expresion -> expresion OR expresion .)
    $end            reduce using rule 69 (expresion -> expresion OR expresion .)
    PARC            reduce using rule 69 (expresion -> expresion OR expresion .)
    LLAVA           reduce using rule 69 (expresion -> expresion OR expresion .)
    PT_COMA         reduce using rule 69 (expresion -> expresion OR expresion .)
    LLAVC           reduce using rule 69 (expresion -> expresion OR expresion .)
    ARROW           reduce using rule 69 (expresion -> expresion OR expresion .)
    SEP_MATCH       reduce using rule 69 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 69 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37
    IGUAL_IGUAL     shift and go to state 38
    NO_IGUAL        shift and go to state 39
    MAYOR           shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR_IGUAL     shift and go to state 42
    MENOR_IGUAL     shift and go to state 43
    AND             shift and go to state 44

  ! MAS             [ reduce using rule 69 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 69 (expresion -> expresion OR expresion .) ]
  ! MULTI           [ reduce using rule 69 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 69 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 69 (expresion -> expresion OR expresion .) ]
  ! IGUAL_IGUAL     [ reduce using rule 69 (expresion -> expresion OR expresion .) ]
  ! NO_IGUAL        [ reduce using rule 69 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 69 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 69 (expresion -> expresion OR expresion .) ]
  ! MAYOR_IGUAL     [ reduce using rule 69 (expresion -> expresion OR expresion .) ]
  ! MENOR_IGUAL     [ reduce using rule 69 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 69 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 45 ]
  ! PUNTO           [ shift and go to state 46 ]
  ! AS              [ shift and go to state 47 ]


state 76

    (78) expresion -> expresion PUNTO TO_OWNED . PARA PARC

    PARA            shift and go to state 96


state 77

    (79) expresion -> expresion PUNTO TO_STRING . PARA PARC

    PARA            shift and go to state 97


state 78

    (80) expresion -> expresion PUNTO ABSOLUTO . PARA PARC

    PARA            shift and go to state 98


state 79

    (81) expresion -> expresion PUNTO RAIZ . PARA PARC

    PARA            shift and go to state 99


state 80

    (82) expresion -> expresion AS F64 .

    MAS             reduce using rule 82 (expresion -> expresion AS F64 .)
    MENOS           reduce using rule 82 (expresion -> expresion AS F64 .)
    MULTI           reduce using rule 82 (expresion -> expresion AS F64 .)
    DIV             reduce using rule 82 (expresion -> expresion AS F64 .)
    MODULO          reduce using rule 82 (expresion -> expresion AS F64 .)
    IGUAL_IGUAL     reduce using rule 82 (expresion -> expresion AS F64 .)
    NO_IGUAL        reduce using rule 82 (expresion -> expresion AS F64 .)
    MAYOR           reduce using rule 82 (expresion -> expresion AS F64 .)
    MENOR           reduce using rule 82 (expresion -> expresion AS F64 .)
    MAYOR_IGUAL     reduce using rule 82 (expresion -> expresion AS F64 .)
    MENOR_IGUAL     reduce using rule 82 (expresion -> expresion AS F64 .)
    AND             reduce using rule 82 (expresion -> expresion AS F64 .)
    OR              reduce using rule 82 (expresion -> expresion AS F64 .)
    PUNTO           reduce using rule 82 (expresion -> expresion AS F64 .)
    AS              reduce using rule 82 (expresion -> expresion AS F64 .)
    PRINTLN         reduce using rule 82 (expresion -> expresion AS F64 .)
    LET             reduce using rule 82 (expresion -> expresion AS F64 .)
    ID              reduce using rule 82 (expresion -> expresion AS F64 .)
    IF              reduce using rule 82 (expresion -> expresion AS F64 .)
    MATCH           reduce using rule 82 (expresion -> expresion AS F64 .)
    I64             reduce using rule 82 (expresion -> expresion AS F64 .)
    PARA            reduce using rule 82 (expresion -> expresion AS F64 .)
    NOT             reduce using rule 82 (expresion -> expresion AS F64 .)
    ENTERO          reduce using rule 82 (expresion -> expresion AS F64 .)
    DECIMAL         reduce using rule 82 (expresion -> expresion AS F64 .)
    CADENA          reduce using rule 82 (expresion -> expresion AS F64 .)
    CARACTER        reduce using rule 82 (expresion -> expresion AS F64 .)
    TRUE            reduce using rule 82 (expresion -> expresion AS F64 .)
    FALSE           reduce using rule 82 (expresion -> expresion AS F64 .)
    RETURN          reduce using rule 82 (expresion -> expresion AS F64 .)
    BREAK           reduce using rule 82 (expresion -> expresion AS F64 .)
    CONTINUE        reduce using rule 82 (expresion -> expresion AS F64 .)
    $end            reduce using rule 82 (expresion -> expresion AS F64 .)
    PARC            reduce using rule 82 (expresion -> expresion AS F64 .)
    LLAVA           reduce using rule 82 (expresion -> expresion AS F64 .)
    PT_COMA         reduce using rule 82 (expresion -> expresion AS F64 .)
    LLAVC           reduce using rule 82 (expresion -> expresion AS F64 .)
    ARROW           reduce using rule 82 (expresion -> expresion AS F64 .)
    SEP_MATCH       reduce using rule 82 (expresion -> expresion AS F64 .)
    COMA            reduce using rule 82 (expresion -> expresion AS F64 .)


state 81

    (83) expresion -> expresion AS I64 .

    MAS             reduce using rule 83 (expresion -> expresion AS I64 .)
    MENOS           reduce using rule 83 (expresion -> expresion AS I64 .)
    MULTI           reduce using rule 83 (expresion -> expresion AS I64 .)
    DIV             reduce using rule 83 (expresion -> expresion AS I64 .)
    MODULO          reduce using rule 83 (expresion -> expresion AS I64 .)
    IGUAL_IGUAL     reduce using rule 83 (expresion -> expresion AS I64 .)
    NO_IGUAL        reduce using rule 83 (expresion -> expresion AS I64 .)
    MAYOR           reduce using rule 83 (expresion -> expresion AS I64 .)
    MENOR           reduce using rule 83 (expresion -> expresion AS I64 .)
    MAYOR_IGUAL     reduce using rule 83 (expresion -> expresion AS I64 .)
    MENOR_IGUAL     reduce using rule 83 (expresion -> expresion AS I64 .)
    AND             reduce using rule 83 (expresion -> expresion AS I64 .)
    OR              reduce using rule 83 (expresion -> expresion AS I64 .)
    PUNTO           reduce using rule 83 (expresion -> expresion AS I64 .)
    AS              reduce using rule 83 (expresion -> expresion AS I64 .)
    PRINTLN         reduce using rule 83 (expresion -> expresion AS I64 .)
    LET             reduce using rule 83 (expresion -> expresion AS I64 .)
    ID              reduce using rule 83 (expresion -> expresion AS I64 .)
    IF              reduce using rule 83 (expresion -> expresion AS I64 .)
    MATCH           reduce using rule 83 (expresion -> expresion AS I64 .)
    I64             reduce using rule 83 (expresion -> expresion AS I64 .)
    PARA            reduce using rule 83 (expresion -> expresion AS I64 .)
    NOT             reduce using rule 83 (expresion -> expresion AS I64 .)
    ENTERO          reduce using rule 83 (expresion -> expresion AS I64 .)
    DECIMAL         reduce using rule 83 (expresion -> expresion AS I64 .)
    CADENA          reduce using rule 83 (expresion -> expresion AS I64 .)
    CARACTER        reduce using rule 83 (expresion -> expresion AS I64 .)
    TRUE            reduce using rule 83 (expresion -> expresion AS I64 .)
    FALSE           reduce using rule 83 (expresion -> expresion AS I64 .)
    RETURN          reduce using rule 83 (expresion -> expresion AS I64 .)
    BREAK           reduce using rule 83 (expresion -> expresion AS I64 .)
    CONTINUE        reduce using rule 83 (expresion -> expresion AS I64 .)
    $end            reduce using rule 83 (expresion -> expresion AS I64 .)
    PARC            reduce using rule 83 (expresion -> expresion AS I64 .)
    LLAVA           reduce using rule 83 (expresion -> expresion AS I64 .)
    PT_COMA         reduce using rule 83 (expresion -> expresion AS I64 .)
    LLAVC           reduce using rule 83 (expresion -> expresion AS I64 .)
    ARROW           reduce using rule 83 (expresion -> expresion AS I64 .)
    SEP_MATCH       reduce using rule 83 (expresion -> expresion AS I64 .)
    COMA            reduce using rule 83 (expresion -> expresion AS I64 .)


state 82

    (12) prints -> PRINTLN NOT PARA . CADENA COMA list_exp PARC
    (13) prints -> PRINTLN NOT PARA . CADENA PARC

    CADENA          shift and go to state 100


state 83

    (61) expresion -> PARA expresion PARC .

    MAS             reduce using rule 61 (expresion -> PARA expresion PARC .)
    MENOS           reduce using rule 61 (expresion -> PARA expresion PARC .)
    MULTI           reduce using rule 61 (expresion -> PARA expresion PARC .)
    DIV             reduce using rule 61 (expresion -> PARA expresion PARC .)
    MODULO          reduce using rule 61 (expresion -> PARA expresion PARC .)
    IGUAL_IGUAL     reduce using rule 61 (expresion -> PARA expresion PARC .)
    NO_IGUAL        reduce using rule 61 (expresion -> PARA expresion PARC .)
    MAYOR           reduce using rule 61 (expresion -> PARA expresion PARC .)
    MENOR           reduce using rule 61 (expresion -> PARA expresion PARC .)
    MAYOR_IGUAL     reduce using rule 61 (expresion -> PARA expresion PARC .)
    MENOR_IGUAL     reduce using rule 61 (expresion -> PARA expresion PARC .)
    AND             reduce using rule 61 (expresion -> PARA expresion PARC .)
    OR              reduce using rule 61 (expresion -> PARA expresion PARC .)
    PUNTO           reduce using rule 61 (expresion -> PARA expresion PARC .)
    AS              reduce using rule 61 (expresion -> PARA expresion PARC .)
    PRINTLN         reduce using rule 61 (expresion -> PARA expresion PARC .)
    LET             reduce using rule 61 (expresion -> PARA expresion PARC .)
    ID              reduce using rule 61 (expresion -> PARA expresion PARC .)
    IF              reduce using rule 61 (expresion -> PARA expresion PARC .)
    MATCH           reduce using rule 61 (expresion -> PARA expresion PARC .)
    I64             reduce using rule 61 (expresion -> PARA expresion PARC .)
    PARA            reduce using rule 61 (expresion -> PARA expresion PARC .)
    NOT             reduce using rule 61 (expresion -> PARA expresion PARC .)
    ENTERO          reduce using rule 61 (expresion -> PARA expresion PARC .)
    DECIMAL         reduce using rule 61 (expresion -> PARA expresion PARC .)
    CADENA          reduce using rule 61 (expresion -> PARA expresion PARC .)
    CARACTER        reduce using rule 61 (expresion -> PARA expresion PARC .)
    TRUE            reduce using rule 61 (expresion -> PARA expresion PARC .)
    FALSE           reduce using rule 61 (expresion -> PARA expresion PARC .)
    RETURN          reduce using rule 61 (expresion -> PARA expresion PARC .)
    BREAK           reduce using rule 61 (expresion -> PARA expresion PARC .)
    CONTINUE        reduce using rule 61 (expresion -> PARA expresion PARC .)
    $end            reduce using rule 61 (expresion -> PARA expresion PARC .)
    PARC            reduce using rule 61 (expresion -> PARA expresion PARC .)
    LLAVA           reduce using rule 61 (expresion -> PARA expresion PARC .)
    PT_COMA         reduce using rule 61 (expresion -> PARA expresion PARC .)
    LLAVC           reduce using rule 61 (expresion -> PARA expresion PARC .)
    ARROW           reduce using rule 61 (expresion -> PARA expresion PARC .)
    SEP_MATCH       reduce using rule 61 (expresion -> PARA expresion PARC .)
    COMA            reduce using rule 61 (expresion -> PARA expresion PARC .)


state 84

    (16) declaracion -> LET MUT ID . DOS_PT tipo IGUAL valores
    (17) declaracion -> LET MUT ID . DOS_PT tipo
    (18) declaracion -> LET MUT ID . IGUAL valores
    (19) declaracion -> LET MUT ID .

    DOS_PT          shift and go to state 101
    IGUAL           shift and go to state 102
    PT_COMA         reduce using rule 19 (declaracion -> LET MUT ID .)


state 85

    (20) declaracion -> LET ID DOS_PT . tipo IGUAL valores
    (21) declaracion -> LET ID DOS_PT . tipo
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . STRING
    (52) tipo -> . STR
    (53) tipo -> . CHAR

    I64             shift and go to state 104
    F64             shift and go to state 105
    BOOL            shift and go to state 106
    STRING          shift and go to state 107
    STR             shift and go to state 108
    CHAR            shift and go to state 109

    tipo                           shift and go to state 103

state 86

    (22) declaracion -> LET ID IGUAL . valores
    (25) valores -> . expresion
    (26) valores -> . sent_if
    (27) valores -> . match
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64
    (28) sent_if -> . IF expresion statement sent_else
    (32) match -> . MATCH expresion casos_match

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 18
    MATCH           shift and go to state 19

    valores                        shift and go to state 110
    expresion                      shift and go to state 88
    sent_if                        shift and go to state 89
    match                          shift and go to state 90

state 87

    (24) declaracion -> ID IGUAL valores .

    PT_COMA         reduce using rule 24 (declaracion -> ID IGUAL valores .)


state 88

    (25) valores -> expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    PT_COMA         reduce using rule 25 (valores -> expresion .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37
    IGUAL_IGUAL     shift and go to state 38
    NO_IGUAL        shift and go to state 39
    MAYOR           shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR_IGUAL     shift and go to state 42
    MENOR_IGUAL     shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    PUNTO           shift and go to state 46
    AS              shift and go to state 47


state 89

    (26) valores -> sent_if .

    PT_COMA         reduce using rule 26 (valores -> sent_if .)


state 90

    (27) valores -> match .

    PT_COMA         reduce using rule 27 (valores -> match .)


state 91

    (28) sent_if -> IF expresion statement . sent_else
    (29) sent_else -> . ELSE statement
    (30) sent_else -> . ELSE sent_if
    (31) sent_else -> .

    ELSE            shift and go to state 112
    PRINTLN         reduce using rule 31 (sent_else -> .)
    LET             reduce using rule 31 (sent_else -> .)
    ID              reduce using rule 31 (sent_else -> .)
    IF              reduce using rule 31 (sent_else -> .)
    MATCH           reduce using rule 31 (sent_else -> .)
    MENOS           reduce using rule 31 (sent_else -> .)
    I64             reduce using rule 31 (sent_else -> .)
    PARA            reduce using rule 31 (sent_else -> .)
    NOT             reduce using rule 31 (sent_else -> .)
    ENTERO          reduce using rule 31 (sent_else -> .)
    DECIMAL         reduce using rule 31 (sent_else -> .)
    CADENA          reduce using rule 31 (sent_else -> .)
    CARACTER        reduce using rule 31 (sent_else -> .)
    TRUE            reduce using rule 31 (sent_else -> .)
    FALSE           reduce using rule 31 (sent_else -> .)
    RETURN          reduce using rule 31 (sent_else -> .)
    BREAK           reduce using rule 31 (sent_else -> .)
    CONTINUE        reduce using rule 31 (sent_else -> .)
    $end            reduce using rule 31 (sent_else -> .)
    PT_COMA         reduce using rule 31 (sent_else -> .)
    LLAVC           reduce using rule 31 (sent_else -> .)
    COMA            reduce using rule 31 (sent_else -> .)

    sent_else                      shift and go to state 111

state 92

    (46) statement -> LLAVA . instrucciones LLAVC
    (47) statement -> LLAVA . LLAVC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (13) prints -> . PRINTLN NOT PARA CADENA PARC
    (16) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (17) declaracion -> . LET MUT ID DOS_PT tipo
    (18) declaracion -> . LET MUT ID IGUAL valores
    (19) declaracion -> . LET MUT ID
    (20) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (21) declaracion -> . LET ID DOS_PT tipo
    (22) declaracion -> . LET ID IGUAL valores
    (23) declaracion -> . LET ID
    (24) declaracion -> . ID IGUAL valores
    (28) sent_if -> . IF expresion statement sent_else
    (32) match -> . MATCH expresion casos_match
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64
    (42) return -> . RETURN
    (43) return -> . RETURN expresion
    (44) break -> . BREAK
    (45) continue -> . CONTINUE

    LLAVC           shift and go to state 114
    PRINTLN         shift and go to state 12
    LET             shift and go to state 16
    ID              shift and go to state 17
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    RETURN          shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29

    instrucciones                  shift and go to state 113
    instruccion                    shift and go to state 3
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11

state 93

    (32) match -> MATCH expresion casos_match .

    PRINTLN         reduce using rule 32 (match -> MATCH expresion casos_match .)
    LET             reduce using rule 32 (match -> MATCH expresion casos_match .)
    ID              reduce using rule 32 (match -> MATCH expresion casos_match .)
    IF              reduce using rule 32 (match -> MATCH expresion casos_match .)
    MATCH           reduce using rule 32 (match -> MATCH expresion casos_match .)
    MENOS           reduce using rule 32 (match -> MATCH expresion casos_match .)
    I64             reduce using rule 32 (match -> MATCH expresion casos_match .)
    PARA            reduce using rule 32 (match -> MATCH expresion casos_match .)
    NOT             reduce using rule 32 (match -> MATCH expresion casos_match .)
    ENTERO          reduce using rule 32 (match -> MATCH expresion casos_match .)
    DECIMAL         reduce using rule 32 (match -> MATCH expresion casos_match .)
    CADENA          reduce using rule 32 (match -> MATCH expresion casos_match .)
    CARACTER        reduce using rule 32 (match -> MATCH expresion casos_match .)
    TRUE            reduce using rule 32 (match -> MATCH expresion casos_match .)
    FALSE           reduce using rule 32 (match -> MATCH expresion casos_match .)
    RETURN          reduce using rule 32 (match -> MATCH expresion casos_match .)
    BREAK           reduce using rule 32 (match -> MATCH expresion casos_match .)
    CONTINUE        reduce using rule 32 (match -> MATCH expresion casos_match .)
    $end            reduce using rule 32 (match -> MATCH expresion casos_match .)
    PT_COMA         reduce using rule 32 (match -> MATCH expresion casos_match .)
    LLAVC           reduce using rule 32 (match -> MATCH expresion casos_match .)
    COMA            reduce using rule 32 (match -> MATCH expresion casos_match .)


state 94

    (33) casos_match -> LLAVA . lista_casos default LLAVC
    (34) lista_casos -> . lista_casos lista_expresiones ARROW statement COMA
    (35) lista_casos -> . lista_casos lista_expresiones ARROW instruccion COMA
    (36) lista_casos -> . lista_expresiones ARROW statement COMA
    (37) lista_casos -> . lista_expresiones ARROW instruccion COMA
    (38) lista_expresiones -> . lista_expresiones SEP_MATCH expresion
    (39) lista_expresiones -> . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    lista_casos                    shift and go to state 115
    lista_expresiones              shift and go to state 116
    expresion                      shift and go to state 117

state 95

    (60) expresion -> I64 DOS_PT DOS_PT . POW PARA expresion COMA expresion PARC

    POW             shift and go to state 118


state 96

    (78) expresion -> expresion PUNTO TO_OWNED PARA . PARC

    PARC            shift and go to state 119


state 97

    (79) expresion -> expresion PUNTO TO_STRING PARA . PARC

    PARC            shift and go to state 120


state 98

    (80) expresion -> expresion PUNTO ABSOLUTO PARA . PARC

    PARC            shift and go to state 121


state 99

    (81) expresion -> expresion PUNTO RAIZ PARA . PARC

    PARC            shift and go to state 122


state 100

    (12) prints -> PRINTLN NOT PARA CADENA . COMA list_exp PARC
    (13) prints -> PRINTLN NOT PARA CADENA . PARC

    COMA            shift and go to state 123
    PARC            shift and go to state 124


state 101

    (16) declaracion -> LET MUT ID DOS_PT . tipo IGUAL valores
    (17) declaracion -> LET MUT ID DOS_PT . tipo
    (48) tipo -> . I64
    (49) tipo -> . F64
    (50) tipo -> . BOOL
    (51) tipo -> . STRING
    (52) tipo -> . STR
    (53) tipo -> . CHAR

    I64             shift and go to state 104
    F64             shift and go to state 105
    BOOL            shift and go to state 106
    STRING          shift and go to state 107
    STR             shift and go to state 108
    CHAR            shift and go to state 109

    tipo                           shift and go to state 125

state 102

    (18) declaracion -> LET MUT ID IGUAL . valores
    (25) valores -> . expresion
    (26) valores -> . sent_if
    (27) valores -> . match
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64
    (28) sent_if -> . IF expresion statement sent_else
    (32) match -> . MATCH expresion casos_match

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 18
    MATCH           shift and go to state 19

    valores                        shift and go to state 126
    expresion                      shift and go to state 88
    sent_if                        shift and go to state 89
    match                          shift and go to state 90

state 103

    (20) declaracion -> LET ID DOS_PT tipo . IGUAL valores
    (21) declaracion -> LET ID DOS_PT tipo .

    IGUAL           shift and go to state 127
    PT_COMA         reduce using rule 21 (declaracion -> LET ID DOS_PT tipo .)


state 104

    (48) tipo -> I64 .

    IGUAL           reduce using rule 48 (tipo -> I64 .)
    PT_COMA         reduce using rule 48 (tipo -> I64 .)


state 105

    (49) tipo -> F64 .

    IGUAL           reduce using rule 49 (tipo -> F64 .)
    PT_COMA         reduce using rule 49 (tipo -> F64 .)


state 106

    (50) tipo -> BOOL .

    IGUAL           reduce using rule 50 (tipo -> BOOL .)
    PT_COMA         reduce using rule 50 (tipo -> BOOL .)


state 107

    (51) tipo -> STRING .

    IGUAL           reduce using rule 51 (tipo -> STRING .)
    PT_COMA         reduce using rule 51 (tipo -> STRING .)


state 108

    (52) tipo -> STR .

    IGUAL           reduce using rule 52 (tipo -> STR .)
    PT_COMA         reduce using rule 52 (tipo -> STR .)


state 109

    (53) tipo -> CHAR .

    IGUAL           reduce using rule 53 (tipo -> CHAR .)
    PT_COMA         reduce using rule 53 (tipo -> CHAR .)


state 110

    (22) declaracion -> LET ID IGUAL valores .

    PT_COMA         reduce using rule 22 (declaracion -> LET ID IGUAL valores .)


state 111

    (28) sent_if -> IF expresion statement sent_else .

    PRINTLN         reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    LET             reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    ID              reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    IF              reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    MATCH           reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    MENOS           reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    I64             reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    PARA            reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    NOT             reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    ENTERO          reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    DECIMAL         reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    CADENA          reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    CARACTER        reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    TRUE            reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    FALSE           reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    RETURN          reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    BREAK           reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    CONTINUE        reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    $end            reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    PT_COMA         reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    LLAVC           reduce using rule 28 (sent_if -> IF expresion statement sent_else .)
    COMA            reduce using rule 28 (sent_if -> IF expresion statement sent_else .)


state 112

    (29) sent_else -> ELSE . statement
    (30) sent_else -> ELSE . sent_if
    (46) statement -> . LLAVA instrucciones LLAVC
    (47) statement -> . LLAVA LLAVC
    (28) sent_if -> . IF expresion statement sent_else

    LLAVA           shift and go to state 92
    IF              shift and go to state 18

    statement                      shift and go to state 128
    sent_if                        shift and go to state 129

state 113

    (46) statement -> LLAVA instrucciones . LLAVC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (13) prints -> . PRINTLN NOT PARA CADENA PARC
    (16) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (17) declaracion -> . LET MUT ID DOS_PT tipo
    (18) declaracion -> . LET MUT ID IGUAL valores
    (19) declaracion -> . LET MUT ID
    (20) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (21) declaracion -> . LET ID DOS_PT tipo
    (22) declaracion -> . LET ID IGUAL valores
    (23) declaracion -> . LET ID
    (24) declaracion -> . ID IGUAL valores
    (28) sent_if -> . IF expresion statement sent_else
    (32) match -> . MATCH expresion casos_match
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64
    (42) return -> . RETURN
    (43) return -> . RETURN expresion
    (44) break -> . BREAK
    (45) continue -> . CONTINUE

    LLAVC           shift and go to state 130
    PRINTLN         shift and go to state 12
    LET             shift and go to state 16
    ID              shift and go to state 17
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    RETURN          shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29

    instruccion                    shift and go to state 30
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11

state 114

    (47) statement -> LLAVA LLAVC .

    ELSE            reduce using rule 47 (statement -> LLAVA LLAVC .)
    PRINTLN         reduce using rule 47 (statement -> LLAVA LLAVC .)
    LET             reduce using rule 47 (statement -> LLAVA LLAVC .)
    ID              reduce using rule 47 (statement -> LLAVA LLAVC .)
    IF              reduce using rule 47 (statement -> LLAVA LLAVC .)
    MATCH           reduce using rule 47 (statement -> LLAVA LLAVC .)
    MENOS           reduce using rule 47 (statement -> LLAVA LLAVC .)
    I64             reduce using rule 47 (statement -> LLAVA LLAVC .)
    PARA            reduce using rule 47 (statement -> LLAVA LLAVC .)
    NOT             reduce using rule 47 (statement -> LLAVA LLAVC .)
    ENTERO          reduce using rule 47 (statement -> LLAVA LLAVC .)
    DECIMAL         reduce using rule 47 (statement -> LLAVA LLAVC .)
    CADENA          reduce using rule 47 (statement -> LLAVA LLAVC .)
    CARACTER        reduce using rule 47 (statement -> LLAVA LLAVC .)
    TRUE            reduce using rule 47 (statement -> LLAVA LLAVC .)
    FALSE           reduce using rule 47 (statement -> LLAVA LLAVC .)
    RETURN          reduce using rule 47 (statement -> LLAVA LLAVC .)
    BREAK           reduce using rule 47 (statement -> LLAVA LLAVC .)
    CONTINUE        reduce using rule 47 (statement -> LLAVA LLAVC .)
    $end            reduce using rule 47 (statement -> LLAVA LLAVC .)
    PT_COMA         reduce using rule 47 (statement -> LLAVA LLAVC .)
    LLAVC           reduce using rule 47 (statement -> LLAVA LLAVC .)
    COMA            reduce using rule 47 (statement -> LLAVA LLAVC .)


state 115

    (33) casos_match -> LLAVA lista_casos . default LLAVC
    (34) lista_casos -> lista_casos . lista_expresiones ARROW statement COMA
    (35) lista_casos -> lista_casos . lista_expresiones ARROW instruccion COMA
    (40) default -> . GUION_B ARROW statement COMA
    (41) default -> . GUION_B ARROW instruccion COMA
    (38) lista_expresiones -> . lista_expresiones SEP_MATCH expresion
    (39) lista_expresiones -> . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    GUION_B         shift and go to state 133
    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    default                        shift and go to state 131
    lista_expresiones              shift and go to state 132
    expresion                      shift and go to state 117

state 116

    (36) lista_casos -> lista_expresiones . ARROW statement COMA
    (37) lista_casos -> lista_expresiones . ARROW instruccion COMA
    (38) lista_expresiones -> lista_expresiones . SEP_MATCH expresion

    ARROW           shift and go to state 134
    SEP_MATCH       shift and go to state 135


state 117

    (39) lista_expresiones -> expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    ARROW           reduce using rule 39 (lista_expresiones -> expresion .)
    SEP_MATCH       reduce using rule 39 (lista_expresiones -> expresion .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37
    IGUAL_IGUAL     shift and go to state 38
    NO_IGUAL        shift and go to state 39
    MAYOR           shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR_IGUAL     shift and go to state 42
    MENOR_IGUAL     shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    PUNTO           shift and go to state 46
    AS              shift and go to state 47


state 118

    (60) expresion -> I64 DOS_PT DOS_PT POW . PARA expresion COMA expresion PARC

    PARA            shift and go to state 136


state 119

    (78) expresion -> expresion PUNTO TO_OWNED PARA PARC .

    MAS             reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MENOS           reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MULTI           reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    DIV             reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MODULO          reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    IGUAL_IGUAL     reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    NO_IGUAL        reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MAYOR           reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MENOR           reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MAYOR_IGUAL     reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MENOR_IGUAL     reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    AND             reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    OR              reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PUNTO           reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    AS              reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PRINTLN         reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    LET             reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    ID              reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    IF              reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MATCH           reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    I64             reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PARA            reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    NOT             reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    ENTERO          reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    DECIMAL         reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    CADENA          reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    CARACTER        reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    TRUE            reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    FALSE           reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    RETURN          reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    BREAK           reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    CONTINUE        reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    $end            reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PARC            reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    LLAVA           reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PT_COMA         reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    LLAVC           reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    ARROW           reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    SEP_MATCH       reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    COMA            reduce using rule 78 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)


state 120

    (79) expresion -> expresion PUNTO TO_STRING PARA PARC .

    MAS             reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MENOS           reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MULTI           reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    DIV             reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MODULO          reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    IGUAL_IGUAL     reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    NO_IGUAL        reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MAYOR           reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MENOR           reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MAYOR_IGUAL     reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MENOR_IGUAL     reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    AND             reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    OR              reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PUNTO           reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    AS              reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PRINTLN         reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    LET             reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    ID              reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    IF              reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MATCH           reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    I64             reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PARA            reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    NOT             reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    ENTERO          reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    DECIMAL         reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    CADENA          reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    CARACTER        reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    TRUE            reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    FALSE           reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    RETURN          reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    BREAK           reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    CONTINUE        reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    $end            reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PARC            reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    LLAVA           reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PT_COMA         reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    LLAVC           reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    ARROW           reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    SEP_MATCH       reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    COMA            reduce using rule 79 (expresion -> expresion PUNTO TO_STRING PARA PARC .)


state 121

    (80) expresion -> expresion PUNTO ABSOLUTO PARA PARC .

    MAS             reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MENOS           reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MULTI           reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    DIV             reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MODULO          reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    IGUAL_IGUAL     reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    NO_IGUAL        reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MAYOR           reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MENOR           reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MAYOR_IGUAL     reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MENOR_IGUAL     reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    AND             reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    OR              reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    PUNTO           reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    AS              reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    PRINTLN         reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    LET             reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    ID              reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    IF              reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MATCH           reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    I64             reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    PARA            reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    NOT             reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    ENTERO          reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    DECIMAL         reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    CADENA          reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    CARACTER        reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    TRUE            reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    FALSE           reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    RETURN          reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    BREAK           reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    CONTINUE        reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    $end            reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    PARC            reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    LLAVA           reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    PT_COMA         reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    LLAVC           reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    ARROW           reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    SEP_MATCH       reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    COMA            reduce using rule 80 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)


state 122

    (81) expresion -> expresion PUNTO RAIZ PARA PARC .

    MAS             reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MENOS           reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MULTI           reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    DIV             reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MODULO          reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    IGUAL_IGUAL     reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    NO_IGUAL        reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MAYOR           reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MENOR           reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MAYOR_IGUAL     reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MENOR_IGUAL     reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    AND             reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    OR              reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    PUNTO           reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    AS              reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    PRINTLN         reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    LET             reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    ID              reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    IF              reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MATCH           reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    I64             reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    PARA            reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    NOT             reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    ENTERO          reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    DECIMAL         reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    CADENA          reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    CARACTER        reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    TRUE            reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    FALSE           reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    RETURN          reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    BREAK           reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    CONTINUE        reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    $end            reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    PARC            reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    LLAVA           reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    PT_COMA         reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    LLAVC           reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    ARROW           reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    SEP_MATCH       reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    COMA            reduce using rule 81 (expresion -> expresion PUNTO RAIZ PARA PARC .)


state 123

    (12) prints -> PRINTLN NOT PARA CADENA COMA . list_exp PARC
    (14) list_exp -> . list_exp COMA expresion
    (15) list_exp -> . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    list_exp                       shift and go to state 137
    expresion                      shift and go to state 138

state 124

    (13) prints -> PRINTLN NOT PARA CADENA PARC .

    PT_COMA         reduce using rule 13 (prints -> PRINTLN NOT PARA CADENA PARC .)


state 125

    (16) declaracion -> LET MUT ID DOS_PT tipo . IGUAL valores
    (17) declaracion -> LET MUT ID DOS_PT tipo .

    IGUAL           shift and go to state 139
    PT_COMA         reduce using rule 17 (declaracion -> LET MUT ID DOS_PT tipo .)


state 126

    (18) declaracion -> LET MUT ID IGUAL valores .

    PT_COMA         reduce using rule 18 (declaracion -> LET MUT ID IGUAL valores .)


state 127

    (20) declaracion -> LET ID DOS_PT tipo IGUAL . valores
    (25) valores -> . expresion
    (26) valores -> . sent_if
    (27) valores -> . match
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64
    (28) sent_if -> . IF expresion statement sent_else
    (32) match -> . MATCH expresion casos_match

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 18
    MATCH           shift and go to state 19

    valores                        shift and go to state 140
    expresion                      shift and go to state 88
    sent_if                        shift and go to state 89
    match                          shift and go to state 90

state 128

    (29) sent_else -> ELSE statement .

    PRINTLN         reduce using rule 29 (sent_else -> ELSE statement .)
    LET             reduce using rule 29 (sent_else -> ELSE statement .)
    ID              reduce using rule 29 (sent_else -> ELSE statement .)
    IF              reduce using rule 29 (sent_else -> ELSE statement .)
    MATCH           reduce using rule 29 (sent_else -> ELSE statement .)
    MENOS           reduce using rule 29 (sent_else -> ELSE statement .)
    I64             reduce using rule 29 (sent_else -> ELSE statement .)
    PARA            reduce using rule 29 (sent_else -> ELSE statement .)
    NOT             reduce using rule 29 (sent_else -> ELSE statement .)
    ENTERO          reduce using rule 29 (sent_else -> ELSE statement .)
    DECIMAL         reduce using rule 29 (sent_else -> ELSE statement .)
    CADENA          reduce using rule 29 (sent_else -> ELSE statement .)
    CARACTER        reduce using rule 29 (sent_else -> ELSE statement .)
    TRUE            reduce using rule 29 (sent_else -> ELSE statement .)
    FALSE           reduce using rule 29 (sent_else -> ELSE statement .)
    RETURN          reduce using rule 29 (sent_else -> ELSE statement .)
    BREAK           reduce using rule 29 (sent_else -> ELSE statement .)
    CONTINUE        reduce using rule 29 (sent_else -> ELSE statement .)
    $end            reduce using rule 29 (sent_else -> ELSE statement .)
    PT_COMA         reduce using rule 29 (sent_else -> ELSE statement .)
    LLAVC           reduce using rule 29 (sent_else -> ELSE statement .)
    COMA            reduce using rule 29 (sent_else -> ELSE statement .)


state 129

    (30) sent_else -> ELSE sent_if .

    PRINTLN         reduce using rule 30 (sent_else -> ELSE sent_if .)
    LET             reduce using rule 30 (sent_else -> ELSE sent_if .)
    ID              reduce using rule 30 (sent_else -> ELSE sent_if .)
    IF              reduce using rule 30 (sent_else -> ELSE sent_if .)
    MATCH           reduce using rule 30 (sent_else -> ELSE sent_if .)
    MENOS           reduce using rule 30 (sent_else -> ELSE sent_if .)
    I64             reduce using rule 30 (sent_else -> ELSE sent_if .)
    PARA            reduce using rule 30 (sent_else -> ELSE sent_if .)
    NOT             reduce using rule 30 (sent_else -> ELSE sent_if .)
    ENTERO          reduce using rule 30 (sent_else -> ELSE sent_if .)
    DECIMAL         reduce using rule 30 (sent_else -> ELSE sent_if .)
    CADENA          reduce using rule 30 (sent_else -> ELSE sent_if .)
    CARACTER        reduce using rule 30 (sent_else -> ELSE sent_if .)
    TRUE            reduce using rule 30 (sent_else -> ELSE sent_if .)
    FALSE           reduce using rule 30 (sent_else -> ELSE sent_if .)
    RETURN          reduce using rule 30 (sent_else -> ELSE sent_if .)
    BREAK           reduce using rule 30 (sent_else -> ELSE sent_if .)
    CONTINUE        reduce using rule 30 (sent_else -> ELSE sent_if .)
    $end            reduce using rule 30 (sent_else -> ELSE sent_if .)
    PT_COMA         reduce using rule 30 (sent_else -> ELSE sent_if .)
    LLAVC           reduce using rule 30 (sent_else -> ELSE sent_if .)
    COMA            reduce using rule 30 (sent_else -> ELSE sent_if .)


state 130

    (46) statement -> LLAVA instrucciones LLAVC .

    ELSE            reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    PRINTLN         reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    LET             reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    ID              reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    IF              reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    MATCH           reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    MENOS           reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    I64             reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    PARA            reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    NOT             reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    ENTERO          reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    DECIMAL         reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    CADENA          reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    CARACTER        reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    TRUE            reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    FALSE           reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    RETURN          reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    BREAK           reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    CONTINUE        reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    $end            reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    PT_COMA         reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    LLAVC           reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)
    COMA            reduce using rule 46 (statement -> LLAVA instrucciones LLAVC .)


state 131

    (33) casos_match -> LLAVA lista_casos default . LLAVC

    LLAVC           shift and go to state 141


state 132

    (34) lista_casos -> lista_casos lista_expresiones . ARROW statement COMA
    (35) lista_casos -> lista_casos lista_expresiones . ARROW instruccion COMA
    (38) lista_expresiones -> lista_expresiones . SEP_MATCH expresion

    ARROW           shift and go to state 142
    SEP_MATCH       shift and go to state 135


state 133

    (40) default -> GUION_B . ARROW statement COMA
    (41) default -> GUION_B . ARROW instruccion COMA

    ARROW           shift and go to state 143


state 134

    (36) lista_casos -> lista_expresiones ARROW . statement COMA
    (37) lista_casos -> lista_expresiones ARROW . instruccion COMA
    (46) statement -> . LLAVA instrucciones LLAVC
    (47) statement -> . LLAVA LLAVC
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (13) prints -> . PRINTLN NOT PARA CADENA PARC
    (16) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (17) declaracion -> . LET MUT ID DOS_PT tipo
    (18) declaracion -> . LET MUT ID IGUAL valores
    (19) declaracion -> . LET MUT ID
    (20) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (21) declaracion -> . LET ID DOS_PT tipo
    (22) declaracion -> . LET ID IGUAL valores
    (23) declaracion -> . LET ID
    (24) declaracion -> . ID IGUAL valores
    (28) sent_if -> . IF expresion statement sent_else
    (32) match -> . MATCH expresion casos_match
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64
    (42) return -> . RETURN
    (43) return -> . RETURN expresion
    (44) break -> . BREAK
    (45) continue -> . CONTINUE

    LLAVA           shift and go to state 92
    PRINTLN         shift and go to state 12
    LET             shift and go to state 16
    ID              shift and go to state 17
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    RETURN          shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29

    statement                      shift and go to state 144
    instruccion                    shift and go to state 145
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11

state 135

    (38) lista_expresiones -> lista_expresiones SEP_MATCH . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 146

state 136

    (60) expresion -> I64 DOS_PT DOS_PT POW PARA . expresion COMA expresion PARC
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 147

state 137

    (12) prints -> PRINTLN NOT PARA CADENA COMA list_exp . PARC
    (14) list_exp -> list_exp . COMA expresion

    PARC            shift and go to state 149
    COMA            shift and go to state 148


state 138

    (15) list_exp -> expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    PARC            reduce using rule 15 (list_exp -> expresion .)
    COMA            reduce using rule 15 (list_exp -> expresion .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37
    IGUAL_IGUAL     shift and go to state 38
    NO_IGUAL        shift and go to state 39
    MAYOR           shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR_IGUAL     shift and go to state 42
    MENOR_IGUAL     shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    PUNTO           shift and go to state 46
    AS              shift and go to state 47


state 139

    (16) declaracion -> LET MUT ID DOS_PT tipo IGUAL . valores
    (25) valores -> . expresion
    (26) valores -> . sent_if
    (27) valores -> . match
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64
    (28) sent_if -> . IF expresion statement sent_else
    (32) match -> . MATCH expresion casos_match

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 18
    MATCH           shift and go to state 19

    valores                        shift and go to state 150
    expresion                      shift and go to state 88
    sent_if                        shift and go to state 89
    match                          shift and go to state 90

state 140

    (20) declaracion -> LET ID DOS_PT tipo IGUAL valores .

    PT_COMA         reduce using rule 20 (declaracion -> LET ID DOS_PT tipo IGUAL valores .)


state 141

    (33) casos_match -> LLAVA lista_casos default LLAVC .

    PRINTLN         reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    LET             reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    ID              reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    IF              reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    MATCH           reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    MENOS           reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    I64             reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    PARA            reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    NOT             reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    ENTERO          reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    DECIMAL         reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    CADENA          reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    CARACTER        reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    TRUE            reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    FALSE           reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    RETURN          reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    BREAK           reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    CONTINUE        reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    $end            reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    PT_COMA         reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    LLAVC           reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)
    COMA            reduce using rule 33 (casos_match -> LLAVA lista_casos default LLAVC .)


state 142

    (34) lista_casos -> lista_casos lista_expresiones ARROW . statement COMA
    (35) lista_casos -> lista_casos lista_expresiones ARROW . instruccion COMA
    (46) statement -> . LLAVA instrucciones LLAVC
    (47) statement -> . LLAVA LLAVC
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (13) prints -> . PRINTLN NOT PARA CADENA PARC
    (16) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (17) declaracion -> . LET MUT ID DOS_PT tipo
    (18) declaracion -> . LET MUT ID IGUAL valores
    (19) declaracion -> . LET MUT ID
    (20) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (21) declaracion -> . LET ID DOS_PT tipo
    (22) declaracion -> . LET ID IGUAL valores
    (23) declaracion -> . LET ID
    (24) declaracion -> . ID IGUAL valores
    (28) sent_if -> . IF expresion statement sent_else
    (32) match -> . MATCH expresion casos_match
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64
    (42) return -> . RETURN
    (43) return -> . RETURN expresion
    (44) break -> . BREAK
    (45) continue -> . CONTINUE

    LLAVA           shift and go to state 92
    PRINTLN         shift and go to state 12
    LET             shift and go to state 16
    ID              shift and go to state 17
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    RETURN          shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29

    statement                      shift and go to state 151
    instruccion                    shift and go to state 152
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11

state 143

    (40) default -> GUION_B ARROW . statement COMA
    (41) default -> GUION_B ARROW . instruccion COMA
    (46) statement -> . LLAVA instrucciones LLAVC
    (47) statement -> . LLAVA LLAVC
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (13) prints -> . PRINTLN NOT PARA CADENA PARC
    (16) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (17) declaracion -> . LET MUT ID DOS_PT tipo
    (18) declaracion -> . LET MUT ID IGUAL valores
    (19) declaracion -> . LET MUT ID
    (20) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (21) declaracion -> . LET ID DOS_PT tipo
    (22) declaracion -> . LET ID IGUAL valores
    (23) declaracion -> . LET ID
    (24) declaracion -> . ID IGUAL valores
    (28) sent_if -> . IF expresion statement sent_else
    (32) match -> . MATCH expresion casos_match
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64
    (42) return -> . RETURN
    (43) return -> . RETURN expresion
    (44) break -> . BREAK
    (45) continue -> . CONTINUE

    LLAVA           shift and go to state 92
    PRINTLN         shift and go to state 12
    LET             shift and go to state 16
    ID              shift and go to state 17
    IF              shift and go to state 18
    MATCH           shift and go to state 19
    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    RETURN          shift and go to state 27
    BREAK           shift and go to state 28
    CONTINUE        shift and go to state 29

    statement                      shift and go to state 153
    instruccion                    shift and go to state 154
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11

state 144

    (36) lista_casos -> lista_expresiones ARROW statement . COMA

    COMA            shift and go to state 155


state 145

    (37) lista_casos -> lista_expresiones ARROW instruccion . COMA

    COMA            shift and go to state 156


state 146

    (38) lista_expresiones -> lista_expresiones SEP_MATCH expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    ARROW           reduce using rule 38 (lista_expresiones -> lista_expresiones SEP_MATCH expresion .)
    SEP_MATCH       reduce using rule 38 (lista_expresiones -> lista_expresiones SEP_MATCH expresion .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37
    IGUAL_IGUAL     shift and go to state 38
    NO_IGUAL        shift and go to state 39
    MAYOR           shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR_IGUAL     shift and go to state 42
    MENOR_IGUAL     shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    PUNTO           shift and go to state 46
    AS              shift and go to state 47


state 147

    (60) expresion -> I64 DOS_PT DOS_PT POW PARA expresion . COMA expresion PARC
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    COMA            shift and go to state 157
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37
    IGUAL_IGUAL     shift and go to state 38
    NO_IGUAL        shift and go to state 39
    MAYOR           shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR_IGUAL     shift and go to state 42
    MENOR_IGUAL     shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    PUNTO           shift and go to state 46
    AS              shift and go to state 47


state 148

    (14) list_exp -> list_exp COMA . expresion
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 158

state 149

    (12) prints -> PRINTLN NOT PARA CADENA COMA list_exp PARC .

    PT_COMA         reduce using rule 12 (prints -> PRINTLN NOT PARA CADENA COMA list_exp PARC .)


state 150

    (16) declaracion -> LET MUT ID DOS_PT tipo IGUAL valores .

    PT_COMA         reduce using rule 16 (declaracion -> LET MUT ID DOS_PT tipo IGUAL valores .)


state 151

    (34) lista_casos -> lista_casos lista_expresiones ARROW statement . COMA

    COMA            shift and go to state 159


state 152

    (35) lista_casos -> lista_casos lista_expresiones ARROW instruccion . COMA

    COMA            shift and go to state 160


state 153

    (40) default -> GUION_B ARROW statement . COMA

    COMA            shift and go to state 161


state 154

    (41) default -> GUION_B ARROW instruccion . COMA

    COMA            shift and go to state 162


state 155

    (36) lista_casos -> lista_expresiones ARROW statement COMA .

    GUION_B         reduce using rule 36 (lista_casos -> lista_expresiones ARROW statement COMA .)
    MENOS           reduce using rule 36 (lista_casos -> lista_expresiones ARROW statement COMA .)
    I64             reduce using rule 36 (lista_casos -> lista_expresiones ARROW statement COMA .)
    PARA            reduce using rule 36 (lista_casos -> lista_expresiones ARROW statement COMA .)
    NOT             reduce using rule 36 (lista_casos -> lista_expresiones ARROW statement COMA .)
    ENTERO          reduce using rule 36 (lista_casos -> lista_expresiones ARROW statement COMA .)
    DECIMAL         reduce using rule 36 (lista_casos -> lista_expresiones ARROW statement COMA .)
    ID              reduce using rule 36 (lista_casos -> lista_expresiones ARROW statement COMA .)
    CADENA          reduce using rule 36 (lista_casos -> lista_expresiones ARROW statement COMA .)
    CARACTER        reduce using rule 36 (lista_casos -> lista_expresiones ARROW statement COMA .)
    TRUE            reduce using rule 36 (lista_casos -> lista_expresiones ARROW statement COMA .)
    FALSE           reduce using rule 36 (lista_casos -> lista_expresiones ARROW statement COMA .)


state 156

    (37) lista_casos -> lista_expresiones ARROW instruccion COMA .

    GUION_B         reduce using rule 37 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    MENOS           reduce using rule 37 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    I64             reduce using rule 37 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    PARA            reduce using rule 37 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    NOT             reduce using rule 37 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    ENTERO          reduce using rule 37 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    DECIMAL         reduce using rule 37 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    ID              reduce using rule 37 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    CADENA          reduce using rule 37 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    CARACTER        reduce using rule 37 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    TRUE            reduce using rule 37 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    FALSE           reduce using rule 37 (lista_casos -> lista_expresiones ARROW instruccion COMA .)


state 157

    (60) expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA . expresion PARC
    (54) expresion -> . MENOS expresion
    (55) expresion -> . expresion MAS expresion
    (56) expresion -> . expresion MENOS expresion
    (57) expresion -> . expresion MULTI expresion
    (58) expresion -> . expresion DIV expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (61) expresion -> . PARA expresion PARC
    (62) expresion -> . expresion IGUAL_IGUAL expresion
    (63) expresion -> . expresion NO_IGUAL expresion
    (64) expresion -> . expresion MAYOR expresion
    (65) expresion -> . expresion MENOR expresion
    (66) expresion -> . expresion MAYOR_IGUAL expresion
    (67) expresion -> . expresion MENOR_IGUAL expresion
    (68) expresion -> . expresion AND expresion
    (69) expresion -> . expresion OR expresion
    (70) expresion -> . NOT expresion
    (71) expresion -> . ENTERO
    (72) expresion -> . DECIMAL
    (73) expresion -> . ID
    (74) expresion -> . CADENA
    (75) expresion -> . CARACTER
    (76) expresion -> . TRUE
    (77) expresion -> . FALSE
    (78) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (79) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (80) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (81) expresion -> . expresion PUNTO RAIZ PARA PARC
    (82) expresion -> . expresion AS F64
    (83) expresion -> . expresion AS I64

    MENOS           shift and go to state 20
    I64             shift and go to state 21
    PARA            shift and go to state 14
    NOT             shift and go to state 13
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    ID              shift and go to state 53
    CADENA          shift and go to state 15
    CARACTER        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    expresion                      shift and go to state 163

state 158

    (14) list_exp -> list_exp COMA expresion .
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    PARC            reduce using rule 14 (list_exp -> list_exp COMA expresion .)
    COMA            reduce using rule 14 (list_exp -> list_exp COMA expresion .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37
    IGUAL_IGUAL     shift and go to state 38
    NO_IGUAL        shift and go to state 39
    MAYOR           shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR_IGUAL     shift and go to state 42
    MENOR_IGUAL     shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    PUNTO           shift and go to state 46
    AS              shift and go to state 47


state 159

    (34) lista_casos -> lista_casos lista_expresiones ARROW statement COMA .

    GUION_B         reduce using rule 34 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    MENOS           reduce using rule 34 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    I64             reduce using rule 34 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    PARA            reduce using rule 34 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    NOT             reduce using rule 34 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    ENTERO          reduce using rule 34 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    DECIMAL         reduce using rule 34 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    ID              reduce using rule 34 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    CADENA          reduce using rule 34 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    CARACTER        reduce using rule 34 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    TRUE            reduce using rule 34 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    FALSE           reduce using rule 34 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)


state 160

    (35) lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .

    GUION_B         reduce using rule 35 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    MENOS           reduce using rule 35 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    I64             reduce using rule 35 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    PARA            reduce using rule 35 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    NOT             reduce using rule 35 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    ENTERO          reduce using rule 35 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    DECIMAL         reduce using rule 35 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    ID              reduce using rule 35 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    CADENA          reduce using rule 35 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    CARACTER        reduce using rule 35 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    TRUE            reduce using rule 35 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    FALSE           reduce using rule 35 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)


state 161

    (40) default -> GUION_B ARROW statement COMA .

    LLAVC           reduce using rule 40 (default -> GUION_B ARROW statement COMA .)


state 162

    (41) default -> GUION_B ARROW instruccion COMA .

    LLAVC           reduce using rule 41 (default -> GUION_B ARROW instruccion COMA .)


state 163

    (60) expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion . PARC
    (55) expresion -> expresion . MAS expresion
    (56) expresion -> expresion . MENOS expresion
    (57) expresion -> expresion . MULTI expresion
    (58) expresion -> expresion . DIV expresion
    (59) expresion -> expresion . MODULO expresion
    (62) expresion -> expresion . IGUAL_IGUAL expresion
    (63) expresion -> expresion . NO_IGUAL expresion
    (64) expresion -> expresion . MAYOR expresion
    (65) expresion -> expresion . MENOR expresion
    (66) expresion -> expresion . MAYOR_IGUAL expresion
    (67) expresion -> expresion . MENOR_IGUAL expresion
    (68) expresion -> expresion . AND expresion
    (69) expresion -> expresion . OR expresion
    (78) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (79) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (80) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (81) expresion -> expresion . PUNTO RAIZ PARA PARC
    (82) expresion -> expresion . AS F64
    (83) expresion -> expresion . AS I64

    PARC            shift and go to state 164
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    MULTI           shift and go to state 35
    DIV             shift and go to state 36
    MODULO          shift and go to state 37
    IGUAL_IGUAL     shift and go to state 38
    NO_IGUAL        shift and go to state 39
    MAYOR           shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR_IGUAL     shift and go to state 42
    MENOR_IGUAL     shift and go to state 43
    AND             shift and go to state 44
    OR              shift and go to state 45
    PUNTO           shift and go to state 46
    AS              shift and go to state 47


state 164

    (60) expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .

    MAS             reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MENOS           reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MULTI           reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    DIV             reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MODULO          reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    IGUAL_IGUAL     reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    NO_IGUAL        reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MAYOR           reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MENOR           reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MAYOR_IGUAL     reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MENOR_IGUAL     reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    AND             reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    OR              reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PUNTO           reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    AS              reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PRINTLN         reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    LET             reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    ID              reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    IF              reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MATCH           reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    I64             reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PARA            reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    NOT             reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    ENTERO          reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    DECIMAL         reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    CADENA          reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    CARACTER        reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    TRUE            reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    FALSE           reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    RETURN          reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    BREAK           reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    CONTINUE        reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    $end            reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PARC            reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    LLAVA           reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PT_COMA         reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    LLAVC           reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    ARROW           reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    SEP_MATCH       reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    COMA            reduce using rule 60 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MENOS in state 8 resolved as shift
