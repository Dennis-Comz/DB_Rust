Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> prints PT_COMA
Rule 5     instruccion -> declaracion PT_COMA
Rule 6     instruccion -> sent_if
Rule 7     instruccion -> match
Rule 8     instruccion -> expresion
Rule 9     instruccion -> return PT_COMA
Rule 10    instruccion -> break PT_COMA
Rule 11    instruccion -> continue PT_COMA
Rule 12    instruccion -> loop
Rule 13    instruccion -> while
Rule 14    prints -> PRINTLN NOT PARA CADENA COMA list_exp PARC
Rule 15    prints -> PRINTLN NOT PARA CADENA PARC
Rule 16    list_exp -> list_exp COMA expresion
Rule 17    list_exp -> expresion
Rule 18    declaracion -> LET MUT ID DOS_PT tipo IGUAL valores
Rule 19    declaracion -> LET MUT ID DOS_PT tipo
Rule 20    declaracion -> LET MUT ID IGUAL valores
Rule 21    declaracion -> LET MUT ID
Rule 22    declaracion -> LET ID DOS_PT tipo IGUAL valores
Rule 23    declaracion -> LET ID DOS_PT tipo
Rule 24    declaracion -> LET ID IGUAL valores
Rule 25    declaracion -> LET ID
Rule 26    declaracion -> ID IGUAL valores
Rule 27    valores -> expresion
Rule 28    valores -> sent_if
Rule 29    valores -> match
Rule 30    valores -> loop
Rule 31    sent_if -> IF expresion statement sent_else
Rule 32    sent_else -> ELSE statement
Rule 33    sent_else -> ELSE sent_if
Rule 34    sent_else -> <empty>
Rule 35    match -> MATCH expresion casos_match
Rule 36    casos_match -> LLAVA lista_casos default LLAVC
Rule 37    lista_casos -> lista_casos lista_expresiones ARROW statement COMA
Rule 38    lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA
Rule 39    lista_casos -> lista_expresiones ARROW statement COMA
Rule 40    lista_casos -> lista_expresiones ARROW instruccion COMA
Rule 41    lista_expresiones -> lista_expresiones SEP_MATCH expresion
Rule 42    lista_expresiones -> expresion
Rule 43    default -> GUION_B ARROW statement COMA
Rule 44    default -> GUION_B ARROW instruccion COMA
Rule 45    return -> RETURN
Rule 46    return -> RETURN expresion
Rule 47    break -> BREAK
Rule 48    break -> BREAK expresion
Rule 49    continue -> CONTINUE
Rule 50    loop -> LOOP statement
Rule 51    while -> WHILE expresion statement
Rule 52    statement -> LLAVA instrucciones LLAVC
Rule 53    statement -> LLAVA LLAVC
Rule 54    tipo -> I64
Rule 55    tipo -> F64
Rule 56    tipo -> BOOL
Rule 57    tipo -> STRING
Rule 58    tipo -> STR
Rule 59    tipo -> CHAR
Rule 60    expresion -> MENOS expresion
Rule 61    expresion -> expresion MAS expresion
Rule 62    expresion -> expresion MENOS expresion
Rule 63    expresion -> expresion MULTI expresion
Rule 64    expresion -> expresion DIV expresion
Rule 65    expresion -> expresion MODULO expresion
Rule 66    expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
Rule 67    expresion -> PARA expresion PARC
Rule 68    expresion -> expresion IGUAL_IGUAL expresion
Rule 69    expresion -> expresion NO_IGUAL expresion
Rule 70    expresion -> expresion MAYOR expresion
Rule 71    expresion -> expresion MENOR expresion
Rule 72    expresion -> expresion MAYOR_IGUAL expresion
Rule 73    expresion -> expresion MENOR_IGUAL expresion
Rule 74    expresion -> expresion AND expresion
Rule 75    expresion -> expresion OR expresion
Rule 76    expresion -> NOT expresion
Rule 77    expresion -> ENTERO
Rule 78    expresion -> DECIMAL
Rule 79    expresion -> ID
Rule 80    expresion -> CADENA
Rule 81    expresion -> CARACTER
Rule 82    expresion -> TRUE
Rule 83    expresion -> FALSE
Rule 84    expresion -> expresion PUNTO TO_OWNED PARA PARC
Rule 85    expresion -> expresion PUNTO TO_STRING PARA PARC
Rule 86    expresion -> expresion PUNTO ABSOLUTO PARA PARC
Rule 87    expresion -> expresion PUNTO RAIZ PARA PARC
Rule 88    expresion -> expresion AS F64
Rule 89    expresion -> expresion AS I64

Terminals, with rules where they appear

ABSOLUTO             : 86
AND                  : 74
ARROW                : 37 38 39 40 43 44
AS                   : 88 89
BOOL                 : 56
BREAK                : 47 48
CADENA               : 14 15 80
CARACTER             : 81
CHAR                 : 59
COMA                 : 14 16 37 38 39 40 43 44 66
CONTINUE             : 49
DECIMAL              : 78
DIV                  : 64
DOS_PT               : 18 19 22 23 66 66
ELSE                 : 32 33
ENTERO               : 77
F64                  : 55 88
FALSE                : 83
GUION_B              : 43 44
I64                  : 54 66 89
ID                   : 18 19 20 21 22 23 24 25 26 79
IF                   : 31
IGUAL                : 18 20 22 24 26
IGUAL_IGUAL          : 68
LET                  : 18 19 20 21 22 23 24 25
LLAVA                : 36 52 53
LLAVC                : 36 52 53
LOOP                 : 50
MAS                  : 61
MATCH                : 35
MAYOR                : 70
MAYOR_IGUAL          : 72
MENOR                : 71
MENOR_IGUAL          : 73
MENOS                : 60 62
MODULO               : 65
MULTI                : 63
MUT                  : 18 19 20 21
NOT                  : 14 15 76
NO_IGUAL             : 69
OR                   : 75
PARA                 : 14 15 66 67 84 85 86 87
PARC                 : 14 15 66 67 84 85 86 87
POW                  : 66
PRINTLN              : 14 15
PT_COMA              : 4 5 9 10 11
PUNTO                : 84 85 86 87
RAIZ                 : 87
RETURN               : 45 46
SEP_MATCH            : 41
STR                  : 58
STRING               : 57
TO_OWNED             : 84
TO_STRING            : 85
TRUE                 : 82
WHILE                : 51
error                : 

Nonterminals, with rules where they appear

break                : 10
casos_match          : 35
continue             : 11
declaracion          : 5
default              : 36
expresion            : 8 16 17 27 31 35 41 42 46 48 51 60 61 61 62 62 63 63 64 64 65 65 66 66 67 68 68 69 69 70 70 71 71 72 72 73 73 74 74 75 75 76 84 85 86 87 88 89
inicio               : 0
instruccion          : 2 3 38 40 44
instrucciones        : 1 2 52
list_exp             : 14 16
lista_casos          : 36 37 38
lista_expresiones    : 37 38 39 40 41
loop                 : 12 30
match                : 7 29
prints               : 4
return               : 9
sent_else            : 31
sent_if              : 6 28 33
statement            : 31 32 37 39 43 50 51
tipo                 : 18 19 22 23
valores              : 18 20 22 24 26
while                : 13

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) instruccion -> . loop
    (13) instruccion -> . while
    (14) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (15) prints -> . PRINTLN NOT PARA CADENA PARC
    (18) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (19) declaracion -> . LET MUT ID DOS_PT tipo
    (20) declaracion -> . LET MUT ID IGUAL valores
    (21) declaracion -> . LET MUT ID
    (22) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (23) declaracion -> . LET ID DOS_PT tipo
    (24) declaracion -> . LET ID IGUAL valores
    (25) declaracion -> . LET ID
    (26) declaracion -> . ID IGUAL valores
    (31) sent_if -> . IF expresion statement sent_else
    (35) match -> . MATCH expresion casos_match
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64
    (45) return -> . RETURN
    (46) return -> . RETURN expresion
    (47) break -> . BREAK
    (48) break -> . BREAK expresion
    (49) continue -> . CONTINUE
    (50) loop -> . LOOP statement
    (51) while -> . WHILE expresion statement

    PRINTLN         shift and go to state 14
    LET             shift and go to state 18
    ID              shift and go to state 19
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    RETURN          shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    LOOP            shift and go to state 32
    WHILE           shift and go to state 33

    inicio                         shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) instruccion -> . loop
    (13) instruccion -> . while
    (14) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (15) prints -> . PRINTLN NOT PARA CADENA PARC
    (18) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (19) declaracion -> . LET MUT ID DOS_PT tipo
    (20) declaracion -> . LET MUT ID IGUAL valores
    (21) declaracion -> . LET MUT ID
    (22) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (23) declaracion -> . LET ID DOS_PT tipo
    (24) declaracion -> . LET ID IGUAL valores
    (25) declaracion -> . LET ID
    (26) declaracion -> . ID IGUAL valores
    (31) sent_if -> . IF expresion statement sent_else
    (35) match -> . MATCH expresion casos_match
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64
    (45) return -> . RETURN
    (46) return -> . RETURN expresion
    (47) break -> . BREAK
    (48) break -> . BREAK expresion
    (49) continue -> . CONTINUE
    (50) loop -> . LOOP statement
    (51) while -> . WHILE expresion statement

    $end            reduce using rule 1 (inicio -> instrucciones .)
    PRINTLN         shift and go to state 14
    LET             shift and go to state 18
    ID              shift and go to state 19
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    RETURN          shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    LOOP            shift and go to state 32
    WHILE           shift and go to state 33

    instruccion                    shift and go to state 34
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13

state 3

    (3) instrucciones -> instruccion .

    PRINTLN         reduce using rule 3 (instrucciones -> instruccion .)
    LET             reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    MATCH           reduce using rule 3 (instrucciones -> instruccion .)
    MENOS           reduce using rule 3 (instrucciones -> instruccion .)
    I64             reduce using rule 3 (instrucciones -> instruccion .)
    PARA            reduce using rule 3 (instrucciones -> instruccion .)
    NOT             reduce using rule 3 (instrucciones -> instruccion .)
    ENTERO          reduce using rule 3 (instrucciones -> instruccion .)
    DECIMAL         reduce using rule 3 (instrucciones -> instruccion .)
    CADENA          reduce using rule 3 (instrucciones -> instruccion .)
    CARACTER        reduce using rule 3 (instrucciones -> instruccion .)
    TRUE            reduce using rule 3 (instrucciones -> instruccion .)
    FALSE           reduce using rule 3 (instrucciones -> instruccion .)
    RETURN          reduce using rule 3 (instrucciones -> instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instruccion .)
    LOOP            reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVC           reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> prints . PT_COMA

    PT_COMA         shift and go to state 35


state 5

    (5) instruccion -> declaracion . PT_COMA

    PT_COMA         shift and go to state 36


state 6

    (6) instruccion -> sent_if .

    PRINTLN         reduce using rule 6 (instruccion -> sent_if .)
    LET             reduce using rule 6 (instruccion -> sent_if .)
    ID              reduce using rule 6 (instruccion -> sent_if .)
    IF              reduce using rule 6 (instruccion -> sent_if .)
    MATCH           reduce using rule 6 (instruccion -> sent_if .)
    MENOS           reduce using rule 6 (instruccion -> sent_if .)
    I64             reduce using rule 6 (instruccion -> sent_if .)
    PARA            reduce using rule 6 (instruccion -> sent_if .)
    NOT             reduce using rule 6 (instruccion -> sent_if .)
    ENTERO          reduce using rule 6 (instruccion -> sent_if .)
    DECIMAL         reduce using rule 6 (instruccion -> sent_if .)
    CADENA          reduce using rule 6 (instruccion -> sent_if .)
    CARACTER        reduce using rule 6 (instruccion -> sent_if .)
    TRUE            reduce using rule 6 (instruccion -> sent_if .)
    FALSE           reduce using rule 6 (instruccion -> sent_if .)
    RETURN          reduce using rule 6 (instruccion -> sent_if .)
    BREAK           reduce using rule 6 (instruccion -> sent_if .)
    CONTINUE        reduce using rule 6 (instruccion -> sent_if .)
    LOOP            reduce using rule 6 (instruccion -> sent_if .)
    WHILE           reduce using rule 6 (instruccion -> sent_if .)
    $end            reduce using rule 6 (instruccion -> sent_if .)
    LLAVC           reduce using rule 6 (instruccion -> sent_if .)
    COMA            reduce using rule 6 (instruccion -> sent_if .)


state 7

    (7) instruccion -> match .

    PRINTLN         reduce using rule 7 (instruccion -> match .)
    LET             reduce using rule 7 (instruccion -> match .)
    ID              reduce using rule 7 (instruccion -> match .)
    IF              reduce using rule 7 (instruccion -> match .)
    MATCH           reduce using rule 7 (instruccion -> match .)
    MENOS           reduce using rule 7 (instruccion -> match .)
    I64             reduce using rule 7 (instruccion -> match .)
    PARA            reduce using rule 7 (instruccion -> match .)
    NOT             reduce using rule 7 (instruccion -> match .)
    ENTERO          reduce using rule 7 (instruccion -> match .)
    DECIMAL         reduce using rule 7 (instruccion -> match .)
    CADENA          reduce using rule 7 (instruccion -> match .)
    CARACTER        reduce using rule 7 (instruccion -> match .)
    TRUE            reduce using rule 7 (instruccion -> match .)
    FALSE           reduce using rule 7 (instruccion -> match .)
    RETURN          reduce using rule 7 (instruccion -> match .)
    BREAK           reduce using rule 7 (instruccion -> match .)
    CONTINUE        reduce using rule 7 (instruccion -> match .)
    LOOP            reduce using rule 7 (instruccion -> match .)
    WHILE           reduce using rule 7 (instruccion -> match .)
    $end            reduce using rule 7 (instruccion -> match .)
    LLAVC           reduce using rule 7 (instruccion -> match .)
    COMA            reduce using rule 7 (instruccion -> match .)


state 8

    (8) instruccion -> expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

  ! shift/reduce conflict for MENOS resolved as shift
    PRINTLN         reduce using rule 8 (instruccion -> expresion .)
    LET             reduce using rule 8 (instruccion -> expresion .)
    ID              reduce using rule 8 (instruccion -> expresion .)
    IF              reduce using rule 8 (instruccion -> expresion .)
    MATCH           reduce using rule 8 (instruccion -> expresion .)
    I64             reduce using rule 8 (instruccion -> expresion .)
    PARA            reduce using rule 8 (instruccion -> expresion .)
    NOT             reduce using rule 8 (instruccion -> expresion .)
    ENTERO          reduce using rule 8 (instruccion -> expresion .)
    DECIMAL         reduce using rule 8 (instruccion -> expresion .)
    CADENA          reduce using rule 8 (instruccion -> expresion .)
    CARACTER        reduce using rule 8 (instruccion -> expresion .)
    TRUE            reduce using rule 8 (instruccion -> expresion .)
    FALSE           reduce using rule 8 (instruccion -> expresion .)
    RETURN          reduce using rule 8 (instruccion -> expresion .)
    BREAK           reduce using rule 8 (instruccion -> expresion .)
    CONTINUE        reduce using rule 8 (instruccion -> expresion .)
    LOOP            reduce using rule 8 (instruccion -> expresion .)
    WHILE           reduce using rule 8 (instruccion -> expresion .)
    $end            reduce using rule 8 (instruccion -> expresion .)
    LLAVC           reduce using rule 8 (instruccion -> expresion .)
    COMA            reduce using rule 8 (instruccion -> expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    IGUAL_IGUAL     shift and go to state 42
    NO_IGUAL        shift and go to state 43
    MAYOR           shift and go to state 44
    MENOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR_IGUAL     shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    PUNTO           shift and go to state 50
    AS              shift and go to state 51

  ! MENOS           [ reduce using rule 8 (instruccion -> expresion .) ]


state 9

    (9) instruccion -> return . PT_COMA

    PT_COMA         shift and go to state 52


state 10

    (10) instruccion -> break . PT_COMA

    PT_COMA         shift and go to state 53


state 11

    (11) instruccion -> continue . PT_COMA

    PT_COMA         shift and go to state 54


state 12

    (12) instruccion -> loop .

    PRINTLN         reduce using rule 12 (instruccion -> loop .)
    LET             reduce using rule 12 (instruccion -> loop .)
    ID              reduce using rule 12 (instruccion -> loop .)
    IF              reduce using rule 12 (instruccion -> loop .)
    MATCH           reduce using rule 12 (instruccion -> loop .)
    MENOS           reduce using rule 12 (instruccion -> loop .)
    I64             reduce using rule 12 (instruccion -> loop .)
    PARA            reduce using rule 12 (instruccion -> loop .)
    NOT             reduce using rule 12 (instruccion -> loop .)
    ENTERO          reduce using rule 12 (instruccion -> loop .)
    DECIMAL         reduce using rule 12 (instruccion -> loop .)
    CADENA          reduce using rule 12 (instruccion -> loop .)
    CARACTER        reduce using rule 12 (instruccion -> loop .)
    TRUE            reduce using rule 12 (instruccion -> loop .)
    FALSE           reduce using rule 12 (instruccion -> loop .)
    RETURN          reduce using rule 12 (instruccion -> loop .)
    BREAK           reduce using rule 12 (instruccion -> loop .)
    CONTINUE        reduce using rule 12 (instruccion -> loop .)
    LOOP            reduce using rule 12 (instruccion -> loop .)
    WHILE           reduce using rule 12 (instruccion -> loop .)
    $end            reduce using rule 12 (instruccion -> loop .)
    LLAVC           reduce using rule 12 (instruccion -> loop .)
    COMA            reduce using rule 12 (instruccion -> loop .)


state 13

    (13) instruccion -> while .

    PRINTLN         reduce using rule 13 (instruccion -> while .)
    LET             reduce using rule 13 (instruccion -> while .)
    ID              reduce using rule 13 (instruccion -> while .)
    IF              reduce using rule 13 (instruccion -> while .)
    MATCH           reduce using rule 13 (instruccion -> while .)
    MENOS           reduce using rule 13 (instruccion -> while .)
    I64             reduce using rule 13 (instruccion -> while .)
    PARA            reduce using rule 13 (instruccion -> while .)
    NOT             reduce using rule 13 (instruccion -> while .)
    ENTERO          reduce using rule 13 (instruccion -> while .)
    DECIMAL         reduce using rule 13 (instruccion -> while .)
    CADENA          reduce using rule 13 (instruccion -> while .)
    CARACTER        reduce using rule 13 (instruccion -> while .)
    TRUE            reduce using rule 13 (instruccion -> while .)
    FALSE           reduce using rule 13 (instruccion -> while .)
    RETURN          reduce using rule 13 (instruccion -> while .)
    BREAK           reduce using rule 13 (instruccion -> while .)
    CONTINUE        reduce using rule 13 (instruccion -> while .)
    LOOP            reduce using rule 13 (instruccion -> while .)
    WHILE           reduce using rule 13 (instruccion -> while .)
    $end            reduce using rule 13 (instruccion -> while .)
    LLAVC           reduce using rule 13 (instruccion -> while .)
    COMA            reduce using rule 13 (instruccion -> while .)


state 14

    (14) prints -> PRINTLN . NOT PARA CADENA COMA list_exp PARC
    (15) prints -> PRINTLN . NOT PARA CADENA PARC

    NOT             shift and go to state 55


state 15

    (76) expresion -> NOT . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 56

state 16

    (67) expresion -> PARA . expresion PARC
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 58

state 17

    (80) expresion -> CADENA .

    MAS             reduce using rule 80 (expresion -> CADENA .)
    MENOS           reduce using rule 80 (expresion -> CADENA .)
    MULTI           reduce using rule 80 (expresion -> CADENA .)
    DIV             reduce using rule 80 (expresion -> CADENA .)
    MODULO          reduce using rule 80 (expresion -> CADENA .)
    IGUAL_IGUAL     reduce using rule 80 (expresion -> CADENA .)
    NO_IGUAL        reduce using rule 80 (expresion -> CADENA .)
    MAYOR           reduce using rule 80 (expresion -> CADENA .)
    MENOR           reduce using rule 80 (expresion -> CADENA .)
    MAYOR_IGUAL     reduce using rule 80 (expresion -> CADENA .)
    MENOR_IGUAL     reduce using rule 80 (expresion -> CADENA .)
    AND             reduce using rule 80 (expresion -> CADENA .)
    OR              reduce using rule 80 (expresion -> CADENA .)
    PUNTO           reduce using rule 80 (expresion -> CADENA .)
    AS              reduce using rule 80 (expresion -> CADENA .)
    PRINTLN         reduce using rule 80 (expresion -> CADENA .)
    LET             reduce using rule 80 (expresion -> CADENA .)
    ID              reduce using rule 80 (expresion -> CADENA .)
    IF              reduce using rule 80 (expresion -> CADENA .)
    MATCH           reduce using rule 80 (expresion -> CADENA .)
    I64             reduce using rule 80 (expresion -> CADENA .)
    PARA            reduce using rule 80 (expresion -> CADENA .)
    NOT             reduce using rule 80 (expresion -> CADENA .)
    ENTERO          reduce using rule 80 (expresion -> CADENA .)
    DECIMAL         reduce using rule 80 (expresion -> CADENA .)
    CADENA          reduce using rule 80 (expresion -> CADENA .)
    CARACTER        reduce using rule 80 (expresion -> CADENA .)
    TRUE            reduce using rule 80 (expresion -> CADENA .)
    FALSE           reduce using rule 80 (expresion -> CADENA .)
    RETURN          reduce using rule 80 (expresion -> CADENA .)
    BREAK           reduce using rule 80 (expresion -> CADENA .)
    CONTINUE        reduce using rule 80 (expresion -> CADENA .)
    LOOP            reduce using rule 80 (expresion -> CADENA .)
    WHILE           reduce using rule 80 (expresion -> CADENA .)
    $end            reduce using rule 80 (expresion -> CADENA .)
    PARC            reduce using rule 80 (expresion -> CADENA .)
    LLAVA           reduce using rule 80 (expresion -> CADENA .)
    PT_COMA         reduce using rule 80 (expresion -> CADENA .)
    LLAVC           reduce using rule 80 (expresion -> CADENA .)
    ARROW           reduce using rule 80 (expresion -> CADENA .)
    SEP_MATCH       reduce using rule 80 (expresion -> CADENA .)
    COMA            reduce using rule 80 (expresion -> CADENA .)


state 18

    (18) declaracion -> LET . MUT ID DOS_PT tipo IGUAL valores
    (19) declaracion -> LET . MUT ID DOS_PT tipo
    (20) declaracion -> LET . MUT ID IGUAL valores
    (21) declaracion -> LET . MUT ID
    (22) declaracion -> LET . ID DOS_PT tipo IGUAL valores
    (23) declaracion -> LET . ID DOS_PT tipo
    (24) declaracion -> LET . ID IGUAL valores
    (25) declaracion -> LET . ID

    MUT             shift and go to state 59
    ID              shift and go to state 60


state 19

    (26) declaracion -> ID . IGUAL valores
    (79) expresion -> ID .

    IGUAL           shift and go to state 61
    MAS             reduce using rule 79 (expresion -> ID .)
    MENOS           reduce using rule 79 (expresion -> ID .)
    MULTI           reduce using rule 79 (expresion -> ID .)
    DIV             reduce using rule 79 (expresion -> ID .)
    MODULO          reduce using rule 79 (expresion -> ID .)
    IGUAL_IGUAL     reduce using rule 79 (expresion -> ID .)
    NO_IGUAL        reduce using rule 79 (expresion -> ID .)
    MAYOR           reduce using rule 79 (expresion -> ID .)
    MENOR           reduce using rule 79 (expresion -> ID .)
    MAYOR_IGUAL     reduce using rule 79 (expresion -> ID .)
    MENOR_IGUAL     reduce using rule 79 (expresion -> ID .)
    AND             reduce using rule 79 (expresion -> ID .)
    OR              reduce using rule 79 (expresion -> ID .)
    PUNTO           reduce using rule 79 (expresion -> ID .)
    AS              reduce using rule 79 (expresion -> ID .)
    PRINTLN         reduce using rule 79 (expresion -> ID .)
    LET             reduce using rule 79 (expresion -> ID .)
    ID              reduce using rule 79 (expresion -> ID .)
    IF              reduce using rule 79 (expresion -> ID .)
    MATCH           reduce using rule 79 (expresion -> ID .)
    I64             reduce using rule 79 (expresion -> ID .)
    PARA            reduce using rule 79 (expresion -> ID .)
    NOT             reduce using rule 79 (expresion -> ID .)
    ENTERO          reduce using rule 79 (expresion -> ID .)
    DECIMAL         reduce using rule 79 (expresion -> ID .)
    CADENA          reduce using rule 79 (expresion -> ID .)
    CARACTER        reduce using rule 79 (expresion -> ID .)
    TRUE            reduce using rule 79 (expresion -> ID .)
    FALSE           reduce using rule 79 (expresion -> ID .)
    RETURN          reduce using rule 79 (expresion -> ID .)
    BREAK           reduce using rule 79 (expresion -> ID .)
    CONTINUE        reduce using rule 79 (expresion -> ID .)
    LOOP            reduce using rule 79 (expresion -> ID .)
    WHILE           reduce using rule 79 (expresion -> ID .)
    $end            reduce using rule 79 (expresion -> ID .)
    LLAVC           reduce using rule 79 (expresion -> ID .)
    COMA            reduce using rule 79 (expresion -> ID .)


state 20

    (31) sent_if -> IF . expresion statement sent_else
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 62

state 21

    (35) match -> MATCH . expresion casos_match
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 63

state 22

    (60) expresion -> MENOS . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 64

state 23

    (66) expresion -> I64 . DOS_PT DOS_PT POW PARA expresion COMA expresion PARC

    DOS_PT          shift and go to state 65


state 24

    (77) expresion -> ENTERO .

    MAS             reduce using rule 77 (expresion -> ENTERO .)
    MENOS           reduce using rule 77 (expresion -> ENTERO .)
    MULTI           reduce using rule 77 (expresion -> ENTERO .)
    DIV             reduce using rule 77 (expresion -> ENTERO .)
    MODULO          reduce using rule 77 (expresion -> ENTERO .)
    IGUAL_IGUAL     reduce using rule 77 (expresion -> ENTERO .)
    NO_IGUAL        reduce using rule 77 (expresion -> ENTERO .)
    MAYOR           reduce using rule 77 (expresion -> ENTERO .)
    MENOR           reduce using rule 77 (expresion -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 77 (expresion -> ENTERO .)
    MENOR_IGUAL     reduce using rule 77 (expresion -> ENTERO .)
    AND             reduce using rule 77 (expresion -> ENTERO .)
    OR              reduce using rule 77 (expresion -> ENTERO .)
    PUNTO           reduce using rule 77 (expresion -> ENTERO .)
    AS              reduce using rule 77 (expresion -> ENTERO .)
    PRINTLN         reduce using rule 77 (expresion -> ENTERO .)
    LET             reduce using rule 77 (expresion -> ENTERO .)
    ID              reduce using rule 77 (expresion -> ENTERO .)
    IF              reduce using rule 77 (expresion -> ENTERO .)
    MATCH           reduce using rule 77 (expresion -> ENTERO .)
    I64             reduce using rule 77 (expresion -> ENTERO .)
    PARA            reduce using rule 77 (expresion -> ENTERO .)
    NOT             reduce using rule 77 (expresion -> ENTERO .)
    ENTERO          reduce using rule 77 (expresion -> ENTERO .)
    DECIMAL         reduce using rule 77 (expresion -> ENTERO .)
    CADENA          reduce using rule 77 (expresion -> ENTERO .)
    CARACTER        reduce using rule 77 (expresion -> ENTERO .)
    TRUE            reduce using rule 77 (expresion -> ENTERO .)
    FALSE           reduce using rule 77 (expresion -> ENTERO .)
    RETURN          reduce using rule 77 (expresion -> ENTERO .)
    BREAK           reduce using rule 77 (expresion -> ENTERO .)
    CONTINUE        reduce using rule 77 (expresion -> ENTERO .)
    LOOP            reduce using rule 77 (expresion -> ENTERO .)
    WHILE           reduce using rule 77 (expresion -> ENTERO .)
    $end            reduce using rule 77 (expresion -> ENTERO .)
    PARC            reduce using rule 77 (expresion -> ENTERO .)
    LLAVA           reduce using rule 77 (expresion -> ENTERO .)
    PT_COMA         reduce using rule 77 (expresion -> ENTERO .)
    LLAVC           reduce using rule 77 (expresion -> ENTERO .)
    ARROW           reduce using rule 77 (expresion -> ENTERO .)
    SEP_MATCH       reduce using rule 77 (expresion -> ENTERO .)
    COMA            reduce using rule 77 (expresion -> ENTERO .)


state 25

    (78) expresion -> DECIMAL .

    MAS             reduce using rule 78 (expresion -> DECIMAL .)
    MENOS           reduce using rule 78 (expresion -> DECIMAL .)
    MULTI           reduce using rule 78 (expresion -> DECIMAL .)
    DIV             reduce using rule 78 (expresion -> DECIMAL .)
    MODULO          reduce using rule 78 (expresion -> DECIMAL .)
    IGUAL_IGUAL     reduce using rule 78 (expresion -> DECIMAL .)
    NO_IGUAL        reduce using rule 78 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 78 (expresion -> DECIMAL .)
    MENOR           reduce using rule 78 (expresion -> DECIMAL .)
    MAYOR_IGUAL     reduce using rule 78 (expresion -> DECIMAL .)
    MENOR_IGUAL     reduce using rule 78 (expresion -> DECIMAL .)
    AND             reduce using rule 78 (expresion -> DECIMAL .)
    OR              reduce using rule 78 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 78 (expresion -> DECIMAL .)
    AS              reduce using rule 78 (expresion -> DECIMAL .)
    PRINTLN         reduce using rule 78 (expresion -> DECIMAL .)
    LET             reduce using rule 78 (expresion -> DECIMAL .)
    ID              reduce using rule 78 (expresion -> DECIMAL .)
    IF              reduce using rule 78 (expresion -> DECIMAL .)
    MATCH           reduce using rule 78 (expresion -> DECIMAL .)
    I64             reduce using rule 78 (expresion -> DECIMAL .)
    PARA            reduce using rule 78 (expresion -> DECIMAL .)
    NOT             reduce using rule 78 (expresion -> DECIMAL .)
    ENTERO          reduce using rule 78 (expresion -> DECIMAL .)
    DECIMAL         reduce using rule 78 (expresion -> DECIMAL .)
    CADENA          reduce using rule 78 (expresion -> DECIMAL .)
    CARACTER        reduce using rule 78 (expresion -> DECIMAL .)
    TRUE            reduce using rule 78 (expresion -> DECIMAL .)
    FALSE           reduce using rule 78 (expresion -> DECIMAL .)
    RETURN          reduce using rule 78 (expresion -> DECIMAL .)
    BREAK           reduce using rule 78 (expresion -> DECIMAL .)
    CONTINUE        reduce using rule 78 (expresion -> DECIMAL .)
    LOOP            reduce using rule 78 (expresion -> DECIMAL .)
    WHILE           reduce using rule 78 (expresion -> DECIMAL .)
    $end            reduce using rule 78 (expresion -> DECIMAL .)
    PARC            reduce using rule 78 (expresion -> DECIMAL .)
    LLAVA           reduce using rule 78 (expresion -> DECIMAL .)
    PT_COMA         reduce using rule 78 (expresion -> DECIMAL .)
    LLAVC           reduce using rule 78 (expresion -> DECIMAL .)
    ARROW           reduce using rule 78 (expresion -> DECIMAL .)
    SEP_MATCH       reduce using rule 78 (expresion -> DECIMAL .)
    COMA            reduce using rule 78 (expresion -> DECIMAL .)


state 26

    (81) expresion -> CARACTER .

    MAS             reduce using rule 81 (expresion -> CARACTER .)
    MENOS           reduce using rule 81 (expresion -> CARACTER .)
    MULTI           reduce using rule 81 (expresion -> CARACTER .)
    DIV             reduce using rule 81 (expresion -> CARACTER .)
    MODULO          reduce using rule 81 (expresion -> CARACTER .)
    IGUAL_IGUAL     reduce using rule 81 (expresion -> CARACTER .)
    NO_IGUAL        reduce using rule 81 (expresion -> CARACTER .)
    MAYOR           reduce using rule 81 (expresion -> CARACTER .)
    MENOR           reduce using rule 81 (expresion -> CARACTER .)
    MAYOR_IGUAL     reduce using rule 81 (expresion -> CARACTER .)
    MENOR_IGUAL     reduce using rule 81 (expresion -> CARACTER .)
    AND             reduce using rule 81 (expresion -> CARACTER .)
    OR              reduce using rule 81 (expresion -> CARACTER .)
    PUNTO           reduce using rule 81 (expresion -> CARACTER .)
    AS              reduce using rule 81 (expresion -> CARACTER .)
    PRINTLN         reduce using rule 81 (expresion -> CARACTER .)
    LET             reduce using rule 81 (expresion -> CARACTER .)
    ID              reduce using rule 81 (expresion -> CARACTER .)
    IF              reduce using rule 81 (expresion -> CARACTER .)
    MATCH           reduce using rule 81 (expresion -> CARACTER .)
    I64             reduce using rule 81 (expresion -> CARACTER .)
    PARA            reduce using rule 81 (expresion -> CARACTER .)
    NOT             reduce using rule 81 (expresion -> CARACTER .)
    ENTERO          reduce using rule 81 (expresion -> CARACTER .)
    DECIMAL         reduce using rule 81 (expresion -> CARACTER .)
    CADENA          reduce using rule 81 (expresion -> CARACTER .)
    CARACTER        reduce using rule 81 (expresion -> CARACTER .)
    TRUE            reduce using rule 81 (expresion -> CARACTER .)
    FALSE           reduce using rule 81 (expresion -> CARACTER .)
    RETURN          reduce using rule 81 (expresion -> CARACTER .)
    BREAK           reduce using rule 81 (expresion -> CARACTER .)
    CONTINUE        reduce using rule 81 (expresion -> CARACTER .)
    LOOP            reduce using rule 81 (expresion -> CARACTER .)
    WHILE           reduce using rule 81 (expresion -> CARACTER .)
    $end            reduce using rule 81 (expresion -> CARACTER .)
    PARC            reduce using rule 81 (expresion -> CARACTER .)
    LLAVA           reduce using rule 81 (expresion -> CARACTER .)
    PT_COMA         reduce using rule 81 (expresion -> CARACTER .)
    LLAVC           reduce using rule 81 (expresion -> CARACTER .)
    ARROW           reduce using rule 81 (expresion -> CARACTER .)
    SEP_MATCH       reduce using rule 81 (expresion -> CARACTER .)
    COMA            reduce using rule 81 (expresion -> CARACTER .)


state 27

    (82) expresion -> TRUE .

    MAS             reduce using rule 82 (expresion -> TRUE .)
    MENOS           reduce using rule 82 (expresion -> TRUE .)
    MULTI           reduce using rule 82 (expresion -> TRUE .)
    DIV             reduce using rule 82 (expresion -> TRUE .)
    MODULO          reduce using rule 82 (expresion -> TRUE .)
    IGUAL_IGUAL     reduce using rule 82 (expresion -> TRUE .)
    NO_IGUAL        reduce using rule 82 (expresion -> TRUE .)
    MAYOR           reduce using rule 82 (expresion -> TRUE .)
    MENOR           reduce using rule 82 (expresion -> TRUE .)
    MAYOR_IGUAL     reduce using rule 82 (expresion -> TRUE .)
    MENOR_IGUAL     reduce using rule 82 (expresion -> TRUE .)
    AND             reduce using rule 82 (expresion -> TRUE .)
    OR              reduce using rule 82 (expresion -> TRUE .)
    PUNTO           reduce using rule 82 (expresion -> TRUE .)
    AS              reduce using rule 82 (expresion -> TRUE .)
    PRINTLN         reduce using rule 82 (expresion -> TRUE .)
    LET             reduce using rule 82 (expresion -> TRUE .)
    ID              reduce using rule 82 (expresion -> TRUE .)
    IF              reduce using rule 82 (expresion -> TRUE .)
    MATCH           reduce using rule 82 (expresion -> TRUE .)
    I64             reduce using rule 82 (expresion -> TRUE .)
    PARA            reduce using rule 82 (expresion -> TRUE .)
    NOT             reduce using rule 82 (expresion -> TRUE .)
    ENTERO          reduce using rule 82 (expresion -> TRUE .)
    DECIMAL         reduce using rule 82 (expresion -> TRUE .)
    CADENA          reduce using rule 82 (expresion -> TRUE .)
    CARACTER        reduce using rule 82 (expresion -> TRUE .)
    TRUE            reduce using rule 82 (expresion -> TRUE .)
    FALSE           reduce using rule 82 (expresion -> TRUE .)
    RETURN          reduce using rule 82 (expresion -> TRUE .)
    BREAK           reduce using rule 82 (expresion -> TRUE .)
    CONTINUE        reduce using rule 82 (expresion -> TRUE .)
    LOOP            reduce using rule 82 (expresion -> TRUE .)
    WHILE           reduce using rule 82 (expresion -> TRUE .)
    $end            reduce using rule 82 (expresion -> TRUE .)
    PARC            reduce using rule 82 (expresion -> TRUE .)
    LLAVA           reduce using rule 82 (expresion -> TRUE .)
    PT_COMA         reduce using rule 82 (expresion -> TRUE .)
    LLAVC           reduce using rule 82 (expresion -> TRUE .)
    ARROW           reduce using rule 82 (expresion -> TRUE .)
    SEP_MATCH       reduce using rule 82 (expresion -> TRUE .)
    COMA            reduce using rule 82 (expresion -> TRUE .)


state 28

    (83) expresion -> FALSE .

    MAS             reduce using rule 83 (expresion -> FALSE .)
    MENOS           reduce using rule 83 (expresion -> FALSE .)
    MULTI           reduce using rule 83 (expresion -> FALSE .)
    DIV             reduce using rule 83 (expresion -> FALSE .)
    MODULO          reduce using rule 83 (expresion -> FALSE .)
    IGUAL_IGUAL     reduce using rule 83 (expresion -> FALSE .)
    NO_IGUAL        reduce using rule 83 (expresion -> FALSE .)
    MAYOR           reduce using rule 83 (expresion -> FALSE .)
    MENOR           reduce using rule 83 (expresion -> FALSE .)
    MAYOR_IGUAL     reduce using rule 83 (expresion -> FALSE .)
    MENOR_IGUAL     reduce using rule 83 (expresion -> FALSE .)
    AND             reduce using rule 83 (expresion -> FALSE .)
    OR              reduce using rule 83 (expresion -> FALSE .)
    PUNTO           reduce using rule 83 (expresion -> FALSE .)
    AS              reduce using rule 83 (expresion -> FALSE .)
    PRINTLN         reduce using rule 83 (expresion -> FALSE .)
    LET             reduce using rule 83 (expresion -> FALSE .)
    ID              reduce using rule 83 (expresion -> FALSE .)
    IF              reduce using rule 83 (expresion -> FALSE .)
    MATCH           reduce using rule 83 (expresion -> FALSE .)
    I64             reduce using rule 83 (expresion -> FALSE .)
    PARA            reduce using rule 83 (expresion -> FALSE .)
    NOT             reduce using rule 83 (expresion -> FALSE .)
    ENTERO          reduce using rule 83 (expresion -> FALSE .)
    DECIMAL         reduce using rule 83 (expresion -> FALSE .)
    CADENA          reduce using rule 83 (expresion -> FALSE .)
    CARACTER        reduce using rule 83 (expresion -> FALSE .)
    TRUE            reduce using rule 83 (expresion -> FALSE .)
    FALSE           reduce using rule 83 (expresion -> FALSE .)
    RETURN          reduce using rule 83 (expresion -> FALSE .)
    BREAK           reduce using rule 83 (expresion -> FALSE .)
    CONTINUE        reduce using rule 83 (expresion -> FALSE .)
    LOOP            reduce using rule 83 (expresion -> FALSE .)
    WHILE           reduce using rule 83 (expresion -> FALSE .)
    $end            reduce using rule 83 (expresion -> FALSE .)
    PARC            reduce using rule 83 (expresion -> FALSE .)
    LLAVA           reduce using rule 83 (expresion -> FALSE .)
    PT_COMA         reduce using rule 83 (expresion -> FALSE .)
    LLAVC           reduce using rule 83 (expresion -> FALSE .)
    ARROW           reduce using rule 83 (expresion -> FALSE .)
    SEP_MATCH       reduce using rule 83 (expresion -> FALSE .)
    COMA            reduce using rule 83 (expresion -> FALSE .)


state 29

    (45) return -> RETURN .
    (46) return -> RETURN . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    PT_COMA         reduce using rule 45 (return -> RETURN .)
    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 66

state 30

    (47) break -> BREAK .
    (48) break -> BREAK . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    PT_COMA         reduce using rule 47 (break -> BREAK .)
    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 67

state 31

    (49) continue -> CONTINUE .

    PT_COMA         reduce using rule 49 (continue -> CONTINUE .)


state 32

    (50) loop -> LOOP . statement
    (52) statement -> . LLAVA instrucciones LLAVC
    (53) statement -> . LLAVA LLAVC

    LLAVA           shift and go to state 69

    statement                      shift and go to state 68

state 33

    (51) while -> WHILE . expresion statement
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 70

state 34

    (2) instrucciones -> instrucciones instruccion .

    PRINTLN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MATCH           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MENOS           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    I64             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PARA            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NOT             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ENTERO          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DECIMAL         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CADENA          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CARACTER        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    TRUE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FALSE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LOOP            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVC           reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 35

    (4) instruccion -> prints PT_COMA .

    PRINTLN         reduce using rule 4 (instruccion -> prints PT_COMA .)
    LET             reduce using rule 4 (instruccion -> prints PT_COMA .)
    ID              reduce using rule 4 (instruccion -> prints PT_COMA .)
    IF              reduce using rule 4 (instruccion -> prints PT_COMA .)
    MATCH           reduce using rule 4 (instruccion -> prints PT_COMA .)
    MENOS           reduce using rule 4 (instruccion -> prints PT_COMA .)
    I64             reduce using rule 4 (instruccion -> prints PT_COMA .)
    PARA            reduce using rule 4 (instruccion -> prints PT_COMA .)
    NOT             reduce using rule 4 (instruccion -> prints PT_COMA .)
    ENTERO          reduce using rule 4 (instruccion -> prints PT_COMA .)
    DECIMAL         reduce using rule 4 (instruccion -> prints PT_COMA .)
    CADENA          reduce using rule 4 (instruccion -> prints PT_COMA .)
    CARACTER        reduce using rule 4 (instruccion -> prints PT_COMA .)
    TRUE            reduce using rule 4 (instruccion -> prints PT_COMA .)
    FALSE           reduce using rule 4 (instruccion -> prints PT_COMA .)
    RETURN          reduce using rule 4 (instruccion -> prints PT_COMA .)
    BREAK           reduce using rule 4 (instruccion -> prints PT_COMA .)
    CONTINUE        reduce using rule 4 (instruccion -> prints PT_COMA .)
    LOOP            reduce using rule 4 (instruccion -> prints PT_COMA .)
    WHILE           reduce using rule 4 (instruccion -> prints PT_COMA .)
    $end            reduce using rule 4 (instruccion -> prints PT_COMA .)
    LLAVC           reduce using rule 4 (instruccion -> prints PT_COMA .)
    COMA            reduce using rule 4 (instruccion -> prints PT_COMA .)


state 36

    (5) instruccion -> declaracion PT_COMA .

    PRINTLN         reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    LET             reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    ID              reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    IF              reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    MATCH           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    MENOS           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    I64             reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    PARA            reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    NOT             reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    ENTERO          reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    DECIMAL         reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    CADENA          reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    CARACTER        reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    TRUE            reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    FALSE           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    RETURN          reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    BREAK           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    CONTINUE        reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    LOOP            reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    WHILE           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    $end            reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    LLAVC           reduce using rule 5 (instruccion -> declaracion PT_COMA .)
    COMA            reduce using rule 5 (instruccion -> declaracion PT_COMA .)


state 37

    (61) expresion -> expresion MAS . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 71

state 38

    (62) expresion -> expresion MENOS . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 72

state 39

    (63) expresion -> expresion MULTI . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 73

state 40

    (64) expresion -> expresion DIV . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 74

state 41

    (65) expresion -> expresion MODULO . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 75

state 42

    (68) expresion -> expresion IGUAL_IGUAL . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 76

state 43

    (69) expresion -> expresion NO_IGUAL . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 77

state 44

    (70) expresion -> expresion MAYOR . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 78

state 45

    (71) expresion -> expresion MENOR . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 79

state 46

    (72) expresion -> expresion MAYOR_IGUAL . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 80

state 47

    (73) expresion -> expresion MENOR_IGUAL . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 81

state 48

    (74) expresion -> expresion AND . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 82

state 49

    (75) expresion -> expresion OR . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 83

state 50

    (84) expresion -> expresion PUNTO . TO_OWNED PARA PARC
    (85) expresion -> expresion PUNTO . TO_STRING PARA PARC
    (86) expresion -> expresion PUNTO . ABSOLUTO PARA PARC
    (87) expresion -> expresion PUNTO . RAIZ PARA PARC

    TO_OWNED        shift and go to state 84
    TO_STRING       shift and go to state 85
    ABSOLUTO        shift and go to state 86
    RAIZ            shift and go to state 87


state 51

    (88) expresion -> expresion AS . F64
    (89) expresion -> expresion AS . I64

    F64             shift and go to state 88
    I64             shift and go to state 89


state 52

    (9) instruccion -> return PT_COMA .

    PRINTLN         reduce using rule 9 (instruccion -> return PT_COMA .)
    LET             reduce using rule 9 (instruccion -> return PT_COMA .)
    ID              reduce using rule 9 (instruccion -> return PT_COMA .)
    IF              reduce using rule 9 (instruccion -> return PT_COMA .)
    MATCH           reduce using rule 9 (instruccion -> return PT_COMA .)
    MENOS           reduce using rule 9 (instruccion -> return PT_COMA .)
    I64             reduce using rule 9 (instruccion -> return PT_COMA .)
    PARA            reduce using rule 9 (instruccion -> return PT_COMA .)
    NOT             reduce using rule 9 (instruccion -> return PT_COMA .)
    ENTERO          reduce using rule 9 (instruccion -> return PT_COMA .)
    DECIMAL         reduce using rule 9 (instruccion -> return PT_COMA .)
    CADENA          reduce using rule 9 (instruccion -> return PT_COMA .)
    CARACTER        reduce using rule 9 (instruccion -> return PT_COMA .)
    TRUE            reduce using rule 9 (instruccion -> return PT_COMA .)
    FALSE           reduce using rule 9 (instruccion -> return PT_COMA .)
    RETURN          reduce using rule 9 (instruccion -> return PT_COMA .)
    BREAK           reduce using rule 9 (instruccion -> return PT_COMA .)
    CONTINUE        reduce using rule 9 (instruccion -> return PT_COMA .)
    LOOP            reduce using rule 9 (instruccion -> return PT_COMA .)
    WHILE           reduce using rule 9 (instruccion -> return PT_COMA .)
    $end            reduce using rule 9 (instruccion -> return PT_COMA .)
    LLAVC           reduce using rule 9 (instruccion -> return PT_COMA .)
    COMA            reduce using rule 9 (instruccion -> return PT_COMA .)


state 53

    (10) instruccion -> break PT_COMA .

    PRINTLN         reduce using rule 10 (instruccion -> break PT_COMA .)
    LET             reduce using rule 10 (instruccion -> break PT_COMA .)
    ID              reduce using rule 10 (instruccion -> break PT_COMA .)
    IF              reduce using rule 10 (instruccion -> break PT_COMA .)
    MATCH           reduce using rule 10 (instruccion -> break PT_COMA .)
    MENOS           reduce using rule 10 (instruccion -> break PT_COMA .)
    I64             reduce using rule 10 (instruccion -> break PT_COMA .)
    PARA            reduce using rule 10 (instruccion -> break PT_COMA .)
    NOT             reduce using rule 10 (instruccion -> break PT_COMA .)
    ENTERO          reduce using rule 10 (instruccion -> break PT_COMA .)
    DECIMAL         reduce using rule 10 (instruccion -> break PT_COMA .)
    CADENA          reduce using rule 10 (instruccion -> break PT_COMA .)
    CARACTER        reduce using rule 10 (instruccion -> break PT_COMA .)
    TRUE            reduce using rule 10 (instruccion -> break PT_COMA .)
    FALSE           reduce using rule 10 (instruccion -> break PT_COMA .)
    RETURN          reduce using rule 10 (instruccion -> break PT_COMA .)
    BREAK           reduce using rule 10 (instruccion -> break PT_COMA .)
    CONTINUE        reduce using rule 10 (instruccion -> break PT_COMA .)
    LOOP            reduce using rule 10 (instruccion -> break PT_COMA .)
    WHILE           reduce using rule 10 (instruccion -> break PT_COMA .)
    $end            reduce using rule 10 (instruccion -> break PT_COMA .)
    LLAVC           reduce using rule 10 (instruccion -> break PT_COMA .)
    COMA            reduce using rule 10 (instruccion -> break PT_COMA .)


state 54

    (11) instruccion -> continue PT_COMA .

    PRINTLN         reduce using rule 11 (instruccion -> continue PT_COMA .)
    LET             reduce using rule 11 (instruccion -> continue PT_COMA .)
    ID              reduce using rule 11 (instruccion -> continue PT_COMA .)
    IF              reduce using rule 11 (instruccion -> continue PT_COMA .)
    MATCH           reduce using rule 11 (instruccion -> continue PT_COMA .)
    MENOS           reduce using rule 11 (instruccion -> continue PT_COMA .)
    I64             reduce using rule 11 (instruccion -> continue PT_COMA .)
    PARA            reduce using rule 11 (instruccion -> continue PT_COMA .)
    NOT             reduce using rule 11 (instruccion -> continue PT_COMA .)
    ENTERO          reduce using rule 11 (instruccion -> continue PT_COMA .)
    DECIMAL         reduce using rule 11 (instruccion -> continue PT_COMA .)
    CADENA          reduce using rule 11 (instruccion -> continue PT_COMA .)
    CARACTER        reduce using rule 11 (instruccion -> continue PT_COMA .)
    TRUE            reduce using rule 11 (instruccion -> continue PT_COMA .)
    FALSE           reduce using rule 11 (instruccion -> continue PT_COMA .)
    RETURN          reduce using rule 11 (instruccion -> continue PT_COMA .)
    BREAK           reduce using rule 11 (instruccion -> continue PT_COMA .)
    CONTINUE        reduce using rule 11 (instruccion -> continue PT_COMA .)
    LOOP            reduce using rule 11 (instruccion -> continue PT_COMA .)
    WHILE           reduce using rule 11 (instruccion -> continue PT_COMA .)
    $end            reduce using rule 11 (instruccion -> continue PT_COMA .)
    LLAVC           reduce using rule 11 (instruccion -> continue PT_COMA .)
    COMA            reduce using rule 11 (instruccion -> continue PT_COMA .)


state 55

    (14) prints -> PRINTLN NOT . PARA CADENA COMA list_exp PARC
    (15) prints -> PRINTLN NOT . PARA CADENA PARC

    PARA            shift and go to state 90


state 56

    (76) expresion -> NOT expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    MAS             reduce using rule 76 (expresion -> NOT expresion .)
    MENOS           reduce using rule 76 (expresion -> NOT expresion .)
    MULTI           reduce using rule 76 (expresion -> NOT expresion .)
    DIV             reduce using rule 76 (expresion -> NOT expresion .)
    MODULO          reduce using rule 76 (expresion -> NOT expresion .)
    IGUAL_IGUAL     reduce using rule 76 (expresion -> NOT expresion .)
    NO_IGUAL        reduce using rule 76 (expresion -> NOT expresion .)
    MAYOR           reduce using rule 76 (expresion -> NOT expresion .)
    MENOR           reduce using rule 76 (expresion -> NOT expresion .)
    MAYOR_IGUAL     reduce using rule 76 (expresion -> NOT expresion .)
    MENOR_IGUAL     reduce using rule 76 (expresion -> NOT expresion .)
    AND             reduce using rule 76 (expresion -> NOT expresion .)
    OR              reduce using rule 76 (expresion -> NOT expresion .)
    PUNTO           reduce using rule 76 (expresion -> NOT expresion .)
    AS              reduce using rule 76 (expresion -> NOT expresion .)
    PRINTLN         reduce using rule 76 (expresion -> NOT expresion .)
    LET             reduce using rule 76 (expresion -> NOT expresion .)
    ID              reduce using rule 76 (expresion -> NOT expresion .)
    IF              reduce using rule 76 (expresion -> NOT expresion .)
    MATCH           reduce using rule 76 (expresion -> NOT expresion .)
    I64             reduce using rule 76 (expresion -> NOT expresion .)
    PARA            reduce using rule 76 (expresion -> NOT expresion .)
    NOT             reduce using rule 76 (expresion -> NOT expresion .)
    ENTERO          reduce using rule 76 (expresion -> NOT expresion .)
    DECIMAL         reduce using rule 76 (expresion -> NOT expresion .)
    CADENA          reduce using rule 76 (expresion -> NOT expresion .)
    CARACTER        reduce using rule 76 (expresion -> NOT expresion .)
    TRUE            reduce using rule 76 (expresion -> NOT expresion .)
    FALSE           reduce using rule 76 (expresion -> NOT expresion .)
    RETURN          reduce using rule 76 (expresion -> NOT expresion .)
    BREAK           reduce using rule 76 (expresion -> NOT expresion .)
    CONTINUE        reduce using rule 76 (expresion -> NOT expresion .)
    LOOP            reduce using rule 76 (expresion -> NOT expresion .)
    WHILE           reduce using rule 76 (expresion -> NOT expresion .)
    $end            reduce using rule 76 (expresion -> NOT expresion .)
    PARC            reduce using rule 76 (expresion -> NOT expresion .)
    LLAVA           reduce using rule 76 (expresion -> NOT expresion .)
    PT_COMA         reduce using rule 76 (expresion -> NOT expresion .)
    LLAVC           reduce using rule 76 (expresion -> NOT expresion .)
    ARROW           reduce using rule 76 (expresion -> NOT expresion .)
    SEP_MATCH       reduce using rule 76 (expresion -> NOT expresion .)
    COMA            reduce using rule 76 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 37 ]
  ! MENOS           [ shift and go to state 38 ]
  ! MULTI           [ shift and go to state 39 ]
  ! DIV             [ shift and go to state 40 ]
  ! MODULO          [ shift and go to state 41 ]
  ! IGUAL_IGUAL     [ shift and go to state 42 ]
  ! NO_IGUAL        [ shift and go to state 43 ]
  ! MAYOR           [ shift and go to state 44 ]
  ! MENOR           [ shift and go to state 45 ]
  ! MAYOR_IGUAL     [ shift and go to state 46 ]
  ! MENOR_IGUAL     [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! PUNTO           [ shift and go to state 50 ]
  ! AS              [ shift and go to state 51 ]


state 57

    (79) expresion -> ID .

    MAS             reduce using rule 79 (expresion -> ID .)
    MENOS           reduce using rule 79 (expresion -> ID .)
    MULTI           reduce using rule 79 (expresion -> ID .)
    DIV             reduce using rule 79 (expresion -> ID .)
    MODULO          reduce using rule 79 (expresion -> ID .)
    IGUAL_IGUAL     reduce using rule 79 (expresion -> ID .)
    NO_IGUAL        reduce using rule 79 (expresion -> ID .)
    MAYOR           reduce using rule 79 (expresion -> ID .)
    MENOR           reduce using rule 79 (expresion -> ID .)
    MAYOR_IGUAL     reduce using rule 79 (expresion -> ID .)
    MENOR_IGUAL     reduce using rule 79 (expresion -> ID .)
    AND             reduce using rule 79 (expresion -> ID .)
    OR              reduce using rule 79 (expresion -> ID .)
    PUNTO           reduce using rule 79 (expresion -> ID .)
    AS              reduce using rule 79 (expresion -> ID .)
    PRINTLN         reduce using rule 79 (expresion -> ID .)
    LET             reduce using rule 79 (expresion -> ID .)
    ID              reduce using rule 79 (expresion -> ID .)
    IF              reduce using rule 79 (expresion -> ID .)
    MATCH           reduce using rule 79 (expresion -> ID .)
    I64             reduce using rule 79 (expresion -> ID .)
    PARA            reduce using rule 79 (expresion -> ID .)
    NOT             reduce using rule 79 (expresion -> ID .)
    ENTERO          reduce using rule 79 (expresion -> ID .)
    DECIMAL         reduce using rule 79 (expresion -> ID .)
    CADENA          reduce using rule 79 (expresion -> ID .)
    CARACTER        reduce using rule 79 (expresion -> ID .)
    TRUE            reduce using rule 79 (expresion -> ID .)
    FALSE           reduce using rule 79 (expresion -> ID .)
    RETURN          reduce using rule 79 (expresion -> ID .)
    BREAK           reduce using rule 79 (expresion -> ID .)
    CONTINUE        reduce using rule 79 (expresion -> ID .)
    LOOP            reduce using rule 79 (expresion -> ID .)
    WHILE           reduce using rule 79 (expresion -> ID .)
    $end            reduce using rule 79 (expresion -> ID .)
    PARC            reduce using rule 79 (expresion -> ID .)
    LLAVA           reduce using rule 79 (expresion -> ID .)
    PT_COMA         reduce using rule 79 (expresion -> ID .)
    LLAVC           reduce using rule 79 (expresion -> ID .)
    ARROW           reduce using rule 79 (expresion -> ID .)
    SEP_MATCH       reduce using rule 79 (expresion -> ID .)
    COMA            reduce using rule 79 (expresion -> ID .)


state 58

    (67) expresion -> PARA expresion . PARC
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    PARC            shift and go to state 91
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    IGUAL_IGUAL     shift and go to state 42
    NO_IGUAL        shift and go to state 43
    MAYOR           shift and go to state 44
    MENOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR_IGUAL     shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    PUNTO           shift and go to state 50
    AS              shift and go to state 51


state 59

    (18) declaracion -> LET MUT . ID DOS_PT tipo IGUAL valores
    (19) declaracion -> LET MUT . ID DOS_PT tipo
    (20) declaracion -> LET MUT . ID IGUAL valores
    (21) declaracion -> LET MUT . ID

    ID              shift and go to state 92


state 60

    (22) declaracion -> LET ID . DOS_PT tipo IGUAL valores
    (23) declaracion -> LET ID . DOS_PT tipo
    (24) declaracion -> LET ID . IGUAL valores
    (25) declaracion -> LET ID .

    DOS_PT          shift and go to state 93
    IGUAL           shift and go to state 94
    PT_COMA         reduce using rule 25 (declaracion -> LET ID .)


state 61

    (26) declaracion -> ID IGUAL . valores
    (27) valores -> . expresion
    (28) valores -> . sent_if
    (29) valores -> . match
    (30) valores -> . loop
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64
    (31) sent_if -> . IF expresion statement sent_else
    (35) match -> . MATCH expresion casos_match
    (50) loop -> . LOOP statement

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 32

    valores                        shift and go to state 95
    expresion                      shift and go to state 96
    sent_if                        shift and go to state 97
    match                          shift and go to state 98
    loop                           shift and go to state 99

state 62

    (31) sent_if -> IF expresion . statement sent_else
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64
    (52) statement -> . LLAVA instrucciones LLAVC
    (53) statement -> . LLAVA LLAVC

    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    IGUAL_IGUAL     shift and go to state 42
    NO_IGUAL        shift and go to state 43
    MAYOR           shift and go to state 44
    MENOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR_IGUAL     shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    PUNTO           shift and go to state 50
    AS              shift and go to state 51
    LLAVA           shift and go to state 69

    statement                      shift and go to state 100

state 63

    (35) match -> MATCH expresion . casos_match
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64
    (36) casos_match -> . LLAVA lista_casos default LLAVC

    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    IGUAL_IGUAL     shift and go to state 42
    NO_IGUAL        shift and go to state 43
    MAYOR           shift and go to state 44
    MENOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR_IGUAL     shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    PUNTO           shift and go to state 50
    AS              shift and go to state 51
    LLAVA           shift and go to state 102

    casos_match                    shift and go to state 101

state 64

    (60) expresion -> MENOS expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    MAS             reduce using rule 60 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 60 (expresion -> MENOS expresion .)
    MULTI           reduce using rule 60 (expresion -> MENOS expresion .)
    DIV             reduce using rule 60 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 60 (expresion -> MENOS expresion .)
    IGUAL_IGUAL     reduce using rule 60 (expresion -> MENOS expresion .)
    NO_IGUAL        reduce using rule 60 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 60 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 60 (expresion -> MENOS expresion .)
    MAYOR_IGUAL     reduce using rule 60 (expresion -> MENOS expresion .)
    MENOR_IGUAL     reduce using rule 60 (expresion -> MENOS expresion .)
    AND             reduce using rule 60 (expresion -> MENOS expresion .)
    OR              reduce using rule 60 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 60 (expresion -> MENOS expresion .)
    AS              reduce using rule 60 (expresion -> MENOS expresion .)
    PRINTLN         reduce using rule 60 (expresion -> MENOS expresion .)
    LET             reduce using rule 60 (expresion -> MENOS expresion .)
    ID              reduce using rule 60 (expresion -> MENOS expresion .)
    IF              reduce using rule 60 (expresion -> MENOS expresion .)
    MATCH           reduce using rule 60 (expresion -> MENOS expresion .)
    I64             reduce using rule 60 (expresion -> MENOS expresion .)
    PARA            reduce using rule 60 (expresion -> MENOS expresion .)
    NOT             reduce using rule 60 (expresion -> MENOS expresion .)
    ENTERO          reduce using rule 60 (expresion -> MENOS expresion .)
    DECIMAL         reduce using rule 60 (expresion -> MENOS expresion .)
    CADENA          reduce using rule 60 (expresion -> MENOS expresion .)
    CARACTER        reduce using rule 60 (expresion -> MENOS expresion .)
    TRUE            reduce using rule 60 (expresion -> MENOS expresion .)
    FALSE           reduce using rule 60 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 60 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 60 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 60 (expresion -> MENOS expresion .)
    LOOP            reduce using rule 60 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 60 (expresion -> MENOS expresion .)
    $end            reduce using rule 60 (expresion -> MENOS expresion .)
    PARC            reduce using rule 60 (expresion -> MENOS expresion .)
    LLAVA           reduce using rule 60 (expresion -> MENOS expresion .)
    PT_COMA         reduce using rule 60 (expresion -> MENOS expresion .)
    LLAVC           reduce using rule 60 (expresion -> MENOS expresion .)
    ARROW           reduce using rule 60 (expresion -> MENOS expresion .)
    SEP_MATCH       reduce using rule 60 (expresion -> MENOS expresion .)
    COMA            reduce using rule 60 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 37 ]
  ! MENOS           [ shift and go to state 38 ]
  ! MULTI           [ shift and go to state 39 ]
  ! DIV             [ shift and go to state 40 ]
  ! MODULO          [ shift and go to state 41 ]
  ! IGUAL_IGUAL     [ shift and go to state 42 ]
  ! NO_IGUAL        [ shift and go to state 43 ]
  ! MAYOR           [ shift and go to state 44 ]
  ! MENOR           [ shift and go to state 45 ]
  ! MAYOR_IGUAL     [ shift and go to state 46 ]
  ! MENOR_IGUAL     [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! PUNTO           [ shift and go to state 50 ]
  ! AS              [ shift and go to state 51 ]


state 65

    (66) expresion -> I64 DOS_PT . DOS_PT POW PARA expresion COMA expresion PARC

    DOS_PT          shift and go to state 103


state 66

    (46) return -> RETURN expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    PT_COMA         reduce using rule 46 (return -> RETURN expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    IGUAL_IGUAL     shift and go to state 42
    NO_IGUAL        shift and go to state 43
    MAYOR           shift and go to state 44
    MENOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR_IGUAL     shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    PUNTO           shift and go to state 50
    AS              shift and go to state 51


state 67

    (48) break -> BREAK expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    PT_COMA         reduce using rule 48 (break -> BREAK expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    IGUAL_IGUAL     shift and go to state 42
    NO_IGUAL        shift and go to state 43
    MAYOR           shift and go to state 44
    MENOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR_IGUAL     shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    PUNTO           shift and go to state 50
    AS              shift and go to state 51


state 68

    (50) loop -> LOOP statement .

    PRINTLN         reduce using rule 50 (loop -> LOOP statement .)
    LET             reduce using rule 50 (loop -> LOOP statement .)
    ID              reduce using rule 50 (loop -> LOOP statement .)
    IF              reduce using rule 50 (loop -> LOOP statement .)
    MATCH           reduce using rule 50 (loop -> LOOP statement .)
    MENOS           reduce using rule 50 (loop -> LOOP statement .)
    I64             reduce using rule 50 (loop -> LOOP statement .)
    PARA            reduce using rule 50 (loop -> LOOP statement .)
    NOT             reduce using rule 50 (loop -> LOOP statement .)
    ENTERO          reduce using rule 50 (loop -> LOOP statement .)
    DECIMAL         reduce using rule 50 (loop -> LOOP statement .)
    CADENA          reduce using rule 50 (loop -> LOOP statement .)
    CARACTER        reduce using rule 50 (loop -> LOOP statement .)
    TRUE            reduce using rule 50 (loop -> LOOP statement .)
    FALSE           reduce using rule 50 (loop -> LOOP statement .)
    RETURN          reduce using rule 50 (loop -> LOOP statement .)
    BREAK           reduce using rule 50 (loop -> LOOP statement .)
    CONTINUE        reduce using rule 50 (loop -> LOOP statement .)
    LOOP            reduce using rule 50 (loop -> LOOP statement .)
    WHILE           reduce using rule 50 (loop -> LOOP statement .)
    $end            reduce using rule 50 (loop -> LOOP statement .)
    PT_COMA         reduce using rule 50 (loop -> LOOP statement .)
    LLAVC           reduce using rule 50 (loop -> LOOP statement .)
    COMA            reduce using rule 50 (loop -> LOOP statement .)


state 69

    (52) statement -> LLAVA . instrucciones LLAVC
    (53) statement -> LLAVA . LLAVC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) instruccion -> . loop
    (13) instruccion -> . while
    (14) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (15) prints -> . PRINTLN NOT PARA CADENA PARC
    (18) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (19) declaracion -> . LET MUT ID DOS_PT tipo
    (20) declaracion -> . LET MUT ID IGUAL valores
    (21) declaracion -> . LET MUT ID
    (22) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (23) declaracion -> . LET ID DOS_PT tipo
    (24) declaracion -> . LET ID IGUAL valores
    (25) declaracion -> . LET ID
    (26) declaracion -> . ID IGUAL valores
    (31) sent_if -> . IF expresion statement sent_else
    (35) match -> . MATCH expresion casos_match
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64
    (45) return -> . RETURN
    (46) return -> . RETURN expresion
    (47) break -> . BREAK
    (48) break -> . BREAK expresion
    (49) continue -> . CONTINUE
    (50) loop -> . LOOP statement
    (51) while -> . WHILE expresion statement

    LLAVC           shift and go to state 105
    PRINTLN         shift and go to state 14
    LET             shift and go to state 18
    ID              shift and go to state 19
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    RETURN          shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    LOOP            shift and go to state 32
    WHILE           shift and go to state 33

    instrucciones                  shift and go to state 104
    instruccion                    shift and go to state 3
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13

state 70

    (51) while -> WHILE expresion . statement
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64
    (52) statement -> . LLAVA instrucciones LLAVC
    (53) statement -> . LLAVA LLAVC

    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    IGUAL_IGUAL     shift and go to state 42
    NO_IGUAL        shift and go to state 43
    MAYOR           shift and go to state 44
    MENOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR_IGUAL     shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    PUNTO           shift and go to state 50
    AS              shift and go to state 51
    LLAVA           shift and go to state 69

    statement                      shift and go to state 106

state 71

    (61) expresion -> expresion MAS expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    MAS             reduce using rule 61 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 61 (expresion -> expresion MAS expresion .)
    IGUAL_IGUAL     reduce using rule 61 (expresion -> expresion MAS expresion .)
    NO_IGUAL        reduce using rule 61 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 61 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 61 (expresion -> expresion MAS expresion .)
    MAYOR_IGUAL     reduce using rule 61 (expresion -> expresion MAS expresion .)
    MENOR_IGUAL     reduce using rule 61 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 61 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 61 (expresion -> expresion MAS expresion .)
    PUNTO           reduce using rule 61 (expresion -> expresion MAS expresion .)
    AS              reduce using rule 61 (expresion -> expresion MAS expresion .)
    PRINTLN         reduce using rule 61 (expresion -> expresion MAS expresion .)
    LET             reduce using rule 61 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 61 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 61 (expresion -> expresion MAS expresion .)
    MATCH           reduce using rule 61 (expresion -> expresion MAS expresion .)
    I64             reduce using rule 61 (expresion -> expresion MAS expresion .)
    PARA            reduce using rule 61 (expresion -> expresion MAS expresion .)
    NOT             reduce using rule 61 (expresion -> expresion MAS expresion .)
    ENTERO          reduce using rule 61 (expresion -> expresion MAS expresion .)
    DECIMAL         reduce using rule 61 (expresion -> expresion MAS expresion .)
    CADENA          reduce using rule 61 (expresion -> expresion MAS expresion .)
    CARACTER        reduce using rule 61 (expresion -> expresion MAS expresion .)
    TRUE            reduce using rule 61 (expresion -> expresion MAS expresion .)
    FALSE           reduce using rule 61 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 61 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 61 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 61 (expresion -> expresion MAS expresion .)
    LOOP            reduce using rule 61 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 61 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 61 (expresion -> expresion MAS expresion .)
    PARC            reduce using rule 61 (expresion -> expresion MAS expresion .)
    LLAVA           reduce using rule 61 (expresion -> expresion MAS expresion .)
    PT_COMA         reduce using rule 61 (expresion -> expresion MAS expresion .)
    LLAVC           reduce using rule 61 (expresion -> expresion MAS expresion .)
    ARROW           reduce using rule 61 (expresion -> expresion MAS expresion .)
    SEP_MATCH       reduce using rule 61 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 61 (expresion -> expresion MAS expresion .)
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41

  ! MULTI           [ reduce using rule 61 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 61 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 61 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 37 ]
  ! MENOS           [ shift and go to state 38 ]
  ! IGUAL_IGUAL     [ shift and go to state 42 ]
  ! NO_IGUAL        [ shift and go to state 43 ]
  ! MAYOR           [ shift and go to state 44 ]
  ! MENOR           [ shift and go to state 45 ]
  ! MAYOR_IGUAL     [ shift and go to state 46 ]
  ! MENOR_IGUAL     [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! PUNTO           [ shift and go to state 50 ]
  ! AS              [ shift and go to state 51 ]


state 72

    (62) expresion -> expresion MENOS expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    MAS             reduce using rule 62 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 62 (expresion -> expresion MENOS expresion .)
    IGUAL_IGUAL     reduce using rule 62 (expresion -> expresion MENOS expresion .)
    NO_IGUAL        reduce using rule 62 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 62 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 62 (expresion -> expresion MENOS expresion .)
    MAYOR_IGUAL     reduce using rule 62 (expresion -> expresion MENOS expresion .)
    MENOR_IGUAL     reduce using rule 62 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 62 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 62 (expresion -> expresion MENOS expresion .)
    PUNTO           reduce using rule 62 (expresion -> expresion MENOS expresion .)
    AS              reduce using rule 62 (expresion -> expresion MENOS expresion .)
    PRINTLN         reduce using rule 62 (expresion -> expresion MENOS expresion .)
    LET             reduce using rule 62 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 62 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 62 (expresion -> expresion MENOS expresion .)
    MATCH           reduce using rule 62 (expresion -> expresion MENOS expresion .)
    I64             reduce using rule 62 (expresion -> expresion MENOS expresion .)
    PARA            reduce using rule 62 (expresion -> expresion MENOS expresion .)
    NOT             reduce using rule 62 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 62 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 62 (expresion -> expresion MENOS expresion .)
    CADENA          reduce using rule 62 (expresion -> expresion MENOS expresion .)
    CARACTER        reduce using rule 62 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 62 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 62 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 62 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 62 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 62 (expresion -> expresion MENOS expresion .)
    LOOP            reduce using rule 62 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 62 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 62 (expresion -> expresion MENOS expresion .)
    PARC            reduce using rule 62 (expresion -> expresion MENOS expresion .)
    LLAVA           reduce using rule 62 (expresion -> expresion MENOS expresion .)
    PT_COMA         reduce using rule 62 (expresion -> expresion MENOS expresion .)
    LLAVC           reduce using rule 62 (expresion -> expresion MENOS expresion .)
    ARROW           reduce using rule 62 (expresion -> expresion MENOS expresion .)
    SEP_MATCH       reduce using rule 62 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 62 (expresion -> expresion MENOS expresion .)
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41

  ! MULTI           [ reduce using rule 62 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 62 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 62 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 37 ]
  ! MENOS           [ shift and go to state 38 ]
  ! IGUAL_IGUAL     [ shift and go to state 42 ]
  ! NO_IGUAL        [ shift and go to state 43 ]
  ! MAYOR           [ shift and go to state 44 ]
  ! MENOR           [ shift and go to state 45 ]
  ! MAYOR_IGUAL     [ shift and go to state 46 ]
  ! MENOR_IGUAL     [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! PUNTO           [ shift and go to state 50 ]
  ! AS              [ shift and go to state 51 ]


state 73

    (63) expresion -> expresion MULTI expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    MAS             reduce using rule 63 (expresion -> expresion MULTI expresion .)
    MENOS           reduce using rule 63 (expresion -> expresion MULTI expresion .)
    MULTI           reduce using rule 63 (expresion -> expresion MULTI expresion .)
    DIV             reduce using rule 63 (expresion -> expresion MULTI expresion .)
    MODULO          reduce using rule 63 (expresion -> expresion MULTI expresion .)
    IGUAL_IGUAL     reduce using rule 63 (expresion -> expresion MULTI expresion .)
    NO_IGUAL        reduce using rule 63 (expresion -> expresion MULTI expresion .)
    MAYOR           reduce using rule 63 (expresion -> expresion MULTI expresion .)
    MENOR           reduce using rule 63 (expresion -> expresion MULTI expresion .)
    MAYOR_IGUAL     reduce using rule 63 (expresion -> expresion MULTI expresion .)
    MENOR_IGUAL     reduce using rule 63 (expresion -> expresion MULTI expresion .)
    AND             reduce using rule 63 (expresion -> expresion MULTI expresion .)
    OR              reduce using rule 63 (expresion -> expresion MULTI expresion .)
    PUNTO           reduce using rule 63 (expresion -> expresion MULTI expresion .)
    AS              reduce using rule 63 (expresion -> expresion MULTI expresion .)
    PRINTLN         reduce using rule 63 (expresion -> expresion MULTI expresion .)
    LET             reduce using rule 63 (expresion -> expresion MULTI expresion .)
    ID              reduce using rule 63 (expresion -> expresion MULTI expresion .)
    IF              reduce using rule 63 (expresion -> expresion MULTI expresion .)
    MATCH           reduce using rule 63 (expresion -> expresion MULTI expresion .)
    I64             reduce using rule 63 (expresion -> expresion MULTI expresion .)
    PARA            reduce using rule 63 (expresion -> expresion MULTI expresion .)
    NOT             reduce using rule 63 (expresion -> expresion MULTI expresion .)
    ENTERO          reduce using rule 63 (expresion -> expresion MULTI expresion .)
    DECIMAL         reduce using rule 63 (expresion -> expresion MULTI expresion .)
    CADENA          reduce using rule 63 (expresion -> expresion MULTI expresion .)
    CARACTER        reduce using rule 63 (expresion -> expresion MULTI expresion .)
    TRUE            reduce using rule 63 (expresion -> expresion MULTI expresion .)
    FALSE           reduce using rule 63 (expresion -> expresion MULTI expresion .)
    RETURN          reduce using rule 63 (expresion -> expresion MULTI expresion .)
    BREAK           reduce using rule 63 (expresion -> expresion MULTI expresion .)
    CONTINUE        reduce using rule 63 (expresion -> expresion MULTI expresion .)
    LOOP            reduce using rule 63 (expresion -> expresion MULTI expresion .)
    WHILE           reduce using rule 63 (expresion -> expresion MULTI expresion .)
    $end            reduce using rule 63 (expresion -> expresion MULTI expresion .)
    PARC            reduce using rule 63 (expresion -> expresion MULTI expresion .)
    LLAVA           reduce using rule 63 (expresion -> expresion MULTI expresion .)
    PT_COMA         reduce using rule 63 (expresion -> expresion MULTI expresion .)
    LLAVC           reduce using rule 63 (expresion -> expresion MULTI expresion .)
    ARROW           reduce using rule 63 (expresion -> expresion MULTI expresion .)
    SEP_MATCH       reduce using rule 63 (expresion -> expresion MULTI expresion .)
    COMA            reduce using rule 63 (expresion -> expresion MULTI expresion .)

  ! MAS             [ shift and go to state 37 ]
  ! MENOS           [ shift and go to state 38 ]
  ! MULTI           [ shift and go to state 39 ]
  ! DIV             [ shift and go to state 40 ]
  ! MODULO          [ shift and go to state 41 ]
  ! IGUAL_IGUAL     [ shift and go to state 42 ]
  ! NO_IGUAL        [ shift and go to state 43 ]
  ! MAYOR           [ shift and go to state 44 ]
  ! MENOR           [ shift and go to state 45 ]
  ! MAYOR_IGUAL     [ shift and go to state 46 ]
  ! MENOR_IGUAL     [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! PUNTO           [ shift and go to state 50 ]
  ! AS              [ shift and go to state 51 ]


state 74

    (64) expresion -> expresion DIV expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    MAS             reduce using rule 64 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 64 (expresion -> expresion DIV expresion .)
    MULTI           reduce using rule 64 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 64 (expresion -> expresion DIV expresion .)
    MODULO          reduce using rule 64 (expresion -> expresion DIV expresion .)
    IGUAL_IGUAL     reduce using rule 64 (expresion -> expresion DIV expresion .)
    NO_IGUAL        reduce using rule 64 (expresion -> expresion DIV expresion .)
    MAYOR           reduce using rule 64 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 64 (expresion -> expresion DIV expresion .)
    MAYOR_IGUAL     reduce using rule 64 (expresion -> expresion DIV expresion .)
    MENOR_IGUAL     reduce using rule 64 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 64 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 64 (expresion -> expresion DIV expresion .)
    PUNTO           reduce using rule 64 (expresion -> expresion DIV expresion .)
    AS              reduce using rule 64 (expresion -> expresion DIV expresion .)
    PRINTLN         reduce using rule 64 (expresion -> expresion DIV expresion .)
    LET             reduce using rule 64 (expresion -> expresion DIV expresion .)
    ID              reduce using rule 64 (expresion -> expresion DIV expresion .)
    IF              reduce using rule 64 (expresion -> expresion DIV expresion .)
    MATCH           reduce using rule 64 (expresion -> expresion DIV expresion .)
    I64             reduce using rule 64 (expresion -> expresion DIV expresion .)
    PARA            reduce using rule 64 (expresion -> expresion DIV expresion .)
    NOT             reduce using rule 64 (expresion -> expresion DIV expresion .)
    ENTERO          reduce using rule 64 (expresion -> expresion DIV expresion .)
    DECIMAL         reduce using rule 64 (expresion -> expresion DIV expresion .)
    CADENA          reduce using rule 64 (expresion -> expresion DIV expresion .)
    CARACTER        reduce using rule 64 (expresion -> expresion DIV expresion .)
    TRUE            reduce using rule 64 (expresion -> expresion DIV expresion .)
    FALSE           reduce using rule 64 (expresion -> expresion DIV expresion .)
    RETURN          reduce using rule 64 (expresion -> expresion DIV expresion .)
    BREAK           reduce using rule 64 (expresion -> expresion DIV expresion .)
    CONTINUE        reduce using rule 64 (expresion -> expresion DIV expresion .)
    LOOP            reduce using rule 64 (expresion -> expresion DIV expresion .)
    WHILE           reduce using rule 64 (expresion -> expresion DIV expresion .)
    $end            reduce using rule 64 (expresion -> expresion DIV expresion .)
    PARC            reduce using rule 64 (expresion -> expresion DIV expresion .)
    LLAVA           reduce using rule 64 (expresion -> expresion DIV expresion .)
    PT_COMA         reduce using rule 64 (expresion -> expresion DIV expresion .)
    LLAVC           reduce using rule 64 (expresion -> expresion DIV expresion .)
    ARROW           reduce using rule 64 (expresion -> expresion DIV expresion .)
    SEP_MATCH       reduce using rule 64 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 64 (expresion -> expresion DIV expresion .)

  ! MAS             [ shift and go to state 37 ]
  ! MENOS           [ shift and go to state 38 ]
  ! MULTI           [ shift and go to state 39 ]
  ! DIV             [ shift and go to state 40 ]
  ! MODULO          [ shift and go to state 41 ]
  ! IGUAL_IGUAL     [ shift and go to state 42 ]
  ! NO_IGUAL        [ shift and go to state 43 ]
  ! MAYOR           [ shift and go to state 44 ]
  ! MENOR           [ shift and go to state 45 ]
  ! MAYOR_IGUAL     [ shift and go to state 46 ]
  ! MENOR_IGUAL     [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! PUNTO           [ shift and go to state 50 ]
  ! AS              [ shift and go to state 51 ]


state 75

    (65) expresion -> expresion MODULO expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    MAS             reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MULTI           reduce using rule 65 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 65 (expresion -> expresion MODULO expresion .)
    IGUAL_IGUAL     reduce using rule 65 (expresion -> expresion MODULO expresion .)
    NO_IGUAL        reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MAYOR_IGUAL     reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MENOR_IGUAL     reduce using rule 65 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 65 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 65 (expresion -> expresion MODULO expresion .)
    PUNTO           reduce using rule 65 (expresion -> expresion MODULO expresion .)
    AS              reduce using rule 65 (expresion -> expresion MODULO expresion .)
    PRINTLN         reduce using rule 65 (expresion -> expresion MODULO expresion .)
    LET             reduce using rule 65 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 65 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 65 (expresion -> expresion MODULO expresion .)
    MATCH           reduce using rule 65 (expresion -> expresion MODULO expresion .)
    I64             reduce using rule 65 (expresion -> expresion MODULO expresion .)
    PARA            reduce using rule 65 (expresion -> expresion MODULO expresion .)
    NOT             reduce using rule 65 (expresion -> expresion MODULO expresion .)
    ENTERO          reduce using rule 65 (expresion -> expresion MODULO expresion .)
    DECIMAL         reduce using rule 65 (expresion -> expresion MODULO expresion .)
    CADENA          reduce using rule 65 (expresion -> expresion MODULO expresion .)
    CARACTER        reduce using rule 65 (expresion -> expresion MODULO expresion .)
    TRUE            reduce using rule 65 (expresion -> expresion MODULO expresion .)
    FALSE           reduce using rule 65 (expresion -> expresion MODULO expresion .)
    RETURN          reduce using rule 65 (expresion -> expresion MODULO expresion .)
    BREAK           reduce using rule 65 (expresion -> expresion MODULO expresion .)
    CONTINUE        reduce using rule 65 (expresion -> expresion MODULO expresion .)
    LOOP            reduce using rule 65 (expresion -> expresion MODULO expresion .)
    WHILE           reduce using rule 65 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 65 (expresion -> expresion MODULO expresion .)
    PARC            reduce using rule 65 (expresion -> expresion MODULO expresion .)
    LLAVA           reduce using rule 65 (expresion -> expresion MODULO expresion .)
    PT_COMA         reduce using rule 65 (expresion -> expresion MODULO expresion .)
    LLAVC           reduce using rule 65 (expresion -> expresion MODULO expresion .)
    ARROW           reduce using rule 65 (expresion -> expresion MODULO expresion .)
    SEP_MATCH       reduce using rule 65 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 65 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 37 ]
  ! MENOS           [ shift and go to state 38 ]
  ! MULTI           [ shift and go to state 39 ]
  ! DIV             [ shift and go to state 40 ]
  ! MODULO          [ shift and go to state 41 ]
  ! IGUAL_IGUAL     [ shift and go to state 42 ]
  ! NO_IGUAL        [ shift and go to state 43 ]
  ! MAYOR           [ shift and go to state 44 ]
  ! MENOR           [ shift and go to state 45 ]
  ! MAYOR_IGUAL     [ shift and go to state 46 ]
  ! MENOR_IGUAL     [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! PUNTO           [ shift and go to state 50 ]
  ! AS              [ shift and go to state 51 ]


state 76

    (68) expresion -> expresion IGUAL_IGUAL expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    IGUAL_IGUAL     reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    NO_IGUAL        reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    MAYOR           reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    MENOR           reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    MAYOR_IGUAL     reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    MENOR_IGUAL     reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    AND             reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    OR              reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    PUNTO           reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    AS              reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    PRINTLN         reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    LET             reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    ID              reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    IF              reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    MATCH           reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    I64             reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    PARA            reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    NOT             reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    ENTERO          reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    DECIMAL         reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    CADENA          reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    CARACTER        reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    TRUE            reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    FALSE           reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    RETURN          reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    BREAK           reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    CONTINUE        reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    LOOP            reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    WHILE           reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    $end            reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    PARC            reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    LLAVA           reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    PT_COMA         reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    LLAVC           reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    ARROW           reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    SEP_MATCH       reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    COMA            reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41

  ! MAS             [ reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 68 (expresion -> expresion IGUAL_IGUAL expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 42 ]
  ! NO_IGUAL        [ shift and go to state 43 ]
  ! MAYOR           [ shift and go to state 44 ]
  ! MENOR           [ shift and go to state 45 ]
  ! MAYOR_IGUAL     [ shift and go to state 46 ]
  ! MENOR_IGUAL     [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! PUNTO           [ shift and go to state 50 ]
  ! AS              [ shift and go to state 51 ]


state 77

    (69) expresion -> expresion NO_IGUAL expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    IGUAL_IGUAL     reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    NO_IGUAL        reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    MAYOR           reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    MENOR           reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    MAYOR_IGUAL     reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    MENOR_IGUAL     reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    AND             reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    OR              reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    PUNTO           reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    AS              reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    PRINTLN         reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    LET             reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    ID              reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    IF              reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    MATCH           reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    I64             reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    PARA            reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    NOT             reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    ENTERO          reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    DECIMAL         reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    CADENA          reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    CARACTER        reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    TRUE            reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    FALSE           reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    RETURN          reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    BREAK           reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    CONTINUE        reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    LOOP            reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    WHILE           reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    $end            reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    PARC            reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    LLAVA           reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    PT_COMA         reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    LLAVC           reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    ARROW           reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    SEP_MATCH       reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    COMA            reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41

  ! MAS             [ reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 69 (expresion -> expresion NO_IGUAL expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 42 ]
  ! NO_IGUAL        [ shift and go to state 43 ]
  ! MAYOR           [ shift and go to state 44 ]
  ! MENOR           [ shift and go to state 45 ]
  ! MAYOR_IGUAL     [ shift and go to state 46 ]
  ! MENOR_IGUAL     [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! PUNTO           [ shift and go to state 50 ]
  ! AS              [ shift and go to state 51 ]


state 78

    (70) expresion -> expresion MAYOR expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    IGUAL_IGUAL     reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    NO_IGUAL        reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    MAYOR           reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    MAYOR_IGUAL     reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    MENOR_IGUAL     reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    PUNTO           reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    AS              reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    PRINTLN         reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    LET             reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    MATCH           reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    I64             reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    PARA            reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    NOT             reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    ENTERO          reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    DECIMAL         reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    CADENA          reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    CARACTER        reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    TRUE            reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    FALSE           reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    RETURN          reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    BREAK           reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    CONTINUE        reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    LOOP            reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    WHILE           reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    $end            reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    PARC            reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    LLAVA           reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    PT_COMA         reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    LLAVC           reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    ARROW           reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    SEP_MATCH       reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 70 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41

  ! MAS             [ reduce using rule 70 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 70 (expresion -> expresion MAYOR expresion .) ]
  ! MULTI           [ reduce using rule 70 (expresion -> expresion MAYOR expresion .) ]
  ! DIV             [ reduce using rule 70 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 70 (expresion -> expresion MAYOR expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 42 ]
  ! NO_IGUAL        [ shift and go to state 43 ]
  ! MAYOR           [ shift and go to state 44 ]
  ! MENOR           [ shift and go to state 45 ]
  ! MAYOR_IGUAL     [ shift and go to state 46 ]
  ! MENOR_IGUAL     [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! PUNTO           [ shift and go to state 50 ]
  ! AS              [ shift and go to state 51 ]


state 79

    (71) expresion -> expresion MENOR expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    IGUAL_IGUAL     reduce using rule 71 (expresion -> expresion MENOR expresion .)
    NO_IGUAL        reduce using rule 71 (expresion -> expresion MENOR expresion .)
    MAYOR           reduce using rule 71 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 71 (expresion -> expresion MENOR expresion .)
    MAYOR_IGUAL     reduce using rule 71 (expresion -> expresion MENOR expresion .)
    MENOR_IGUAL     reduce using rule 71 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 71 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 71 (expresion -> expresion MENOR expresion .)
    PUNTO           reduce using rule 71 (expresion -> expresion MENOR expresion .)
    AS              reduce using rule 71 (expresion -> expresion MENOR expresion .)
    PRINTLN         reduce using rule 71 (expresion -> expresion MENOR expresion .)
    LET             reduce using rule 71 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 71 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 71 (expresion -> expresion MENOR expresion .)
    MATCH           reduce using rule 71 (expresion -> expresion MENOR expresion .)
    I64             reduce using rule 71 (expresion -> expresion MENOR expresion .)
    PARA            reduce using rule 71 (expresion -> expresion MENOR expresion .)
    NOT             reduce using rule 71 (expresion -> expresion MENOR expresion .)
    ENTERO          reduce using rule 71 (expresion -> expresion MENOR expresion .)
    DECIMAL         reduce using rule 71 (expresion -> expresion MENOR expresion .)
    CADENA          reduce using rule 71 (expresion -> expresion MENOR expresion .)
    CARACTER        reduce using rule 71 (expresion -> expresion MENOR expresion .)
    TRUE            reduce using rule 71 (expresion -> expresion MENOR expresion .)
    FALSE           reduce using rule 71 (expresion -> expresion MENOR expresion .)
    RETURN          reduce using rule 71 (expresion -> expresion MENOR expresion .)
    BREAK           reduce using rule 71 (expresion -> expresion MENOR expresion .)
    CONTINUE        reduce using rule 71 (expresion -> expresion MENOR expresion .)
    LOOP            reduce using rule 71 (expresion -> expresion MENOR expresion .)
    WHILE           reduce using rule 71 (expresion -> expresion MENOR expresion .)
    $end            reduce using rule 71 (expresion -> expresion MENOR expresion .)
    PARC            reduce using rule 71 (expresion -> expresion MENOR expresion .)
    LLAVA           reduce using rule 71 (expresion -> expresion MENOR expresion .)
    PT_COMA         reduce using rule 71 (expresion -> expresion MENOR expresion .)
    LLAVC           reduce using rule 71 (expresion -> expresion MENOR expresion .)
    ARROW           reduce using rule 71 (expresion -> expresion MENOR expresion .)
    SEP_MATCH       reduce using rule 71 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 71 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41

  ! MAS             [ reduce using rule 71 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 71 (expresion -> expresion MENOR expresion .) ]
  ! MULTI           [ reduce using rule 71 (expresion -> expresion MENOR expresion .) ]
  ! DIV             [ reduce using rule 71 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 71 (expresion -> expresion MENOR expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 42 ]
  ! NO_IGUAL        [ shift and go to state 43 ]
  ! MAYOR           [ shift and go to state 44 ]
  ! MENOR           [ shift and go to state 45 ]
  ! MAYOR_IGUAL     [ shift and go to state 46 ]
  ! MENOR_IGUAL     [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! PUNTO           [ shift and go to state 50 ]
  ! AS              [ shift and go to state 51 ]


state 80

    (72) expresion -> expresion MAYOR_IGUAL expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    IGUAL_IGUAL     reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    NO_IGUAL        reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    MAYOR           reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    MENOR           reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    MAYOR_IGUAL     reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    MENOR_IGUAL     reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    AND             reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    OR              reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    PUNTO           reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    AS              reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    PRINTLN         reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    LET             reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    ID              reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    IF              reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    MATCH           reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    I64             reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    PARA            reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    NOT             reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    ENTERO          reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    DECIMAL         reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    CADENA          reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    CARACTER        reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    TRUE            reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    FALSE           reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    RETURN          reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    BREAK           reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    CONTINUE        reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    LOOP            reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    WHILE           reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    $end            reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    PARC            reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    LLAVA           reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    PT_COMA         reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    LLAVC           reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    ARROW           reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    SEP_MATCH       reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    COMA            reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41

  ! MAS             [ reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 72 (expresion -> expresion MAYOR_IGUAL expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 42 ]
  ! NO_IGUAL        [ shift and go to state 43 ]
  ! MAYOR           [ shift and go to state 44 ]
  ! MENOR           [ shift and go to state 45 ]
  ! MAYOR_IGUAL     [ shift and go to state 46 ]
  ! MENOR_IGUAL     [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! PUNTO           [ shift and go to state 50 ]
  ! AS              [ shift and go to state 51 ]


state 81

    (73) expresion -> expresion MENOR_IGUAL expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    IGUAL_IGUAL     reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    NO_IGUAL        reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    MAYOR           reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    MENOR           reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    MAYOR_IGUAL     reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    MENOR_IGUAL     reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    AND             reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    OR              reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    PUNTO           reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    AS              reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    PRINTLN         reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    LET             reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    ID              reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    IF              reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    MATCH           reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    I64             reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    PARA            reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    NOT             reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    ENTERO          reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    DECIMAL         reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    CADENA          reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    CARACTER        reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    TRUE            reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    FALSE           reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    RETURN          reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    BREAK           reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    CONTINUE        reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    LOOP            reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    WHILE           reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    $end            reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    PARC            reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    LLAVA           reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    PT_COMA         reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    LLAVC           reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    ARROW           reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    SEP_MATCH       reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    COMA            reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41

  ! MAS             [ reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! MENOS           [ reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! MULTI           [ reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! DIV             [ reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! MODULO          [ reduce using rule 73 (expresion -> expresion MENOR_IGUAL expresion .) ]
  ! IGUAL_IGUAL     [ shift and go to state 42 ]
  ! NO_IGUAL        [ shift and go to state 43 ]
  ! MAYOR           [ shift and go to state 44 ]
  ! MENOR           [ shift and go to state 45 ]
  ! MAYOR_IGUAL     [ shift and go to state 46 ]
  ! MENOR_IGUAL     [ shift and go to state 47 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! PUNTO           [ shift and go to state 50 ]
  ! AS              [ shift and go to state 51 ]


state 82

    (74) expresion -> expresion AND expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    AND             reduce using rule 74 (expresion -> expresion AND expresion .)
    OR              reduce using rule 74 (expresion -> expresion AND expresion .)
    PUNTO           reduce using rule 74 (expresion -> expresion AND expresion .)
    AS              reduce using rule 74 (expresion -> expresion AND expresion .)
    PRINTLN         reduce using rule 74 (expresion -> expresion AND expresion .)
    LET             reduce using rule 74 (expresion -> expresion AND expresion .)
    ID              reduce using rule 74 (expresion -> expresion AND expresion .)
    IF              reduce using rule 74 (expresion -> expresion AND expresion .)
    MATCH           reduce using rule 74 (expresion -> expresion AND expresion .)
    I64             reduce using rule 74 (expresion -> expresion AND expresion .)
    PARA            reduce using rule 74 (expresion -> expresion AND expresion .)
    NOT             reduce using rule 74 (expresion -> expresion AND expresion .)
    ENTERO          reduce using rule 74 (expresion -> expresion AND expresion .)
    DECIMAL         reduce using rule 74 (expresion -> expresion AND expresion .)
    CADENA          reduce using rule 74 (expresion -> expresion AND expresion .)
    CARACTER        reduce using rule 74 (expresion -> expresion AND expresion .)
    TRUE            reduce using rule 74 (expresion -> expresion AND expresion .)
    FALSE           reduce using rule 74 (expresion -> expresion AND expresion .)
    RETURN          reduce using rule 74 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 74 (expresion -> expresion AND expresion .)
    CONTINUE        reduce using rule 74 (expresion -> expresion AND expresion .)
    LOOP            reduce using rule 74 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 74 (expresion -> expresion AND expresion .)
    $end            reduce using rule 74 (expresion -> expresion AND expresion .)
    PARC            reduce using rule 74 (expresion -> expresion AND expresion .)
    LLAVA           reduce using rule 74 (expresion -> expresion AND expresion .)
    PT_COMA         reduce using rule 74 (expresion -> expresion AND expresion .)
    LLAVC           reduce using rule 74 (expresion -> expresion AND expresion .)
    ARROW           reduce using rule 74 (expresion -> expresion AND expresion .)
    SEP_MATCH       reduce using rule 74 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 74 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    IGUAL_IGUAL     shift and go to state 42
    NO_IGUAL        shift and go to state 43
    MAYOR           shift and go to state 44
    MENOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR_IGUAL     shift and go to state 47

  ! MAS             [ reduce using rule 74 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 74 (expresion -> expresion AND expresion .) ]
  ! MULTI           [ reduce using rule 74 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 74 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 74 (expresion -> expresion AND expresion .) ]
  ! IGUAL_IGUAL     [ reduce using rule 74 (expresion -> expresion AND expresion .) ]
  ! NO_IGUAL        [ reduce using rule 74 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 74 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 74 (expresion -> expresion AND expresion .) ]
  ! MAYOR_IGUAL     [ reduce using rule 74 (expresion -> expresion AND expresion .) ]
  ! MENOR_IGUAL     [ reduce using rule 74 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! PUNTO           [ shift and go to state 50 ]
  ! AS              [ shift and go to state 51 ]


state 83

    (75) expresion -> expresion OR expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    OR              reduce using rule 75 (expresion -> expresion OR expresion .)
    PUNTO           reduce using rule 75 (expresion -> expresion OR expresion .)
    AS              reduce using rule 75 (expresion -> expresion OR expresion .)
    PRINTLN         reduce using rule 75 (expresion -> expresion OR expresion .)
    LET             reduce using rule 75 (expresion -> expresion OR expresion .)
    ID              reduce using rule 75 (expresion -> expresion OR expresion .)
    IF              reduce using rule 75 (expresion -> expresion OR expresion .)
    MATCH           reduce using rule 75 (expresion -> expresion OR expresion .)
    I64             reduce using rule 75 (expresion -> expresion OR expresion .)
    PARA            reduce using rule 75 (expresion -> expresion OR expresion .)
    NOT             reduce using rule 75 (expresion -> expresion OR expresion .)
    ENTERO          reduce using rule 75 (expresion -> expresion OR expresion .)
    DECIMAL         reduce using rule 75 (expresion -> expresion OR expresion .)
    CADENA          reduce using rule 75 (expresion -> expresion OR expresion .)
    CARACTER        reduce using rule 75 (expresion -> expresion OR expresion .)
    TRUE            reduce using rule 75 (expresion -> expresion OR expresion .)
    FALSE           reduce using rule 75 (expresion -> expresion OR expresion .)
    RETURN          reduce using rule 75 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 75 (expresion -> expresion OR expresion .)
    CONTINUE        reduce using rule 75 (expresion -> expresion OR expresion .)
    LOOP            reduce using rule 75 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 75 (expresion -> expresion OR expresion .)
    $end            reduce using rule 75 (expresion -> expresion OR expresion .)
    PARC            reduce using rule 75 (expresion -> expresion OR expresion .)
    LLAVA           reduce using rule 75 (expresion -> expresion OR expresion .)
    PT_COMA         reduce using rule 75 (expresion -> expresion OR expresion .)
    LLAVC           reduce using rule 75 (expresion -> expresion OR expresion .)
    ARROW           reduce using rule 75 (expresion -> expresion OR expresion .)
    SEP_MATCH       reduce using rule 75 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 75 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    IGUAL_IGUAL     shift and go to state 42
    NO_IGUAL        shift and go to state 43
    MAYOR           shift and go to state 44
    MENOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR_IGUAL     shift and go to state 47
    AND             shift and go to state 48

  ! MAS             [ reduce using rule 75 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 75 (expresion -> expresion OR expresion .) ]
  ! MULTI           [ reduce using rule 75 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 75 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 75 (expresion -> expresion OR expresion .) ]
  ! IGUAL_IGUAL     [ reduce using rule 75 (expresion -> expresion OR expresion .) ]
  ! NO_IGUAL        [ reduce using rule 75 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 75 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 75 (expresion -> expresion OR expresion .) ]
  ! MAYOR_IGUAL     [ reduce using rule 75 (expresion -> expresion OR expresion .) ]
  ! MENOR_IGUAL     [ reduce using rule 75 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 75 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 49 ]
  ! PUNTO           [ shift and go to state 50 ]
  ! AS              [ shift and go to state 51 ]


state 84

    (84) expresion -> expresion PUNTO TO_OWNED . PARA PARC

    PARA            shift and go to state 107


state 85

    (85) expresion -> expresion PUNTO TO_STRING . PARA PARC

    PARA            shift and go to state 108


state 86

    (86) expresion -> expresion PUNTO ABSOLUTO . PARA PARC

    PARA            shift and go to state 109


state 87

    (87) expresion -> expresion PUNTO RAIZ . PARA PARC

    PARA            shift and go to state 110


state 88

    (88) expresion -> expresion AS F64 .

    MAS             reduce using rule 88 (expresion -> expresion AS F64 .)
    MENOS           reduce using rule 88 (expresion -> expresion AS F64 .)
    MULTI           reduce using rule 88 (expresion -> expresion AS F64 .)
    DIV             reduce using rule 88 (expresion -> expresion AS F64 .)
    MODULO          reduce using rule 88 (expresion -> expresion AS F64 .)
    IGUAL_IGUAL     reduce using rule 88 (expresion -> expresion AS F64 .)
    NO_IGUAL        reduce using rule 88 (expresion -> expresion AS F64 .)
    MAYOR           reduce using rule 88 (expresion -> expresion AS F64 .)
    MENOR           reduce using rule 88 (expresion -> expresion AS F64 .)
    MAYOR_IGUAL     reduce using rule 88 (expresion -> expresion AS F64 .)
    MENOR_IGUAL     reduce using rule 88 (expresion -> expresion AS F64 .)
    AND             reduce using rule 88 (expresion -> expresion AS F64 .)
    OR              reduce using rule 88 (expresion -> expresion AS F64 .)
    PUNTO           reduce using rule 88 (expresion -> expresion AS F64 .)
    AS              reduce using rule 88 (expresion -> expresion AS F64 .)
    PRINTLN         reduce using rule 88 (expresion -> expresion AS F64 .)
    LET             reduce using rule 88 (expresion -> expresion AS F64 .)
    ID              reduce using rule 88 (expresion -> expresion AS F64 .)
    IF              reduce using rule 88 (expresion -> expresion AS F64 .)
    MATCH           reduce using rule 88 (expresion -> expresion AS F64 .)
    I64             reduce using rule 88 (expresion -> expresion AS F64 .)
    PARA            reduce using rule 88 (expresion -> expresion AS F64 .)
    NOT             reduce using rule 88 (expresion -> expresion AS F64 .)
    ENTERO          reduce using rule 88 (expresion -> expresion AS F64 .)
    DECIMAL         reduce using rule 88 (expresion -> expresion AS F64 .)
    CADENA          reduce using rule 88 (expresion -> expresion AS F64 .)
    CARACTER        reduce using rule 88 (expresion -> expresion AS F64 .)
    TRUE            reduce using rule 88 (expresion -> expresion AS F64 .)
    FALSE           reduce using rule 88 (expresion -> expresion AS F64 .)
    RETURN          reduce using rule 88 (expresion -> expresion AS F64 .)
    BREAK           reduce using rule 88 (expresion -> expresion AS F64 .)
    CONTINUE        reduce using rule 88 (expresion -> expresion AS F64 .)
    LOOP            reduce using rule 88 (expresion -> expresion AS F64 .)
    WHILE           reduce using rule 88 (expresion -> expresion AS F64 .)
    $end            reduce using rule 88 (expresion -> expresion AS F64 .)
    PARC            reduce using rule 88 (expresion -> expresion AS F64 .)
    LLAVA           reduce using rule 88 (expresion -> expresion AS F64 .)
    PT_COMA         reduce using rule 88 (expresion -> expresion AS F64 .)
    LLAVC           reduce using rule 88 (expresion -> expresion AS F64 .)
    ARROW           reduce using rule 88 (expresion -> expresion AS F64 .)
    SEP_MATCH       reduce using rule 88 (expresion -> expresion AS F64 .)
    COMA            reduce using rule 88 (expresion -> expresion AS F64 .)


state 89

    (89) expresion -> expresion AS I64 .

    MAS             reduce using rule 89 (expresion -> expresion AS I64 .)
    MENOS           reduce using rule 89 (expresion -> expresion AS I64 .)
    MULTI           reduce using rule 89 (expresion -> expresion AS I64 .)
    DIV             reduce using rule 89 (expresion -> expresion AS I64 .)
    MODULO          reduce using rule 89 (expresion -> expresion AS I64 .)
    IGUAL_IGUAL     reduce using rule 89 (expresion -> expresion AS I64 .)
    NO_IGUAL        reduce using rule 89 (expresion -> expresion AS I64 .)
    MAYOR           reduce using rule 89 (expresion -> expresion AS I64 .)
    MENOR           reduce using rule 89 (expresion -> expresion AS I64 .)
    MAYOR_IGUAL     reduce using rule 89 (expresion -> expresion AS I64 .)
    MENOR_IGUAL     reduce using rule 89 (expresion -> expresion AS I64 .)
    AND             reduce using rule 89 (expresion -> expresion AS I64 .)
    OR              reduce using rule 89 (expresion -> expresion AS I64 .)
    PUNTO           reduce using rule 89 (expresion -> expresion AS I64 .)
    AS              reduce using rule 89 (expresion -> expresion AS I64 .)
    PRINTLN         reduce using rule 89 (expresion -> expresion AS I64 .)
    LET             reduce using rule 89 (expresion -> expresion AS I64 .)
    ID              reduce using rule 89 (expresion -> expresion AS I64 .)
    IF              reduce using rule 89 (expresion -> expresion AS I64 .)
    MATCH           reduce using rule 89 (expresion -> expresion AS I64 .)
    I64             reduce using rule 89 (expresion -> expresion AS I64 .)
    PARA            reduce using rule 89 (expresion -> expresion AS I64 .)
    NOT             reduce using rule 89 (expresion -> expresion AS I64 .)
    ENTERO          reduce using rule 89 (expresion -> expresion AS I64 .)
    DECIMAL         reduce using rule 89 (expresion -> expresion AS I64 .)
    CADENA          reduce using rule 89 (expresion -> expresion AS I64 .)
    CARACTER        reduce using rule 89 (expresion -> expresion AS I64 .)
    TRUE            reduce using rule 89 (expresion -> expresion AS I64 .)
    FALSE           reduce using rule 89 (expresion -> expresion AS I64 .)
    RETURN          reduce using rule 89 (expresion -> expresion AS I64 .)
    BREAK           reduce using rule 89 (expresion -> expresion AS I64 .)
    CONTINUE        reduce using rule 89 (expresion -> expresion AS I64 .)
    LOOP            reduce using rule 89 (expresion -> expresion AS I64 .)
    WHILE           reduce using rule 89 (expresion -> expresion AS I64 .)
    $end            reduce using rule 89 (expresion -> expresion AS I64 .)
    PARC            reduce using rule 89 (expresion -> expresion AS I64 .)
    LLAVA           reduce using rule 89 (expresion -> expresion AS I64 .)
    PT_COMA         reduce using rule 89 (expresion -> expresion AS I64 .)
    LLAVC           reduce using rule 89 (expresion -> expresion AS I64 .)
    ARROW           reduce using rule 89 (expresion -> expresion AS I64 .)
    SEP_MATCH       reduce using rule 89 (expresion -> expresion AS I64 .)
    COMA            reduce using rule 89 (expresion -> expresion AS I64 .)


state 90

    (14) prints -> PRINTLN NOT PARA . CADENA COMA list_exp PARC
    (15) prints -> PRINTLN NOT PARA . CADENA PARC

    CADENA          shift and go to state 111


state 91

    (67) expresion -> PARA expresion PARC .

    MAS             reduce using rule 67 (expresion -> PARA expresion PARC .)
    MENOS           reduce using rule 67 (expresion -> PARA expresion PARC .)
    MULTI           reduce using rule 67 (expresion -> PARA expresion PARC .)
    DIV             reduce using rule 67 (expresion -> PARA expresion PARC .)
    MODULO          reduce using rule 67 (expresion -> PARA expresion PARC .)
    IGUAL_IGUAL     reduce using rule 67 (expresion -> PARA expresion PARC .)
    NO_IGUAL        reduce using rule 67 (expresion -> PARA expresion PARC .)
    MAYOR           reduce using rule 67 (expresion -> PARA expresion PARC .)
    MENOR           reduce using rule 67 (expresion -> PARA expresion PARC .)
    MAYOR_IGUAL     reduce using rule 67 (expresion -> PARA expresion PARC .)
    MENOR_IGUAL     reduce using rule 67 (expresion -> PARA expresion PARC .)
    AND             reduce using rule 67 (expresion -> PARA expresion PARC .)
    OR              reduce using rule 67 (expresion -> PARA expresion PARC .)
    PUNTO           reduce using rule 67 (expresion -> PARA expresion PARC .)
    AS              reduce using rule 67 (expresion -> PARA expresion PARC .)
    PRINTLN         reduce using rule 67 (expresion -> PARA expresion PARC .)
    LET             reduce using rule 67 (expresion -> PARA expresion PARC .)
    ID              reduce using rule 67 (expresion -> PARA expresion PARC .)
    IF              reduce using rule 67 (expresion -> PARA expresion PARC .)
    MATCH           reduce using rule 67 (expresion -> PARA expresion PARC .)
    I64             reduce using rule 67 (expresion -> PARA expresion PARC .)
    PARA            reduce using rule 67 (expresion -> PARA expresion PARC .)
    NOT             reduce using rule 67 (expresion -> PARA expresion PARC .)
    ENTERO          reduce using rule 67 (expresion -> PARA expresion PARC .)
    DECIMAL         reduce using rule 67 (expresion -> PARA expresion PARC .)
    CADENA          reduce using rule 67 (expresion -> PARA expresion PARC .)
    CARACTER        reduce using rule 67 (expresion -> PARA expresion PARC .)
    TRUE            reduce using rule 67 (expresion -> PARA expresion PARC .)
    FALSE           reduce using rule 67 (expresion -> PARA expresion PARC .)
    RETURN          reduce using rule 67 (expresion -> PARA expresion PARC .)
    BREAK           reduce using rule 67 (expresion -> PARA expresion PARC .)
    CONTINUE        reduce using rule 67 (expresion -> PARA expresion PARC .)
    LOOP            reduce using rule 67 (expresion -> PARA expresion PARC .)
    WHILE           reduce using rule 67 (expresion -> PARA expresion PARC .)
    $end            reduce using rule 67 (expresion -> PARA expresion PARC .)
    PARC            reduce using rule 67 (expresion -> PARA expresion PARC .)
    LLAVA           reduce using rule 67 (expresion -> PARA expresion PARC .)
    PT_COMA         reduce using rule 67 (expresion -> PARA expresion PARC .)
    LLAVC           reduce using rule 67 (expresion -> PARA expresion PARC .)
    ARROW           reduce using rule 67 (expresion -> PARA expresion PARC .)
    SEP_MATCH       reduce using rule 67 (expresion -> PARA expresion PARC .)
    COMA            reduce using rule 67 (expresion -> PARA expresion PARC .)


state 92

    (18) declaracion -> LET MUT ID . DOS_PT tipo IGUAL valores
    (19) declaracion -> LET MUT ID . DOS_PT tipo
    (20) declaracion -> LET MUT ID . IGUAL valores
    (21) declaracion -> LET MUT ID .

    DOS_PT          shift and go to state 112
    IGUAL           shift and go to state 113
    PT_COMA         reduce using rule 21 (declaracion -> LET MUT ID .)


state 93

    (22) declaracion -> LET ID DOS_PT . tipo IGUAL valores
    (23) declaracion -> LET ID DOS_PT . tipo
    (54) tipo -> . I64
    (55) tipo -> . F64
    (56) tipo -> . BOOL
    (57) tipo -> . STRING
    (58) tipo -> . STR
    (59) tipo -> . CHAR

    I64             shift and go to state 115
    F64             shift and go to state 116
    BOOL            shift and go to state 117
    STRING          shift and go to state 118
    STR             shift and go to state 119
    CHAR            shift and go to state 120

    tipo                           shift and go to state 114

state 94

    (24) declaracion -> LET ID IGUAL . valores
    (27) valores -> . expresion
    (28) valores -> . sent_if
    (29) valores -> . match
    (30) valores -> . loop
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64
    (31) sent_if -> . IF expresion statement sent_else
    (35) match -> . MATCH expresion casos_match
    (50) loop -> . LOOP statement

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 32

    valores                        shift and go to state 121
    expresion                      shift and go to state 96
    sent_if                        shift and go to state 97
    match                          shift and go to state 98
    loop                           shift and go to state 99

state 95

    (26) declaracion -> ID IGUAL valores .

    PT_COMA         reduce using rule 26 (declaracion -> ID IGUAL valores .)


state 96

    (27) valores -> expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    PT_COMA         reduce using rule 27 (valores -> expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    IGUAL_IGUAL     shift and go to state 42
    NO_IGUAL        shift and go to state 43
    MAYOR           shift and go to state 44
    MENOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR_IGUAL     shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    PUNTO           shift and go to state 50
    AS              shift and go to state 51


state 97

    (28) valores -> sent_if .

    PT_COMA         reduce using rule 28 (valores -> sent_if .)


state 98

    (29) valores -> match .

    PT_COMA         reduce using rule 29 (valores -> match .)


state 99

    (30) valores -> loop .

    PT_COMA         reduce using rule 30 (valores -> loop .)


state 100

    (31) sent_if -> IF expresion statement . sent_else
    (32) sent_else -> . ELSE statement
    (33) sent_else -> . ELSE sent_if
    (34) sent_else -> .

    ELSE            shift and go to state 123
    PRINTLN         reduce using rule 34 (sent_else -> .)
    LET             reduce using rule 34 (sent_else -> .)
    ID              reduce using rule 34 (sent_else -> .)
    IF              reduce using rule 34 (sent_else -> .)
    MATCH           reduce using rule 34 (sent_else -> .)
    MENOS           reduce using rule 34 (sent_else -> .)
    I64             reduce using rule 34 (sent_else -> .)
    PARA            reduce using rule 34 (sent_else -> .)
    NOT             reduce using rule 34 (sent_else -> .)
    ENTERO          reduce using rule 34 (sent_else -> .)
    DECIMAL         reduce using rule 34 (sent_else -> .)
    CADENA          reduce using rule 34 (sent_else -> .)
    CARACTER        reduce using rule 34 (sent_else -> .)
    TRUE            reduce using rule 34 (sent_else -> .)
    FALSE           reduce using rule 34 (sent_else -> .)
    RETURN          reduce using rule 34 (sent_else -> .)
    BREAK           reduce using rule 34 (sent_else -> .)
    CONTINUE        reduce using rule 34 (sent_else -> .)
    LOOP            reduce using rule 34 (sent_else -> .)
    WHILE           reduce using rule 34 (sent_else -> .)
    $end            reduce using rule 34 (sent_else -> .)
    PT_COMA         reduce using rule 34 (sent_else -> .)
    LLAVC           reduce using rule 34 (sent_else -> .)
    COMA            reduce using rule 34 (sent_else -> .)

    sent_else                      shift and go to state 122

state 101

    (35) match -> MATCH expresion casos_match .

    PRINTLN         reduce using rule 35 (match -> MATCH expresion casos_match .)
    LET             reduce using rule 35 (match -> MATCH expresion casos_match .)
    ID              reduce using rule 35 (match -> MATCH expresion casos_match .)
    IF              reduce using rule 35 (match -> MATCH expresion casos_match .)
    MATCH           reduce using rule 35 (match -> MATCH expresion casos_match .)
    MENOS           reduce using rule 35 (match -> MATCH expresion casos_match .)
    I64             reduce using rule 35 (match -> MATCH expresion casos_match .)
    PARA            reduce using rule 35 (match -> MATCH expresion casos_match .)
    NOT             reduce using rule 35 (match -> MATCH expresion casos_match .)
    ENTERO          reduce using rule 35 (match -> MATCH expresion casos_match .)
    DECIMAL         reduce using rule 35 (match -> MATCH expresion casos_match .)
    CADENA          reduce using rule 35 (match -> MATCH expresion casos_match .)
    CARACTER        reduce using rule 35 (match -> MATCH expresion casos_match .)
    TRUE            reduce using rule 35 (match -> MATCH expresion casos_match .)
    FALSE           reduce using rule 35 (match -> MATCH expresion casos_match .)
    RETURN          reduce using rule 35 (match -> MATCH expresion casos_match .)
    BREAK           reduce using rule 35 (match -> MATCH expresion casos_match .)
    CONTINUE        reduce using rule 35 (match -> MATCH expresion casos_match .)
    LOOP            reduce using rule 35 (match -> MATCH expresion casos_match .)
    WHILE           reduce using rule 35 (match -> MATCH expresion casos_match .)
    $end            reduce using rule 35 (match -> MATCH expresion casos_match .)
    PT_COMA         reduce using rule 35 (match -> MATCH expresion casos_match .)
    LLAVC           reduce using rule 35 (match -> MATCH expresion casos_match .)
    COMA            reduce using rule 35 (match -> MATCH expresion casos_match .)


state 102

    (36) casos_match -> LLAVA . lista_casos default LLAVC
    (37) lista_casos -> . lista_casos lista_expresiones ARROW statement COMA
    (38) lista_casos -> . lista_casos lista_expresiones ARROW instruccion COMA
    (39) lista_casos -> . lista_expresiones ARROW statement COMA
    (40) lista_casos -> . lista_expresiones ARROW instruccion COMA
    (41) lista_expresiones -> . lista_expresiones SEP_MATCH expresion
    (42) lista_expresiones -> . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    lista_casos                    shift and go to state 124
    lista_expresiones              shift and go to state 125
    expresion                      shift and go to state 126

state 103

    (66) expresion -> I64 DOS_PT DOS_PT . POW PARA expresion COMA expresion PARC

    POW             shift and go to state 127


state 104

    (52) statement -> LLAVA instrucciones . LLAVC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) instruccion -> . loop
    (13) instruccion -> . while
    (14) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (15) prints -> . PRINTLN NOT PARA CADENA PARC
    (18) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (19) declaracion -> . LET MUT ID DOS_PT tipo
    (20) declaracion -> . LET MUT ID IGUAL valores
    (21) declaracion -> . LET MUT ID
    (22) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (23) declaracion -> . LET ID DOS_PT tipo
    (24) declaracion -> . LET ID IGUAL valores
    (25) declaracion -> . LET ID
    (26) declaracion -> . ID IGUAL valores
    (31) sent_if -> . IF expresion statement sent_else
    (35) match -> . MATCH expresion casos_match
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64
    (45) return -> . RETURN
    (46) return -> . RETURN expresion
    (47) break -> . BREAK
    (48) break -> . BREAK expresion
    (49) continue -> . CONTINUE
    (50) loop -> . LOOP statement
    (51) while -> . WHILE expresion statement

    LLAVC           shift and go to state 128
    PRINTLN         shift and go to state 14
    LET             shift and go to state 18
    ID              shift and go to state 19
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    RETURN          shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    LOOP            shift and go to state 32
    WHILE           shift and go to state 33

    instruccion                    shift and go to state 34
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13

state 105

    (53) statement -> LLAVA LLAVC .

    PRINTLN         reduce using rule 53 (statement -> LLAVA LLAVC .)
    LET             reduce using rule 53 (statement -> LLAVA LLAVC .)
    ID              reduce using rule 53 (statement -> LLAVA LLAVC .)
    IF              reduce using rule 53 (statement -> LLAVA LLAVC .)
    MATCH           reduce using rule 53 (statement -> LLAVA LLAVC .)
    MENOS           reduce using rule 53 (statement -> LLAVA LLAVC .)
    I64             reduce using rule 53 (statement -> LLAVA LLAVC .)
    PARA            reduce using rule 53 (statement -> LLAVA LLAVC .)
    NOT             reduce using rule 53 (statement -> LLAVA LLAVC .)
    ENTERO          reduce using rule 53 (statement -> LLAVA LLAVC .)
    DECIMAL         reduce using rule 53 (statement -> LLAVA LLAVC .)
    CADENA          reduce using rule 53 (statement -> LLAVA LLAVC .)
    CARACTER        reduce using rule 53 (statement -> LLAVA LLAVC .)
    TRUE            reduce using rule 53 (statement -> LLAVA LLAVC .)
    FALSE           reduce using rule 53 (statement -> LLAVA LLAVC .)
    RETURN          reduce using rule 53 (statement -> LLAVA LLAVC .)
    BREAK           reduce using rule 53 (statement -> LLAVA LLAVC .)
    CONTINUE        reduce using rule 53 (statement -> LLAVA LLAVC .)
    LOOP            reduce using rule 53 (statement -> LLAVA LLAVC .)
    WHILE           reduce using rule 53 (statement -> LLAVA LLAVC .)
    $end            reduce using rule 53 (statement -> LLAVA LLAVC .)
    PT_COMA         reduce using rule 53 (statement -> LLAVA LLAVC .)
    LLAVC           reduce using rule 53 (statement -> LLAVA LLAVC .)
    COMA            reduce using rule 53 (statement -> LLAVA LLAVC .)
    ELSE            reduce using rule 53 (statement -> LLAVA LLAVC .)


state 106

    (51) while -> WHILE expresion statement .

    PRINTLN         reduce using rule 51 (while -> WHILE expresion statement .)
    LET             reduce using rule 51 (while -> WHILE expresion statement .)
    ID              reduce using rule 51 (while -> WHILE expresion statement .)
    IF              reduce using rule 51 (while -> WHILE expresion statement .)
    MATCH           reduce using rule 51 (while -> WHILE expresion statement .)
    MENOS           reduce using rule 51 (while -> WHILE expresion statement .)
    I64             reduce using rule 51 (while -> WHILE expresion statement .)
    PARA            reduce using rule 51 (while -> WHILE expresion statement .)
    NOT             reduce using rule 51 (while -> WHILE expresion statement .)
    ENTERO          reduce using rule 51 (while -> WHILE expresion statement .)
    DECIMAL         reduce using rule 51 (while -> WHILE expresion statement .)
    CADENA          reduce using rule 51 (while -> WHILE expresion statement .)
    CARACTER        reduce using rule 51 (while -> WHILE expresion statement .)
    TRUE            reduce using rule 51 (while -> WHILE expresion statement .)
    FALSE           reduce using rule 51 (while -> WHILE expresion statement .)
    RETURN          reduce using rule 51 (while -> WHILE expresion statement .)
    BREAK           reduce using rule 51 (while -> WHILE expresion statement .)
    CONTINUE        reduce using rule 51 (while -> WHILE expresion statement .)
    LOOP            reduce using rule 51 (while -> WHILE expresion statement .)
    WHILE           reduce using rule 51 (while -> WHILE expresion statement .)
    $end            reduce using rule 51 (while -> WHILE expresion statement .)
    LLAVC           reduce using rule 51 (while -> WHILE expresion statement .)
    COMA            reduce using rule 51 (while -> WHILE expresion statement .)


state 107

    (84) expresion -> expresion PUNTO TO_OWNED PARA . PARC

    PARC            shift and go to state 129


state 108

    (85) expresion -> expresion PUNTO TO_STRING PARA . PARC

    PARC            shift and go to state 130


state 109

    (86) expresion -> expresion PUNTO ABSOLUTO PARA . PARC

    PARC            shift and go to state 131


state 110

    (87) expresion -> expresion PUNTO RAIZ PARA . PARC

    PARC            shift and go to state 132


state 111

    (14) prints -> PRINTLN NOT PARA CADENA . COMA list_exp PARC
    (15) prints -> PRINTLN NOT PARA CADENA . PARC

    COMA            shift and go to state 133
    PARC            shift and go to state 134


state 112

    (18) declaracion -> LET MUT ID DOS_PT . tipo IGUAL valores
    (19) declaracion -> LET MUT ID DOS_PT . tipo
    (54) tipo -> . I64
    (55) tipo -> . F64
    (56) tipo -> . BOOL
    (57) tipo -> . STRING
    (58) tipo -> . STR
    (59) tipo -> . CHAR

    I64             shift and go to state 115
    F64             shift and go to state 116
    BOOL            shift and go to state 117
    STRING          shift and go to state 118
    STR             shift and go to state 119
    CHAR            shift and go to state 120

    tipo                           shift and go to state 135

state 113

    (20) declaracion -> LET MUT ID IGUAL . valores
    (27) valores -> . expresion
    (28) valores -> . sent_if
    (29) valores -> . match
    (30) valores -> . loop
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64
    (31) sent_if -> . IF expresion statement sent_else
    (35) match -> . MATCH expresion casos_match
    (50) loop -> . LOOP statement

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 32

    valores                        shift and go to state 136
    expresion                      shift and go to state 96
    sent_if                        shift and go to state 97
    match                          shift and go to state 98
    loop                           shift and go to state 99

state 114

    (22) declaracion -> LET ID DOS_PT tipo . IGUAL valores
    (23) declaracion -> LET ID DOS_PT tipo .

    IGUAL           shift and go to state 137
    PT_COMA         reduce using rule 23 (declaracion -> LET ID DOS_PT tipo .)


state 115

    (54) tipo -> I64 .

    IGUAL           reduce using rule 54 (tipo -> I64 .)
    PT_COMA         reduce using rule 54 (tipo -> I64 .)


state 116

    (55) tipo -> F64 .

    IGUAL           reduce using rule 55 (tipo -> F64 .)
    PT_COMA         reduce using rule 55 (tipo -> F64 .)


state 117

    (56) tipo -> BOOL .

    IGUAL           reduce using rule 56 (tipo -> BOOL .)
    PT_COMA         reduce using rule 56 (tipo -> BOOL .)


state 118

    (57) tipo -> STRING .

    IGUAL           reduce using rule 57 (tipo -> STRING .)
    PT_COMA         reduce using rule 57 (tipo -> STRING .)


state 119

    (58) tipo -> STR .

    IGUAL           reduce using rule 58 (tipo -> STR .)
    PT_COMA         reduce using rule 58 (tipo -> STR .)


state 120

    (59) tipo -> CHAR .

    IGUAL           reduce using rule 59 (tipo -> CHAR .)
    PT_COMA         reduce using rule 59 (tipo -> CHAR .)


state 121

    (24) declaracion -> LET ID IGUAL valores .

    PT_COMA         reduce using rule 24 (declaracion -> LET ID IGUAL valores .)


state 122

    (31) sent_if -> IF expresion statement sent_else .

    PRINTLN         reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    LET             reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    ID              reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    IF              reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    MATCH           reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    MENOS           reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    I64             reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    PARA            reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    NOT             reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    ENTERO          reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    DECIMAL         reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    CADENA          reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    CARACTER        reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    TRUE            reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    FALSE           reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    RETURN          reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    BREAK           reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    CONTINUE        reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    LOOP            reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    WHILE           reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    $end            reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    PT_COMA         reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    LLAVC           reduce using rule 31 (sent_if -> IF expresion statement sent_else .)
    COMA            reduce using rule 31 (sent_if -> IF expresion statement sent_else .)


state 123

    (32) sent_else -> ELSE . statement
    (33) sent_else -> ELSE . sent_if
    (52) statement -> . LLAVA instrucciones LLAVC
    (53) statement -> . LLAVA LLAVC
    (31) sent_if -> . IF expresion statement sent_else

    LLAVA           shift and go to state 69
    IF              shift and go to state 20

    statement                      shift and go to state 138
    sent_if                        shift and go to state 139

state 124

    (36) casos_match -> LLAVA lista_casos . default LLAVC
    (37) lista_casos -> lista_casos . lista_expresiones ARROW statement COMA
    (38) lista_casos -> lista_casos . lista_expresiones ARROW instruccion COMA
    (43) default -> . GUION_B ARROW statement COMA
    (44) default -> . GUION_B ARROW instruccion COMA
    (41) lista_expresiones -> . lista_expresiones SEP_MATCH expresion
    (42) lista_expresiones -> . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    GUION_B         shift and go to state 142
    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    default                        shift and go to state 140
    lista_expresiones              shift and go to state 141
    expresion                      shift and go to state 126

state 125

    (39) lista_casos -> lista_expresiones . ARROW statement COMA
    (40) lista_casos -> lista_expresiones . ARROW instruccion COMA
    (41) lista_expresiones -> lista_expresiones . SEP_MATCH expresion

    ARROW           shift and go to state 143
    SEP_MATCH       shift and go to state 144


state 126

    (42) lista_expresiones -> expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    ARROW           reduce using rule 42 (lista_expresiones -> expresion .)
    SEP_MATCH       reduce using rule 42 (lista_expresiones -> expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    IGUAL_IGUAL     shift and go to state 42
    NO_IGUAL        shift and go to state 43
    MAYOR           shift and go to state 44
    MENOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR_IGUAL     shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    PUNTO           shift and go to state 50
    AS              shift and go to state 51


state 127

    (66) expresion -> I64 DOS_PT DOS_PT POW . PARA expresion COMA expresion PARC

    PARA            shift and go to state 145


state 128

    (52) statement -> LLAVA instrucciones LLAVC .

    PRINTLN         reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    LET             reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    ID              reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    IF              reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    MATCH           reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    MENOS           reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    I64             reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    PARA            reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    NOT             reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    ENTERO          reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    DECIMAL         reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    CADENA          reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    CARACTER        reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    TRUE            reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    FALSE           reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    RETURN          reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    BREAK           reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    CONTINUE        reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    LOOP            reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    WHILE           reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    $end            reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    PT_COMA         reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    LLAVC           reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    COMA            reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)
    ELSE            reduce using rule 52 (statement -> LLAVA instrucciones LLAVC .)


state 129

    (84) expresion -> expresion PUNTO TO_OWNED PARA PARC .

    MAS             reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MENOS           reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MULTI           reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    DIV             reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MODULO          reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    IGUAL_IGUAL     reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    NO_IGUAL        reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MAYOR           reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MENOR           reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MAYOR_IGUAL     reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MENOR_IGUAL     reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    AND             reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    OR              reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PUNTO           reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    AS              reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PRINTLN         reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    LET             reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    ID              reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    IF              reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    MATCH           reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    I64             reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PARA            reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    NOT             reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    ENTERO          reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    DECIMAL         reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    CADENA          reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    CARACTER        reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    TRUE            reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    FALSE           reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    RETURN          reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    BREAK           reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    CONTINUE        reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    LOOP            reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    WHILE           reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    $end            reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PARC            reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    LLAVA           reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    PT_COMA         reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    LLAVC           reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    ARROW           reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    SEP_MATCH       reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)
    COMA            reduce using rule 84 (expresion -> expresion PUNTO TO_OWNED PARA PARC .)


state 130

    (85) expresion -> expresion PUNTO TO_STRING PARA PARC .

    MAS             reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MENOS           reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MULTI           reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    DIV             reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MODULO          reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    IGUAL_IGUAL     reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    NO_IGUAL        reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MAYOR           reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MENOR           reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MAYOR_IGUAL     reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MENOR_IGUAL     reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    AND             reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    OR              reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PUNTO           reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    AS              reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PRINTLN         reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    LET             reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    ID              reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    IF              reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    MATCH           reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    I64             reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PARA            reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    NOT             reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    ENTERO          reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    DECIMAL         reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    CADENA          reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    CARACTER        reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    TRUE            reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    FALSE           reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    RETURN          reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    BREAK           reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    CONTINUE        reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    LOOP            reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    WHILE           reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    $end            reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PARC            reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    LLAVA           reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    PT_COMA         reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    LLAVC           reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    ARROW           reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    SEP_MATCH       reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)
    COMA            reduce using rule 85 (expresion -> expresion PUNTO TO_STRING PARA PARC .)


state 131

    (86) expresion -> expresion PUNTO ABSOLUTO PARA PARC .

    MAS             reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MENOS           reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MULTI           reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    DIV             reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MODULO          reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    IGUAL_IGUAL     reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    NO_IGUAL        reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MAYOR           reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MENOR           reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MAYOR_IGUAL     reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MENOR_IGUAL     reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    AND             reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    OR              reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    PUNTO           reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    AS              reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    PRINTLN         reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    LET             reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    ID              reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    IF              reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    MATCH           reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    I64             reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    PARA            reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    NOT             reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    ENTERO          reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    DECIMAL         reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    CADENA          reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    CARACTER        reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    TRUE            reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    FALSE           reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    RETURN          reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    BREAK           reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    CONTINUE        reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    LOOP            reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    WHILE           reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    $end            reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    PARC            reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    LLAVA           reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    PT_COMA         reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    LLAVC           reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    ARROW           reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    SEP_MATCH       reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)
    COMA            reduce using rule 86 (expresion -> expresion PUNTO ABSOLUTO PARA PARC .)


state 132

    (87) expresion -> expresion PUNTO RAIZ PARA PARC .

    MAS             reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MENOS           reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MULTI           reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    DIV             reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MODULO          reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    IGUAL_IGUAL     reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    NO_IGUAL        reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MAYOR           reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MENOR           reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MAYOR_IGUAL     reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MENOR_IGUAL     reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    AND             reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    OR              reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    PUNTO           reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    AS              reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    PRINTLN         reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    LET             reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    ID              reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    IF              reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    MATCH           reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    I64             reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    PARA            reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    NOT             reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    ENTERO          reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    DECIMAL         reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    CADENA          reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    CARACTER        reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    TRUE            reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    FALSE           reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    RETURN          reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    BREAK           reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    CONTINUE        reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    LOOP            reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    WHILE           reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    $end            reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    PARC            reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    LLAVA           reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    PT_COMA         reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    LLAVC           reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    ARROW           reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    SEP_MATCH       reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)
    COMA            reduce using rule 87 (expresion -> expresion PUNTO RAIZ PARA PARC .)


state 133

    (14) prints -> PRINTLN NOT PARA CADENA COMA . list_exp PARC
    (16) list_exp -> . list_exp COMA expresion
    (17) list_exp -> . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    list_exp                       shift and go to state 146
    expresion                      shift and go to state 147

state 134

    (15) prints -> PRINTLN NOT PARA CADENA PARC .

    PT_COMA         reduce using rule 15 (prints -> PRINTLN NOT PARA CADENA PARC .)


state 135

    (18) declaracion -> LET MUT ID DOS_PT tipo . IGUAL valores
    (19) declaracion -> LET MUT ID DOS_PT tipo .

    IGUAL           shift and go to state 148
    PT_COMA         reduce using rule 19 (declaracion -> LET MUT ID DOS_PT tipo .)


state 136

    (20) declaracion -> LET MUT ID IGUAL valores .

    PT_COMA         reduce using rule 20 (declaracion -> LET MUT ID IGUAL valores .)


state 137

    (22) declaracion -> LET ID DOS_PT tipo IGUAL . valores
    (27) valores -> . expresion
    (28) valores -> . sent_if
    (29) valores -> . match
    (30) valores -> . loop
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64
    (31) sent_if -> . IF expresion statement sent_else
    (35) match -> . MATCH expresion casos_match
    (50) loop -> . LOOP statement

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 32

    valores                        shift and go to state 149
    expresion                      shift and go to state 96
    sent_if                        shift and go to state 97
    match                          shift and go to state 98
    loop                           shift and go to state 99

state 138

    (32) sent_else -> ELSE statement .

    PRINTLN         reduce using rule 32 (sent_else -> ELSE statement .)
    LET             reduce using rule 32 (sent_else -> ELSE statement .)
    ID              reduce using rule 32 (sent_else -> ELSE statement .)
    IF              reduce using rule 32 (sent_else -> ELSE statement .)
    MATCH           reduce using rule 32 (sent_else -> ELSE statement .)
    MENOS           reduce using rule 32 (sent_else -> ELSE statement .)
    I64             reduce using rule 32 (sent_else -> ELSE statement .)
    PARA            reduce using rule 32 (sent_else -> ELSE statement .)
    NOT             reduce using rule 32 (sent_else -> ELSE statement .)
    ENTERO          reduce using rule 32 (sent_else -> ELSE statement .)
    DECIMAL         reduce using rule 32 (sent_else -> ELSE statement .)
    CADENA          reduce using rule 32 (sent_else -> ELSE statement .)
    CARACTER        reduce using rule 32 (sent_else -> ELSE statement .)
    TRUE            reduce using rule 32 (sent_else -> ELSE statement .)
    FALSE           reduce using rule 32 (sent_else -> ELSE statement .)
    RETURN          reduce using rule 32 (sent_else -> ELSE statement .)
    BREAK           reduce using rule 32 (sent_else -> ELSE statement .)
    CONTINUE        reduce using rule 32 (sent_else -> ELSE statement .)
    LOOP            reduce using rule 32 (sent_else -> ELSE statement .)
    WHILE           reduce using rule 32 (sent_else -> ELSE statement .)
    $end            reduce using rule 32 (sent_else -> ELSE statement .)
    PT_COMA         reduce using rule 32 (sent_else -> ELSE statement .)
    LLAVC           reduce using rule 32 (sent_else -> ELSE statement .)
    COMA            reduce using rule 32 (sent_else -> ELSE statement .)


state 139

    (33) sent_else -> ELSE sent_if .

    PRINTLN         reduce using rule 33 (sent_else -> ELSE sent_if .)
    LET             reduce using rule 33 (sent_else -> ELSE sent_if .)
    ID              reduce using rule 33 (sent_else -> ELSE sent_if .)
    IF              reduce using rule 33 (sent_else -> ELSE sent_if .)
    MATCH           reduce using rule 33 (sent_else -> ELSE sent_if .)
    MENOS           reduce using rule 33 (sent_else -> ELSE sent_if .)
    I64             reduce using rule 33 (sent_else -> ELSE sent_if .)
    PARA            reduce using rule 33 (sent_else -> ELSE sent_if .)
    NOT             reduce using rule 33 (sent_else -> ELSE sent_if .)
    ENTERO          reduce using rule 33 (sent_else -> ELSE sent_if .)
    DECIMAL         reduce using rule 33 (sent_else -> ELSE sent_if .)
    CADENA          reduce using rule 33 (sent_else -> ELSE sent_if .)
    CARACTER        reduce using rule 33 (sent_else -> ELSE sent_if .)
    TRUE            reduce using rule 33 (sent_else -> ELSE sent_if .)
    FALSE           reduce using rule 33 (sent_else -> ELSE sent_if .)
    RETURN          reduce using rule 33 (sent_else -> ELSE sent_if .)
    BREAK           reduce using rule 33 (sent_else -> ELSE sent_if .)
    CONTINUE        reduce using rule 33 (sent_else -> ELSE sent_if .)
    LOOP            reduce using rule 33 (sent_else -> ELSE sent_if .)
    WHILE           reduce using rule 33 (sent_else -> ELSE sent_if .)
    $end            reduce using rule 33 (sent_else -> ELSE sent_if .)
    PT_COMA         reduce using rule 33 (sent_else -> ELSE sent_if .)
    LLAVC           reduce using rule 33 (sent_else -> ELSE sent_if .)
    COMA            reduce using rule 33 (sent_else -> ELSE sent_if .)


state 140

    (36) casos_match -> LLAVA lista_casos default . LLAVC

    LLAVC           shift and go to state 150


state 141

    (37) lista_casos -> lista_casos lista_expresiones . ARROW statement COMA
    (38) lista_casos -> lista_casos lista_expresiones . ARROW instruccion COMA
    (41) lista_expresiones -> lista_expresiones . SEP_MATCH expresion

    ARROW           shift and go to state 151
    SEP_MATCH       shift and go to state 144


state 142

    (43) default -> GUION_B . ARROW statement COMA
    (44) default -> GUION_B . ARROW instruccion COMA

    ARROW           shift and go to state 152


state 143

    (39) lista_casos -> lista_expresiones ARROW . statement COMA
    (40) lista_casos -> lista_expresiones ARROW . instruccion COMA
    (52) statement -> . LLAVA instrucciones LLAVC
    (53) statement -> . LLAVA LLAVC
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) instruccion -> . loop
    (13) instruccion -> . while
    (14) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (15) prints -> . PRINTLN NOT PARA CADENA PARC
    (18) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (19) declaracion -> . LET MUT ID DOS_PT tipo
    (20) declaracion -> . LET MUT ID IGUAL valores
    (21) declaracion -> . LET MUT ID
    (22) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (23) declaracion -> . LET ID DOS_PT tipo
    (24) declaracion -> . LET ID IGUAL valores
    (25) declaracion -> . LET ID
    (26) declaracion -> . ID IGUAL valores
    (31) sent_if -> . IF expresion statement sent_else
    (35) match -> . MATCH expresion casos_match
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64
    (45) return -> . RETURN
    (46) return -> . RETURN expresion
    (47) break -> . BREAK
    (48) break -> . BREAK expresion
    (49) continue -> . CONTINUE
    (50) loop -> . LOOP statement
    (51) while -> . WHILE expresion statement

    LLAVA           shift and go to state 69
    PRINTLN         shift and go to state 14
    LET             shift and go to state 18
    ID              shift and go to state 19
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    RETURN          shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    LOOP            shift and go to state 32
    WHILE           shift and go to state 33

    statement                      shift and go to state 153
    instruccion                    shift and go to state 154
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13

state 144

    (41) lista_expresiones -> lista_expresiones SEP_MATCH . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 155

state 145

    (66) expresion -> I64 DOS_PT DOS_PT POW PARA . expresion COMA expresion PARC
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 156

state 146

    (14) prints -> PRINTLN NOT PARA CADENA COMA list_exp . PARC
    (16) list_exp -> list_exp . COMA expresion

    PARC            shift and go to state 158
    COMA            shift and go to state 157


state 147

    (17) list_exp -> expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    PARC            reduce using rule 17 (list_exp -> expresion .)
    COMA            reduce using rule 17 (list_exp -> expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    IGUAL_IGUAL     shift and go to state 42
    NO_IGUAL        shift and go to state 43
    MAYOR           shift and go to state 44
    MENOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR_IGUAL     shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    PUNTO           shift and go to state 50
    AS              shift and go to state 51


state 148

    (18) declaracion -> LET MUT ID DOS_PT tipo IGUAL . valores
    (27) valores -> . expresion
    (28) valores -> . sent_if
    (29) valores -> . match
    (30) valores -> . loop
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64
    (31) sent_if -> . IF expresion statement sent_else
    (35) match -> . MATCH expresion casos_match
    (50) loop -> . LOOP statement

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    LOOP            shift and go to state 32

    valores                        shift and go to state 159
    expresion                      shift and go to state 96
    sent_if                        shift and go to state 97
    match                          shift and go to state 98
    loop                           shift and go to state 99

state 149

    (22) declaracion -> LET ID DOS_PT tipo IGUAL valores .

    PT_COMA         reduce using rule 22 (declaracion -> LET ID DOS_PT tipo IGUAL valores .)


state 150

    (36) casos_match -> LLAVA lista_casos default LLAVC .

    PRINTLN         reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    LET             reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    ID              reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    IF              reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    MATCH           reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    MENOS           reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    I64             reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    PARA            reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    NOT             reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    ENTERO          reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    DECIMAL         reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    CADENA          reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    CARACTER        reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    TRUE            reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    FALSE           reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    RETURN          reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    BREAK           reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    CONTINUE        reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    LOOP            reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    WHILE           reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    $end            reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    PT_COMA         reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    LLAVC           reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)
    COMA            reduce using rule 36 (casos_match -> LLAVA lista_casos default LLAVC .)


state 151

    (37) lista_casos -> lista_casos lista_expresiones ARROW . statement COMA
    (38) lista_casos -> lista_casos lista_expresiones ARROW . instruccion COMA
    (52) statement -> . LLAVA instrucciones LLAVC
    (53) statement -> . LLAVA LLAVC
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) instruccion -> . loop
    (13) instruccion -> . while
    (14) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (15) prints -> . PRINTLN NOT PARA CADENA PARC
    (18) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (19) declaracion -> . LET MUT ID DOS_PT tipo
    (20) declaracion -> . LET MUT ID IGUAL valores
    (21) declaracion -> . LET MUT ID
    (22) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (23) declaracion -> . LET ID DOS_PT tipo
    (24) declaracion -> . LET ID IGUAL valores
    (25) declaracion -> . LET ID
    (26) declaracion -> . ID IGUAL valores
    (31) sent_if -> . IF expresion statement sent_else
    (35) match -> . MATCH expresion casos_match
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64
    (45) return -> . RETURN
    (46) return -> . RETURN expresion
    (47) break -> . BREAK
    (48) break -> . BREAK expresion
    (49) continue -> . CONTINUE
    (50) loop -> . LOOP statement
    (51) while -> . WHILE expresion statement

    LLAVA           shift and go to state 69
    PRINTLN         shift and go to state 14
    LET             shift and go to state 18
    ID              shift and go to state 19
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    RETURN          shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    LOOP            shift and go to state 32
    WHILE           shift and go to state 33

    statement                      shift and go to state 160
    instruccion                    shift and go to state 161
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13

state 152

    (43) default -> GUION_B ARROW . statement COMA
    (44) default -> GUION_B ARROW . instruccion COMA
    (52) statement -> . LLAVA instrucciones LLAVC
    (53) statement -> . LLAVA LLAVC
    (4) instruccion -> . prints PT_COMA
    (5) instruccion -> . declaracion PT_COMA
    (6) instruccion -> . sent_if
    (7) instruccion -> . match
    (8) instruccion -> . expresion
    (9) instruccion -> . return PT_COMA
    (10) instruccion -> . break PT_COMA
    (11) instruccion -> . continue PT_COMA
    (12) instruccion -> . loop
    (13) instruccion -> . while
    (14) prints -> . PRINTLN NOT PARA CADENA COMA list_exp PARC
    (15) prints -> . PRINTLN NOT PARA CADENA PARC
    (18) declaracion -> . LET MUT ID DOS_PT tipo IGUAL valores
    (19) declaracion -> . LET MUT ID DOS_PT tipo
    (20) declaracion -> . LET MUT ID IGUAL valores
    (21) declaracion -> . LET MUT ID
    (22) declaracion -> . LET ID DOS_PT tipo IGUAL valores
    (23) declaracion -> . LET ID DOS_PT tipo
    (24) declaracion -> . LET ID IGUAL valores
    (25) declaracion -> . LET ID
    (26) declaracion -> . ID IGUAL valores
    (31) sent_if -> . IF expresion statement sent_else
    (35) match -> . MATCH expresion casos_match
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64
    (45) return -> . RETURN
    (46) return -> . RETURN expresion
    (47) break -> . BREAK
    (48) break -> . BREAK expresion
    (49) continue -> . CONTINUE
    (50) loop -> . LOOP statement
    (51) while -> . WHILE expresion statement

    LLAVA           shift and go to state 69
    PRINTLN         shift and go to state 14
    LET             shift and go to state 18
    ID              shift and go to state 19
    IF              shift and go to state 20
    MATCH           shift and go to state 21
    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    RETURN          shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    LOOP            shift and go to state 32
    WHILE           shift and go to state 33

    statement                      shift and go to state 162
    instruccion                    shift and go to state 163
    prints                         shift and go to state 4
    declaracion                    shift and go to state 5
    sent_if                        shift and go to state 6
    match                          shift and go to state 7
    expresion                      shift and go to state 8
    return                         shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    loop                           shift and go to state 12
    while                          shift and go to state 13

state 153

    (39) lista_casos -> lista_expresiones ARROW statement . COMA

    COMA            shift and go to state 164


state 154

    (40) lista_casos -> lista_expresiones ARROW instruccion . COMA

    COMA            shift and go to state 165


state 155

    (41) lista_expresiones -> lista_expresiones SEP_MATCH expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    ARROW           reduce using rule 41 (lista_expresiones -> lista_expresiones SEP_MATCH expresion .)
    SEP_MATCH       reduce using rule 41 (lista_expresiones -> lista_expresiones SEP_MATCH expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    IGUAL_IGUAL     shift and go to state 42
    NO_IGUAL        shift and go to state 43
    MAYOR           shift and go to state 44
    MENOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR_IGUAL     shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    PUNTO           shift and go to state 50
    AS              shift and go to state 51


state 156

    (66) expresion -> I64 DOS_PT DOS_PT POW PARA expresion . COMA expresion PARC
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    COMA            shift and go to state 166
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    IGUAL_IGUAL     shift and go to state 42
    NO_IGUAL        shift and go to state 43
    MAYOR           shift and go to state 44
    MENOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR_IGUAL     shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    PUNTO           shift and go to state 50
    AS              shift and go to state 51


state 157

    (16) list_exp -> list_exp COMA . expresion
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 167

state 158

    (14) prints -> PRINTLN NOT PARA CADENA COMA list_exp PARC .

    PT_COMA         reduce using rule 14 (prints -> PRINTLN NOT PARA CADENA COMA list_exp PARC .)


state 159

    (18) declaracion -> LET MUT ID DOS_PT tipo IGUAL valores .

    PT_COMA         reduce using rule 18 (declaracion -> LET MUT ID DOS_PT tipo IGUAL valores .)


state 160

    (37) lista_casos -> lista_casos lista_expresiones ARROW statement . COMA

    COMA            shift and go to state 168


state 161

    (38) lista_casos -> lista_casos lista_expresiones ARROW instruccion . COMA

    COMA            shift and go to state 169


state 162

    (43) default -> GUION_B ARROW statement . COMA

    COMA            shift and go to state 170


state 163

    (44) default -> GUION_B ARROW instruccion . COMA

    COMA            shift and go to state 171


state 164

    (39) lista_casos -> lista_expresiones ARROW statement COMA .

    GUION_B         reduce using rule 39 (lista_casos -> lista_expresiones ARROW statement COMA .)
    MENOS           reduce using rule 39 (lista_casos -> lista_expresiones ARROW statement COMA .)
    I64             reduce using rule 39 (lista_casos -> lista_expresiones ARROW statement COMA .)
    PARA            reduce using rule 39 (lista_casos -> lista_expresiones ARROW statement COMA .)
    NOT             reduce using rule 39 (lista_casos -> lista_expresiones ARROW statement COMA .)
    ENTERO          reduce using rule 39 (lista_casos -> lista_expresiones ARROW statement COMA .)
    DECIMAL         reduce using rule 39 (lista_casos -> lista_expresiones ARROW statement COMA .)
    ID              reduce using rule 39 (lista_casos -> lista_expresiones ARROW statement COMA .)
    CADENA          reduce using rule 39 (lista_casos -> lista_expresiones ARROW statement COMA .)
    CARACTER        reduce using rule 39 (lista_casos -> lista_expresiones ARROW statement COMA .)
    TRUE            reduce using rule 39 (lista_casos -> lista_expresiones ARROW statement COMA .)
    FALSE           reduce using rule 39 (lista_casos -> lista_expresiones ARROW statement COMA .)


state 165

    (40) lista_casos -> lista_expresiones ARROW instruccion COMA .

    GUION_B         reduce using rule 40 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    MENOS           reduce using rule 40 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    I64             reduce using rule 40 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    PARA            reduce using rule 40 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    NOT             reduce using rule 40 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    ENTERO          reduce using rule 40 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    DECIMAL         reduce using rule 40 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    ID              reduce using rule 40 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    CADENA          reduce using rule 40 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    CARACTER        reduce using rule 40 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    TRUE            reduce using rule 40 (lista_casos -> lista_expresiones ARROW instruccion COMA .)
    FALSE           reduce using rule 40 (lista_casos -> lista_expresiones ARROW instruccion COMA .)


state 166

    (66) expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA . expresion PARC
    (60) expresion -> . MENOS expresion
    (61) expresion -> . expresion MAS expresion
    (62) expresion -> . expresion MENOS expresion
    (63) expresion -> . expresion MULTI expresion
    (64) expresion -> . expresion DIV expresion
    (65) expresion -> . expresion MODULO expresion
    (66) expresion -> . I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC
    (67) expresion -> . PARA expresion PARC
    (68) expresion -> . expresion IGUAL_IGUAL expresion
    (69) expresion -> . expresion NO_IGUAL expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYOR_IGUAL expresion
    (73) expresion -> . expresion MENOR_IGUAL expresion
    (74) expresion -> . expresion AND expresion
    (75) expresion -> . expresion OR expresion
    (76) expresion -> . NOT expresion
    (77) expresion -> . ENTERO
    (78) expresion -> . DECIMAL
    (79) expresion -> . ID
    (80) expresion -> . CADENA
    (81) expresion -> . CARACTER
    (82) expresion -> . TRUE
    (83) expresion -> . FALSE
    (84) expresion -> . expresion PUNTO TO_OWNED PARA PARC
    (85) expresion -> . expresion PUNTO TO_STRING PARA PARC
    (86) expresion -> . expresion PUNTO ABSOLUTO PARA PARC
    (87) expresion -> . expresion PUNTO RAIZ PARA PARC
    (88) expresion -> . expresion AS F64
    (89) expresion -> . expresion AS I64

    MENOS           shift and go to state 22
    I64             shift and go to state 23
    PARA            shift and go to state 16
    NOT             shift and go to state 15
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    ID              shift and go to state 57
    CADENA          shift and go to state 17
    CARACTER        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28

    expresion                      shift and go to state 172

state 167

    (16) list_exp -> list_exp COMA expresion .
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    PARC            reduce using rule 16 (list_exp -> list_exp COMA expresion .)
    COMA            reduce using rule 16 (list_exp -> list_exp COMA expresion .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    IGUAL_IGUAL     shift and go to state 42
    NO_IGUAL        shift and go to state 43
    MAYOR           shift and go to state 44
    MENOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR_IGUAL     shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    PUNTO           shift and go to state 50
    AS              shift and go to state 51


state 168

    (37) lista_casos -> lista_casos lista_expresiones ARROW statement COMA .

    GUION_B         reduce using rule 37 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    MENOS           reduce using rule 37 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    I64             reduce using rule 37 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    PARA            reduce using rule 37 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    NOT             reduce using rule 37 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    ENTERO          reduce using rule 37 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    DECIMAL         reduce using rule 37 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    ID              reduce using rule 37 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    CADENA          reduce using rule 37 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    CARACTER        reduce using rule 37 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    TRUE            reduce using rule 37 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)
    FALSE           reduce using rule 37 (lista_casos -> lista_casos lista_expresiones ARROW statement COMA .)


state 169

    (38) lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .

    GUION_B         reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    MENOS           reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    I64             reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    PARA            reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    NOT             reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    ENTERO          reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    DECIMAL         reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    ID              reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    CADENA          reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    CARACTER        reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    TRUE            reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)
    FALSE           reduce using rule 38 (lista_casos -> lista_casos lista_expresiones ARROW instruccion COMA .)


state 170

    (43) default -> GUION_B ARROW statement COMA .

    LLAVC           reduce using rule 43 (default -> GUION_B ARROW statement COMA .)


state 171

    (44) default -> GUION_B ARROW instruccion COMA .

    LLAVC           reduce using rule 44 (default -> GUION_B ARROW instruccion COMA .)


state 172

    (66) expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion . PARC
    (61) expresion -> expresion . MAS expresion
    (62) expresion -> expresion . MENOS expresion
    (63) expresion -> expresion . MULTI expresion
    (64) expresion -> expresion . DIV expresion
    (65) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . IGUAL_IGUAL expresion
    (69) expresion -> expresion . NO_IGUAL expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYOR_IGUAL expresion
    (73) expresion -> expresion . MENOR_IGUAL expresion
    (74) expresion -> expresion . AND expresion
    (75) expresion -> expresion . OR expresion
    (84) expresion -> expresion . PUNTO TO_OWNED PARA PARC
    (85) expresion -> expresion . PUNTO TO_STRING PARA PARC
    (86) expresion -> expresion . PUNTO ABSOLUTO PARA PARC
    (87) expresion -> expresion . PUNTO RAIZ PARA PARC
    (88) expresion -> expresion . AS F64
    (89) expresion -> expresion . AS I64

    PARC            shift and go to state 173
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    MULTI           shift and go to state 39
    DIV             shift and go to state 40
    MODULO          shift and go to state 41
    IGUAL_IGUAL     shift and go to state 42
    NO_IGUAL        shift and go to state 43
    MAYOR           shift and go to state 44
    MENOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR_IGUAL     shift and go to state 47
    AND             shift and go to state 48
    OR              shift and go to state 49
    PUNTO           shift and go to state 50
    AS              shift and go to state 51


state 173

    (66) expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .

    MAS             reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MENOS           reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MULTI           reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    DIV             reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MODULO          reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    IGUAL_IGUAL     reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    NO_IGUAL        reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MAYOR           reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MENOR           reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MAYOR_IGUAL     reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MENOR_IGUAL     reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    AND             reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    OR              reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PUNTO           reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    AS              reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PRINTLN         reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    LET             reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    ID              reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    IF              reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    MATCH           reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    I64             reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PARA            reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    NOT             reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    ENTERO          reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    DECIMAL         reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    CADENA          reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    CARACTER        reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    TRUE            reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    FALSE           reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    RETURN          reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    BREAK           reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    CONTINUE        reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    LOOP            reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    WHILE           reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    $end            reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PARC            reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    LLAVA           reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    PT_COMA         reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    LLAVC           reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    ARROW           reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    SEP_MATCH       reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)
    COMA            reduce using rule 66 (expresion -> I64 DOS_PT DOS_PT POW PARA expresion COMA expresion PARC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MENOS in state 8 resolved as shift
